// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Conv1_layer (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv1_input_address0,
        conv1_input_ce0,
        conv1_input_q0,
        conv1_input_address1,
        conv1_input_ce1,
        conv1_input_q1,
        conv1_output_address0,
        conv1_output_ce0,
        conv1_output_we0,
        conv1_output_d0,
        conv1_output_q0
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_state2 = 16'd2;
parameter    ap_ST_fsm_pp0_stage0 = 16'd4;
parameter    ap_ST_fsm_pp0_stage1 = 16'd8;
parameter    ap_ST_fsm_pp0_stage2 = 16'd16;
parameter    ap_ST_fsm_pp0_stage3 = 16'd32;
parameter    ap_ST_fsm_pp0_stage4 = 16'd64;
parameter    ap_ST_fsm_pp0_stage5 = 16'd128;
parameter    ap_ST_fsm_pp0_stage6 = 16'd256;
parameter    ap_ST_fsm_pp0_stage7 = 16'd512;
parameter    ap_ST_fsm_pp0_stage8 = 16'd1024;
parameter    ap_ST_fsm_pp0_stage9 = 16'd2048;
parameter    ap_ST_fsm_pp0_stage10 = 16'd4096;
parameter    ap_ST_fsm_pp0_stage11 = 16'd8192;
parameter    ap_ST_fsm_pp0_stage12 = 16'd16384;
parameter    ap_ST_fsm_state45 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] conv1_input_address0;
output   conv1_input_ce0;
input  [31:0] conv1_input_q0;
output  [9:0] conv1_input_address1;
output   conv1_input_ce1;
input  [31:0] conv1_input_q1;
output  [10:0] conv1_output_address0;
output   conv1_output_ce0;
output   conv1_output_we0;
output  [31:0] conv1_output_d0;
input  [31:0] conv1_output_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] conv1_input_address0;
reg conv1_input_ce0;
reg[9:0] conv1_input_address1;
reg conv1_input_ce1;
reg[10:0] conv1_output_address0;
reg conv1_output_ce0;
reg conv1_output_we0;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [9:0] indvar_flatten_reg_464;
reg   [4:0] row_1_reg_475;
reg   [4:0] column_1_reg_487;
reg   [31:0] reg_515;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_state17_pp0_stage1_iter1;
wire    ap_block_state30_pp0_stage1_iter2;
wire    ap_block_state43_pp0_stage1_iter3;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] exitcond_flatten_reg_1569;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state5_pp0_stage2_iter0;
wire    ap_block_state18_pp0_stage2_iter1;
wire    ap_block_state31_pp0_stage2_iter2;
wire    ap_block_state44_pp0_stage2_iter3;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state6_pp0_stage3_iter0;
wire    ap_block_state19_pp0_stage3_iter1;
wire    ap_block_state32_pp0_stage3_iter2;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state7_pp0_stage4_iter0;
wire    ap_block_state20_pp0_stage4_iter1;
wire    ap_block_state33_pp0_stage4_iter2;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state8_pp0_stage5_iter0;
wire    ap_block_state21_pp0_stage5_iter1;
wire    ap_block_state34_pp0_stage5_iter2;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state9_pp0_stage6_iter0;
wire    ap_block_state22_pp0_stage6_iter1;
wire    ap_block_state35_pp0_stage6_iter2;
wire    ap_block_pp0_stage6_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state10_pp0_stage7_iter0;
wire    ap_block_state23_pp0_stage7_iter1;
wire    ap_block_state36_pp0_stage7_iter2;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state11_pp0_stage8_iter0;
wire    ap_block_state24_pp0_stage8_iter1;
wire    ap_block_state37_pp0_stage8_iter2;
wire    ap_block_pp0_stage8_11001;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state12_pp0_stage9_iter0;
wire    ap_block_state25_pp0_stage9_iter1;
wire    ap_block_state38_pp0_stage9_iter2;
wire    ap_block_pp0_stage9_11001;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state13_pp0_stage10_iter0;
wire    ap_block_state26_pp0_stage10_iter1;
wire    ap_block_state39_pp0_stage10_iter2;
wire    ap_block_pp0_stage10_11001;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state14_pp0_stage11_iter0;
wire    ap_block_state27_pp0_stage11_iter1;
wire    ap_block_state40_pp0_stage11_iter2;
wire    ap_block_pp0_stage11_11001;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state15_pp0_stage12_iter0;
wire    ap_block_state28_pp0_stage12_iter1;
wire    ap_block_state41_pp0_stage12_iter2;
wire    ap_block_pp0_stage12_11001;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state16_pp0_stage0_iter1;
wire    ap_block_state29_pp0_stage0_iter2;
wire    ap_block_state42_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] reg_520;
wire   [31:0] grp_fu_507_p2;
reg   [31:0] reg_525;
wire   [31:0] grp_fu_511_p2;
reg   [31:0] reg_531;
reg   [31:0] reg_537;
reg   [31:0] reg_542;
reg   [31:0] reg_547;
reg   [31:0] reg_553;
reg   [31:0] reg_559;
reg   [31:0] reg_565;
wire   [31:0] grp_fu_498_p2;
reg   [31:0] reg_571;
reg   [31:0] reg_577;
reg   [0:0] exitcond_flatten_reg_1569_pp0_iter1_reg;
wire   [31:0] grp_fu_502_p2;
reg   [31:0] reg_583;
reg   [31:0] reg_589;
reg   [31:0] reg_595;
wire   [0:0] exitcond4_fu_600_p2;
wire    ap_CS_fsm_state2;
wire   [1:0] channels_9_fu_606_p2;
reg   [1:0] channels_9_reg_1549;
wire  signed [8:0] tmp_211_cast_fu_642_p1;
reg  signed [8:0] tmp_211_cast_reg_1554;
wire   [31:0] tmp_40_fu_646_p5;
reg   [31:0] tmp_40_reg_1559;
wire   [4:0] row_1_3_fu_658_p2;
reg   [4:0] row_1_3_reg_1564;
wire   [0:0] exitcond_flatten_fu_664_p2;
reg   [0:0] exitcond_flatten_reg_1569_pp0_iter2_reg;
reg   [0:0] exitcond_flatten_reg_1569_pp0_iter3_reg;
wire   [9:0] indvar_flatten_next_fu_670_p2;
reg   [9:0] indvar_flatten_next_reg_1573;
wire   [0:0] exitcond_fu_676_p2;
reg   [0:0] exitcond_reg_1578;
wire   [4:0] column_mid2_fu_682_p3;
reg   [4:0] column_mid2_reg_1586;
wire   [4:0] tmp_mid2_fu_690_p3;
reg   [4:0] tmp_mid2_reg_1593;
wire   [10:0] tmp_180_fu_726_p2;
reg   [10:0] tmp_180_reg_1598;
wire   [10:0] tmp_41_cast_fu_767_p1;
reg   [10:0] tmp_41_cast_reg_1605;
reg   [10:0] conv1_output_addr_reg_1618;
reg   [10:0] conv1_output_addr_reg_1618_pp0_iter1_reg;
reg   [10:0] conv1_output_addr_reg_1618_pp0_iter2_reg;
reg   [10:0] conv1_output_addr_reg_1618_pp0_iter3_reg;
wire   [4:0] column_1_3_fu_793_p2;
reg   [4:0] column_1_3_reg_1623;
wire   [10:0] tmp_69_0_1_cast_fu_799_p1;
reg   [10:0] tmp_69_0_1_cast_reg_1628;
reg   [31:0] conv1_output_load_reg_1641;
wire   [10:0] tmp_69_0_3_cast_fu_819_p1;
reg   [10:0] tmp_69_0_3_cast_reg_1646;
wire   [10:0] tmp_69_0_4_cast_fu_838_p1;
reg   [10:0] tmp_69_0_4_cast_reg_1659;
wire   [10:0] tmp_183_fu_888_p2;
reg   [10:0] tmp_183_reg_1672;
wire   [10:0] tmp_69_0_2_cast_fu_935_p1;
reg   [10:0] tmp_69_0_2_cast_reg_1684;
wire   [10:0] tmp_186_fu_1031_p2;
reg   [10:0] tmp_186_reg_1707;
wire   [4:0] tmp_66_3_mid2_v_fu_1044_p2;
reg   [4:0] tmp_66_3_mid2_v_reg_1714;
wire   [4:0] tmp_66_4_mid2_v_fu_1057_p2;
reg   [4:0] tmp_66_4_mid2_v_reg_1720;
wire   [10:0] tmp_189_fu_1175_p2;
reg   [10:0] tmp_189_reg_1746;
wire   [10:0] tmp_194_fu_1255_p2;
reg   [10:0] tmp_194_reg_1763;
wire   [10:0] tmp_197_fu_1259_p2;
reg   [10:0] tmp_197_reg_1768;
wire   [10:0] tmp_203_fu_1264_p2;
reg   [10:0] tmp_203_reg_1773;
wire   [10:0] tmp_204_fu_1269_p2;
reg   [10:0] tmp_204_reg_1778;
wire   [10:0] tmp_206_fu_1273_p2;
reg   [10:0] tmp_206_reg_1783;
wire   [10:0] tmp_208_fu_1286_p2;
reg   [10:0] tmp_208_reg_1793;
wire   [10:0] tmp_213_fu_1300_p2;
reg   [10:0] tmp_213_reg_1803;
wire   [10:0] tmp_217_fu_1305_p2;
reg   [10:0] tmp_217_reg_1808;
wire   [10:0] tmp_218_fu_1309_p2;
reg   [10:0] tmp_218_reg_1813;
reg   [31:0] tmp6_reg_1818;
reg   [31:0] tmp9_reg_1833;
reg   [31:0] tmp3_reg_1858;
reg   [31:0] tmp19_reg_1878;
reg   [31:0] tmp_70_3_4_reg_1883;
reg   [31:0] tmp24_reg_1888;
reg   [31:0] tmp5_reg_1893;
reg   [31:0] tmp8_reg_1898;
reg   [31:0] tmp15_reg_1903;
reg   [31:0] tmp21_reg_1908;
reg   [31:0] tmp2_reg_1913;
reg   [31:0] tmp7_reg_1918;
reg   [31:0] tmp14_reg_1923;
reg   [31:0] tmp20_reg_1928;
reg   [31:0] tmp1_reg_1933;
reg    ap_enable_reg_pp0_iter2;
reg   [31:0] tmp13_reg_1938;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage2_subdone;
reg    ap_enable_reg_pp0_iter3;
reg   [1:0] channels_reg_452;
wire    ap_CS_fsm_state45;
reg   [9:0] ap_phi_mux_indvar_flatten_phi_fu_468_p4;
wire    ap_block_pp0_stage0;
reg   [4:0] ap_phi_mux_row_1_phi_fu_479_p4;
reg   [4:0] ap_phi_mux_column_1_phi_fu_491_p4;
wire   [63:0] tmp_231_cast_fu_777_p1;
wire   [63:0] tmp_236_cast_fu_788_p1;
wire   [63:0] tmp_237_cast_fu_809_p1;
wire   [63:0] tmp_247_cast_fu_828_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] tmp_252_cast_fu_847_p1;
wire   [63:0] tmp_238_cast_fu_925_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] tmp_243_cast_fu_945_p1;
wire   [63:0] tmp_248_cast_fu_967_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] tmp_253_cast_fu_989_p1;
wire  signed [63:0] tmp_233_cast_fu_1068_p1;
wire    ap_block_pp0_stage4;
wire  signed [63:0] tmp_239_cast_fu_1078_p1;
wire  signed [63:0] tmp_249_cast_fu_1113_p1;
wire    ap_block_pp0_stage5;
wire  signed [63:0] tmp_254_cast_fu_1122_p1;
wire  signed [63:0] tmp_234_cast_fu_1186_p1;
wire    ap_block_pp0_stage6;
wire  signed [63:0] tmp_240_cast_fu_1196_p1;
wire  signed [63:0] tmp_245_cast_fu_1281_p1;
wire    ap_block_pp0_stage7;
wire  signed [63:0] tmp_250_cast_fu_1295_p1;
wire  signed [63:0] tmp_235_cast_fu_1340_p1;
wire    ap_block_pp0_stage8;
wire  signed [63:0] tmp_241_cast_fu_1344_p1;
wire  signed [63:0] tmp_246_cast_fu_1374_p1;
wire    ap_block_pp0_stage9;
wire  signed [63:0] tmp_251_cast_fu_1378_p1;
wire   [63:0] tmp_242_cast_fu_1408_p1;
wire    ap_block_pp0_stage10;
wire  signed [63:0] tmp_256_cast_fu_1412_p1;
wire   [63:0] tmp_232_cast_fu_1442_p1;
wire    ap_block_pp0_stage11;
wire  signed [63:0] tmp_244_cast_fu_1446_p1;
wire  signed [63:0] tmp_255_cast_fu_1489_p1;
wire    ap_block_pp0_stage12;
reg   [31:0] grp_fu_498_p0;
reg   [31:0] grp_fu_498_p1;
reg   [31:0] grp_fu_502_p0;
reg   [31:0] grp_fu_502_p1;
reg   [31:0] grp_fu_507_p1;
wire   [31:0] tmp_42_fu_894_p5;
wire   [31:0] tmp_47_fu_950_p5;
wire   [31:0] tmp_50_fu_1083_p5;
wire   [31:0] tmp_52_fu_1127_p5;
wire   [31:0] tmp_54_fu_1201_p5;
wire   [31:0] tmp_57_fu_1314_p5;
wire   [31:0] tmp_59_fu_1348_p5;
wire   [31:0] tmp_61_fu_1382_p5;
wire   [31:0] tmp_64_fu_1416_p5;
wire   [31:0] tmp_66_fu_1450_p5;
wire   [31:0] tmp_46_fu_1476_p5;
wire   [31:0] tmp_49_fu_1506_p5;
wire   [31:0] tmp_63_fu_1532_p5;
reg   [31:0] grp_fu_511_p1;
wire   [31:0] tmp_44_fu_907_p5;
wire   [31:0] tmp_48_fu_972_p5;
wire   [31:0] tmp_51_fu_1096_p5;
wire   [31:0] tmp_53_fu_1140_p5;
wire   [31:0] tmp_55_fu_1214_p5;
wire   [31:0] tmp_58_fu_1327_p5;
wire   [31:0] tmp_60_fu_1361_p5;
wire   [31:0] tmp_62_fu_1395_p5;
wire   [31:0] tmp_65_fu_1429_p5;
wire   [31:0] tmp_67_fu_1463_p5;
wire   [31:0] tmp_68_fu_1493_p5;
wire   [31:0] tmp_56_fu_1519_p5;
wire   [6:0] tmp_fu_612_p3;
wire   [4:0] tmp_s_fu_624_p3;
wire   [7:0] p_shl_cast_fu_620_p1;
wire   [7:0] p_shl2_cast_fu_632_p1;
wire   [7:0] tmp_179_fu_636_p2;
wire   [9:0] tmp_76_fu_702_p3;
wire   [6:0] tmp_77_fu_714_p3;
wire   [10:0] p_shl13_cast_fu_710_p1;
wire   [10:0] p_shl14_cast_fu_722_p1;
wire   [8:0] tmp_mid2_cast_fu_698_p1;
wire   [8:0] tmp_181_fu_732_p2;
wire   [6:0] tmp_78_fu_737_p1;
wire   [11:0] p_shl11_cast_fu_741_p3;
wire   [11:0] p_shl12_cast_fu_749_p3;
wire   [10:0] tmp_193_fu_771_p2;
wire   [11:0] tmp_182_fu_757_p2;
wire   [11:0] tmp_41_cast1_fu_763_p1;
wire   [11:0] tmp_198_fu_782_p2;
wire   [10:0] tmp_199_fu_803_p2;
wire   [4:0] tmp_68_0_3_fu_814_p2;
wire   [10:0] tmp_209_fu_823_p2;
wire   [4:0] tmp_68_0_4_fu_833_p2;
wire   [10:0] tmp_214_fu_842_p2;
wire   [4:0] row_4_mid1_fu_852_p2;
wire   [4:0] tmp_66_1_mid2_fu_858_p3;
wire   [9:0] tmp_79_fu_864_p3;
wire   [6:0] tmp_80_fu_876_p3;
wire   [10:0] p_shl9_cast_fu_872_p1;
wire   [10:0] p_shl10_cast_fu_884_p1;
wire   [10:0] tmp_200_fu_920_p2;
wire   [4:0] tmp_68_0_2_fu_930_p2;
wire   [10:0] tmp_205_fu_939_p2;
wire   [10:0] tmp_210_fu_963_p2;
wire   [10:0] tmp_215_fu_985_p2;
wire   [4:0] tmp_66_2_mid2_v_v_ca_fu_994_p3;
wire   [4:0] tmp_66_2_mid2_v_fu_1001_p2;
wire   [9:0] tmp_184_fu_1007_p3;
wire   [6:0] tmp_185_fu_1019_p3;
wire   [10:0] p_shl7_cast_fu_1015_p1;
wire   [10:0] p_shl8_cast_fu_1027_p1;
wire   [4:0] tmp_66_3_mid2_v_v_ca_fu_1037_p3;
wire   [4:0] tmp_66_4_mid2_v_v_ca_fu_1050_p3;
wire   [10:0] tmp_195_fu_1063_p2;
wire   [10:0] tmp_201_fu_1073_p2;
wire   [10:0] tmp_211_fu_1109_p2;
wire   [10:0] tmp_216_fu_1118_p2;
wire   [9:0] tmp_187_fu_1153_p3;
wire   [6:0] tmp_188_fu_1164_p3;
wire   [10:0] p_shl5_cast_fu_1160_p1;
wire   [10:0] p_shl6_cast_fu_1171_p1;
wire   [10:0] tmp_196_fu_1181_p2;
wire   [10:0] tmp_202_fu_1191_p2;
wire   [9:0] tmp_190_fu_1227_p3;
wire   [6:0] tmp_191_fu_1238_p3;
wire   [10:0] p_shl3_cast_fu_1234_p1;
wire   [10:0] p_shl4_cast_fu_1245_p1;
wire   [10:0] tmp_192_fu_1249_p2;
wire   [10:0] tmp_207_fu_1277_p2;
wire   [10:0] tmp_212_fu_1291_p2;
reg   [15:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

run_fadd_32ns_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
run_fadd_32ns_32nbkb_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_498_p0),
    .din1(grp_fu_498_p1),
    .ce(1'b1),
    .dout(grp_fu_498_p2)
);

run_fadd_32ns_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
run_fadd_32ns_32nbkb_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_502_p0),
    .din1(grp_fu_502_p1),
    .ce(1'b1),
    .dout(grp_fu_502_p2)
);

run_fmul_32ns_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
run_fmul_32ns_32ncud_U12(
    .din0(reg_515),
    .din1(grp_fu_507_p1),
    .dout(grp_fu_507_p2)
);

run_fmul_32ns_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
run_fmul_32ns_32ncud_U13(
    .din0(reg_520),
    .din1(grp_fu_511_p1),
    .dout(grp_fu_511_p2)
);

run_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
run_mux_32_32_1_1_U14(
    .din0(32'd1025145739),
    .din1(32'd3192948906),
    .din2(32'd3194008119),
    .din3(channels_reg_452),
    .dout(tmp_40_fu_646_p5)
);

run_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
run_mux_32_32_1_1_U15(
    .din0(32'd1057011599),
    .din1(32'd1050948919),
    .din2(32'd3198863645),
    .din3(channels_reg_452),
    .dout(tmp_42_fu_894_p5)
);

run_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
run_mux_32_32_1_1_U16(
    .din0(32'd1045574571),
    .din1(32'd1055556892),
    .din2(32'd3183478760),
    .din3(channels_reg_452),
    .dout(tmp_44_fu_907_p5)
);

run_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
run_mux_32_32_1_1_U17(
    .din0(32'd1032502236),
    .din1(32'd3196435260),
    .din2(32'd1051048798),
    .din3(channels_reg_452),
    .dout(tmp_47_fu_950_p5)
);

run_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
run_mux_32_32_1_1_U18(
    .din0(32'd3190960672),
    .din1(32'd3151439481),
    .din2(32'd1059707573),
    .din3(channels_reg_452),
    .dout(tmp_48_fu_972_p5)
);

run_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
run_mux_32_32_1_1_U19(
    .din0(32'd1057430681),
    .din1(32'd1055829192),
    .din2(32'd1007585020),
    .din3(channels_reg_452),
    .dout(tmp_50_fu_1083_p5)
);

run_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
run_mux_32_32_1_1_U20(
    .din0(32'd1061179946),
    .din1(32'd1048361681),
    .din2(32'd1032991055),
    .din3(channels_reg_452),
    .dout(tmp_51_fu_1096_p5)
);

run_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
run_mux_32_32_1_1_U21(
    .din0(32'd1058141789),
    .din1(32'd3201195087),
    .din2(32'd1055486402),
    .din3(channels_reg_452),
    .dout(tmp_52_fu_1127_p5)
);

run_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
run_mux_32_32_1_1_U22(
    .din0(32'd1050010876),
    .din1(32'd3202084412),
    .din2(32'd1053122553),
    .din3(channels_reg_452),
    .dout(tmp_53_fu_1140_p5)
);

run_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
run_mux_32_32_1_1_U23(
    .din0(32'd1042372351),
    .din1(32'd1032799843),
    .din2(32'd3195082397),
    .din3(channels_reg_452),
    .dout(tmp_54_fu_1201_p5)
);

run_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
run_mux_32_32_1_1_U24(
    .din0(32'd1052541380),
    .din1(32'd1057520482),
    .din2(32'd1047129255),
    .din3(channels_reg_452),
    .dout(tmp_55_fu_1214_p5)
);

run_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
run_mux_32_32_1_1_U25(
    .din0(32'd1057167185),
    .din1(32'd3193517901),
    .din2(32'd1057000339),
    .din3(channels_reg_452),
    .dout(tmp_57_fu_1314_p5)
);

run_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
run_mux_32_32_1_1_U26(
    .din0(32'd1057031489),
    .din1(32'd3203012993),
    .din2(32'd1017581344),
    .din3(channels_reg_452),
    .dout(tmp_58_fu_1327_p5)
);

run_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
run_mux_32_32_1_1_U27(
    .din0(32'd3190785561),
    .din1(32'd1054464704),
    .din2(32'd3146682242),
    .din3(channels_reg_452),
    .dout(tmp_59_fu_1348_p5)
);

run_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
run_mux_32_32_1_1_U28(
    .din0(32'd3189440520),
    .din1(32'd1048250196),
    .din2(32'd1043736017),
    .din3(channels_reg_452),
    .dout(tmp_60_fu_1361_p5)
);

run_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
run_mux_32_32_1_1_U29(
    .din0(32'd3185597124),
    .din1(32'd1040237703),
    .din2(32'd1052635291),
    .din3(channels_reg_452),
    .dout(tmp_61_fu_1382_p5)
);

run_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
run_mux_32_32_1_1_U30(
    .din0(32'd1051818190),
    .din1(32'd3196837261),
    .din2(32'd1044026690),
    .din3(channels_reg_452),
    .dout(tmp_62_fu_1395_p5)
);

run_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
run_mux_32_32_1_1_U31(
    .din0(32'd3201850216),
    .din1(32'd1054407369),
    .din2(32'd1048446873),
    .din3(channels_reg_452),
    .dout(tmp_64_fu_1416_p5)
);

run_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
run_mux_32_32_1_1_U32(
    .din0(32'd3204578623),
    .din1(32'd1044303957),
    .din2(32'd1046661539),
    .din3(channels_reg_452),
    .dout(tmp_65_fu_1429_p5)
);

run_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
run_mux_32_32_1_1_U33(
    .din0(32'd3204265631),
    .din1(32'd1033668902),
    .din2(32'd1057095559),
    .din3(channels_reg_452),
    .dout(tmp_66_fu_1450_p5)
);

run_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
run_mux_32_32_1_1_U34(
    .din0(32'd3200285729),
    .din1(32'd3193433751),
    .din2(32'd1054833167),
    .din3(channels_reg_452),
    .dout(tmp_67_fu_1463_p5)
);

run_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
run_mux_32_32_1_1_U35(
    .din0(32'd1029352721),
    .din1(32'd1051342576),
    .din2(32'd1050629202),
    .din3(channels_reg_452),
    .dout(tmp_46_fu_1476_p5)
);

run_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
run_mux_32_32_1_1_U36(
    .din0(32'd3182596482),
    .din1(32'd3192489460),
    .din2(32'd1050099545),
    .din3(channels_reg_452),
    .dout(tmp_68_fu_1493_p5)
);

run_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
run_mux_32_32_1_1_U37(
    .din0(32'd1054242880),
    .din1(32'd1044950008),
    .din2(32'd3141348649),
    .din3(channels_reg_452),
    .dout(tmp_49_fu_1506_p5)
);

run_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
run_mux_32_32_1_1_U38(
    .din0(32'd1057400499),
    .din1(32'd1028277012),
    .din2(32'd1053955372),
    .din3(channels_reg_452),
    .dout(tmp_56_fu_1519_p5)
);

run_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
run_mux_32_32_1_1_U39(
    .din0(32'd1055107864),
    .din1(32'd3202277096),
    .din2(32'd3179460453),
    .din3(channels_reg_452),
    .dout(tmp_63_fu_1532_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond4_fu_600_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage12_subdone) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage12_subdone) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage12_subdone) & (1'b1 == ap_CS_fsm_pp0_stage12)))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((exitcond4_fu_600_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        channels_reg_452 <= channels_9_reg_1549;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        channels_reg_452 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1569 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        column_1_reg_487 <= column_1_3_reg_1623;
    end else if (((exitcond4_fu_600_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        column_1_reg_487 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1569 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_464 <= indvar_flatten_next_reg_1573;
    end else if (((exitcond4_fu_600_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_reg_464 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1569 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        row_1_reg_475 <= tmp_mid2_reg_1593;
    end else if (((exitcond4_fu_600_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        row_1_reg_475 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        channels_9_reg_1549 <= channels_9_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_664_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        column_1_3_reg_1623 <= column_1_3_fu_793_p2;
        tmp_mid2_reg_1593 <= tmp_mid2_fu_690_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_664_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        column_mid2_reg_1586 <= column_mid2_fu_682_p3;
        conv1_output_addr_reg_1618 <= tmp_236_cast_fu_788_p1;
        exitcond_reg_1578 <= exitcond_fu_676_p2;
        tmp_180_reg_1598[10 : 2] <= tmp_180_fu_726_p2[10 : 2];
        tmp_41_cast_reg_1605[4 : 0] <= tmp_41_cast_fu_767_p1[4 : 0];
        tmp_69_0_1_cast_reg_1628[4 : 0] <= tmp_69_0_1_cast_fu_799_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv1_output_addr_reg_1618_pp0_iter1_reg <= conv1_output_addr_reg_1618;
        conv1_output_addr_reg_1618_pp0_iter2_reg <= conv1_output_addr_reg_1618_pp0_iter1_reg;
        conv1_output_addr_reg_1618_pp0_iter3_reg <= conv1_output_addr_reg_1618_pp0_iter2_reg;
        exitcond_flatten_reg_1569 <= exitcond_flatten_fu_664_p2;
        exitcond_flatten_reg_1569_pp0_iter1_reg <= exitcond_flatten_reg_1569;
        exitcond_flatten_reg_1569_pp0_iter2_reg <= exitcond_flatten_reg_1569_pp0_iter1_reg;
        exitcond_flatten_reg_1569_pp0_iter3_reg <= exitcond_flatten_reg_1569_pp0_iter2_reg;
        row_1_3_reg_1564 <= row_1_3_fu_658_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1569 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv1_output_load_reg_1641 <= conv1_output_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_next_reg_1573 <= indvar_flatten_next_fu_670_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((exitcond_flatten_reg_1569 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten_reg_1569 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((exitcond_flatten_reg_1569 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((exitcond_flatten_reg_1569 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((exitcond_flatten_reg_1569 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((exitcond_flatten_reg_1569 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((exitcond_flatten_reg_1569 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((exitcond_flatten_reg_1569 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((exitcond_flatten_reg_1569 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((exitcond_flatten_reg_1569 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((exitcond_flatten_reg_1569 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((exitcond_flatten_reg_1569 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((exitcond_flatten_reg_1569 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_515 <= conv1_input_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten_reg_1569 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((exitcond_flatten_reg_1569 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((exitcond_flatten_reg_1569 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((exitcond_flatten_reg_1569 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((exitcond_flatten_reg_1569 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((exitcond_flatten_reg_1569 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((exitcond_flatten_reg_1569 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((exitcond_flatten_reg_1569 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((exitcond_flatten_reg_1569 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((exitcond_flatten_reg_1569 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((exitcond_flatten_reg_1569 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((exitcond_flatten_reg_1569 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_520 <= conv1_input_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten_reg_1569 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((exitcond_flatten_reg_1569 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((exitcond_flatten_reg_1569 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)))) begin
        reg_525 <= grp_fu_507_p2;
        reg_531 <= grp_fu_511_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((exitcond_flatten_reg_1569 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((exitcond_flatten_reg_1569 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((exitcond_flatten_reg_1569 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        reg_537 <= grp_fu_507_p2;
        reg_542 <= grp_fu_511_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((exitcond_flatten_reg_1569 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((exitcond_flatten_reg_1569 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((exitcond_flatten_reg_1569 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)))) begin
        reg_547 <= grp_fu_507_p2;
        reg_553 <= grp_fu_511_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((exitcond_flatten_reg_1569 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((exitcond_flatten_reg_1569 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((exitcond_flatten_reg_1569 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)))) begin
        reg_559 <= grp_fu_507_p2;
        reg_565 <= grp_fu_511_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((exitcond_flatten_reg_1569 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((exitcond_flatten_reg_1569 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)))) begin
        reg_571 <= grp_fu_498_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((exitcond_flatten_reg_1569 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((exitcond_flatten_reg_1569_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        reg_577 <= grp_fu_498_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((exitcond_flatten_reg_1569 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((exitcond_flatten_reg_1569_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        reg_583 <= grp_fu_502_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((exitcond_flatten_reg_1569 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((exitcond_flatten_reg_1569_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)))) begin
        reg_589 <= grp_fu_498_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((exitcond_flatten_reg_1569_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((exitcond_flatten_reg_1569_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        reg_595 <= grp_fu_502_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1569_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        tmp13_reg_1938 <= grp_fu_502_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1569_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        tmp14_reg_1923 <= grp_fu_502_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1569_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        tmp15_reg_1903 <= grp_fu_502_p2;
        tmp8_reg_1898 <= grp_fu_498_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1569 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp19_reg_1878 <= grp_fu_498_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1569_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp1_reg_1933 <= grp_fu_502_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1569_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        tmp20_reg_1928 <= grp_fu_502_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1569_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        tmp21_reg_1908 <= grp_fu_502_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten_reg_1569_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        tmp24_reg_1888 <= grp_fu_498_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1569_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        tmp2_reg_1913 <= grp_fu_502_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1569 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        tmp3_reg_1858 <= grp_fu_498_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1569_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        tmp5_reg_1893 <= grp_fu_498_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1569 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        tmp6_reg_1818 <= grp_fu_498_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1569_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        tmp7_reg_1918 <= grp_fu_502_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1569 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        tmp9_reg_1833 <= grp_fu_498_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten_reg_1569 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_183_reg_1672[10 : 2] <= tmp_183_fu_888_p2[10 : 2];
        tmp_69_0_2_cast_reg_1684[4 : 0] <= tmp_69_0_2_cast_fu_935_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1569 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        tmp_186_reg_1707[10 : 2] <= tmp_186_fu_1031_p2[10 : 2];
        tmp_66_3_mid2_v_reg_1714 <= tmp_66_3_mid2_v_fu_1044_p2;
        tmp_66_4_mid2_v_reg_1720 <= tmp_66_4_mid2_v_fu_1057_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1569 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        tmp_189_reg_1746[10 : 2] <= tmp_189_fu_1175_p2[10 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1569 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        tmp_194_reg_1763 <= tmp_194_fu_1255_p2;
        tmp_197_reg_1768 <= tmp_197_fu_1259_p2;
        tmp_203_reg_1773 <= tmp_203_fu_1264_p2;
        tmp_204_reg_1778 <= tmp_204_fu_1269_p2;
        tmp_206_reg_1783 <= tmp_206_fu_1273_p2;
        tmp_208_reg_1793 <= tmp_208_fu_1286_p2;
        tmp_213_reg_1803 <= tmp_213_fu_1300_p2;
        tmp_217_reg_1808 <= tmp_217_fu_1305_p2;
        tmp_218_reg_1813 <= tmp_218_fu_1309_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_600_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_211_cast_reg_1554[8 : 3] <= tmp_211_cast_fu_642_p1[8 : 3];
        tmp_40_reg_1559 <= tmp_40_fu_646_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1569 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_69_0_3_cast_reg_1646[4 : 0] <= tmp_69_0_3_cast_fu_819_p1[4 : 0];
        tmp_69_0_4_cast_reg_1659[4 : 0] <= tmp_69_0_4_cast_fu_838_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1569_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        tmp_70_3_4_reg_1883 <= grp_fu_507_p2;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_664_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond4_fu_600_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1569 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_column_1_phi_fu_491_p4 = column_1_3_reg_1623;
    end else begin
        ap_phi_mux_column_1_phi_fu_491_p4 = column_1_reg_487;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1569 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_468_p4 = indvar_flatten_next_reg_1573;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_468_p4 = indvar_flatten_reg_464;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1569 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_row_1_phi_fu_479_p4 = tmp_mid2_reg_1593;
    end else begin
        ap_phi_mux_row_1_phi_fu_479_p4 = row_1_reg_475;
    end
end

always @ (*) begin
    if (((exitcond4_fu_600_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            conv1_input_address0 = tmp_255_cast_fu_1489_p1;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            conv1_input_address0 = tmp_232_cast_fu_1442_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            conv1_input_address0 = tmp_242_cast_fu_1408_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            conv1_input_address0 = tmp_246_cast_fu_1374_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            conv1_input_address0 = tmp_235_cast_fu_1340_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            conv1_input_address0 = tmp_245_cast_fu_1281_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            conv1_input_address0 = tmp_234_cast_fu_1186_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            conv1_input_address0 = tmp_249_cast_fu_1113_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            conv1_input_address0 = tmp_233_cast_fu_1068_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv1_input_address0 = tmp_248_cast_fu_967_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv1_input_address0 = tmp_238_cast_fu_925_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv1_input_address0 = tmp_247_cast_fu_828_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv1_input_address0 = tmp_231_cast_fu_777_p1;
        end else begin
            conv1_input_address0 = 'bx;
        end
    end else begin
        conv1_input_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            conv1_input_address1 = tmp_244_cast_fu_1446_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            conv1_input_address1 = tmp_256_cast_fu_1412_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            conv1_input_address1 = tmp_251_cast_fu_1378_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            conv1_input_address1 = tmp_241_cast_fu_1344_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            conv1_input_address1 = tmp_250_cast_fu_1295_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            conv1_input_address1 = tmp_240_cast_fu_1196_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            conv1_input_address1 = tmp_254_cast_fu_1122_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            conv1_input_address1 = tmp_239_cast_fu_1078_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv1_input_address1 = tmp_253_cast_fu_989_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv1_input_address1 = tmp_243_cast_fu_945_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv1_input_address1 = tmp_252_cast_fu_847_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv1_input_address1 = tmp_237_cast_fu_809_p1;
        end else begin
            conv1_input_address1 = 'bx;
        end
    end else begin
        conv1_input_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        conv1_input_ce0 = 1'b1;
    end else begin
        conv1_input_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        conv1_input_ce1 = 1'b1;
    end else begin
        conv1_input_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        conv1_output_address0 = conv1_output_addr_reg_1618_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv1_output_address0 = tmp_236_cast_fu_788_p1;
    end else begin
        conv1_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        conv1_output_ce0 = 1'b1;
    end else begin
        conv1_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten_reg_1569_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        conv1_output_we0 = 1'b1;
    end else begin
        conv1_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_498_p0 = tmp19_reg_1878;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_498_p0 = tmp9_reg_1833;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_498_p0 = tmp6_reg_1818;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_498_p0 = reg_583;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_498_p0 = reg_571;
    end else if ((((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        grp_fu_498_p0 = reg_559;
    end else if ((((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        grp_fu_498_p0 = reg_547;
    end else if ((((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_498_p0 = reg_537;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_498_p0 = reg_525;
    end else begin
        grp_fu_498_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_498_p1 = reg_589;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_498_p1 = reg_559;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_498_p1 = reg_547;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_498_p1 = reg_577;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_498_p1 = conv1_output_load_reg_1641;
    end else if ((((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        grp_fu_498_p1 = reg_565;
    end else if ((((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        grp_fu_498_p1 = reg_553;
    end else if ((((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_498_p1 = reg_542;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_498_p1 = reg_531;
    end else begin
        grp_fu_498_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_502_p0 = tmp13_reg_1938;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_502_p0 = tmp20_reg_1928;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_502_p0 = tmp7_reg_1918;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_502_p0 = reg_589;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_502_p0 = reg_577;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_502_p0 = tmp5_reg_1893;
    end else if ((((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_502_p0 = reg_595;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_502_p0 = reg_583;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_502_p0 = reg_571;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_502_p0 = reg_553;
    end else if ((((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        grp_fu_502_p0 = reg_525;
    end else begin
        grp_fu_502_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_502_p1 = tmp1_reg_1933;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_502_p1 = tmp14_reg_1923;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_502_p1 = tmp2_reg_1913;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_502_p1 = tmp21_reg_1908;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_502_p1 = tmp15_reg_1903;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_502_p1 = tmp8_reg_1898;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_502_p1 = tmp3_reg_1858;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_502_p1 = tmp24_reg_1888;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_502_p1 = tmp_70_3_4_reg_1883;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_502_p1 = reg_565;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_502_p1 = tmp_40_reg_1559;
    end else if ((((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        grp_fu_502_p1 = reg_531;
    end else begin
        grp_fu_502_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_507_p1 = tmp_63_fu_1532_p5;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_507_p1 = tmp_49_fu_1506_p5;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_507_p1 = tmp_46_fu_1476_p5;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_507_p1 = tmp_66_fu_1450_p5;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_507_p1 = tmp_64_fu_1416_p5;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_507_p1 = tmp_61_fu_1382_p5;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_507_p1 = tmp_59_fu_1348_p5;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_507_p1 = tmp_57_fu_1314_p5;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_507_p1 = tmp_54_fu_1201_p5;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_507_p1 = tmp_52_fu_1127_p5;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_507_p1 = tmp_50_fu_1083_p5;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_507_p1 = tmp_47_fu_950_p5;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_507_p1 = tmp_42_fu_894_p5;
    end else begin
        grp_fu_507_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_511_p1 = tmp_56_fu_1519_p5;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_511_p1 = tmp_68_fu_1493_p5;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_511_p1 = tmp_67_fu_1463_p5;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_511_p1 = tmp_65_fu_1429_p5;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_511_p1 = tmp_62_fu_1395_p5;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_511_p1 = tmp_60_fu_1361_p5;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_511_p1 = tmp_58_fu_1327_p5;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_511_p1 = tmp_55_fu_1214_p5;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_511_p1 = tmp_53_fu_1140_p5;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_511_p1 = tmp_51_fu_1096_p5;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_511_p1 = tmp_48_fu_972_p5;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_511_p1 = tmp_44_fu_907_p5;
    end else begin
        grp_fu_511_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond4_fu_600_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_flatten_fu_664_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_flatten_fu_664_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((~((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1)) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd15];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage8_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage9_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage10_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage11_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage12_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign channels_9_fu_606_p2 = (channels_reg_452 + 2'd1);

assign column_1_3_fu_793_p2 = (5'd1 + column_mid2_fu_682_p3);

assign column_mid2_fu_682_p3 = ((exitcond_fu_676_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_column_1_phi_fu_491_p4);

assign conv1_output_d0 = grp_fu_502_p2;

assign exitcond4_fu_600_p2 = ((channels_reg_452 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_664_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_468_p4 == 10'd576) ? 1'b1 : 1'b0);

assign exitcond_fu_676_p2 = ((ap_phi_mux_column_1_phi_fu_491_p4 == 5'd24) ? 1'b1 : 1'b0);

assign indvar_flatten_next_fu_670_p2 = (ap_phi_mux_indvar_flatten_phi_fu_468_p4 + 10'd1);

assign p_shl10_cast_fu_884_p1 = tmp_80_fu_876_p3;

assign p_shl11_cast_fu_741_p3 = {{tmp_78_fu_737_p1}, {5'd0}};

assign p_shl12_cast_fu_749_p3 = {{tmp_181_fu_732_p2}, {3'd0}};

assign p_shl13_cast_fu_710_p1 = tmp_76_fu_702_p3;

assign p_shl14_cast_fu_722_p1 = tmp_77_fu_714_p3;

assign p_shl2_cast_fu_632_p1 = tmp_s_fu_624_p3;

assign p_shl3_cast_fu_1234_p1 = tmp_190_fu_1227_p3;

assign p_shl4_cast_fu_1245_p1 = tmp_191_fu_1238_p3;

assign p_shl5_cast_fu_1160_p1 = tmp_187_fu_1153_p3;

assign p_shl6_cast_fu_1171_p1 = tmp_188_fu_1164_p3;

assign p_shl7_cast_fu_1015_p1 = tmp_184_fu_1007_p3;

assign p_shl8_cast_fu_1027_p1 = tmp_185_fu_1019_p3;

assign p_shl9_cast_fu_872_p1 = tmp_79_fu_864_p3;

assign p_shl_cast_fu_620_p1 = tmp_fu_612_p3;

assign row_1_3_fu_658_p2 = (ap_phi_mux_row_1_phi_fu_479_p4 + 5'd1);

assign row_4_mid1_fu_852_p2 = (5'd2 + row_1_reg_475);

assign tmp_179_fu_636_p2 = (p_shl_cast_fu_620_p1 - p_shl2_cast_fu_632_p1);

assign tmp_180_fu_726_p2 = (p_shl13_cast_fu_710_p1 - p_shl14_cast_fu_722_p1);

assign tmp_181_fu_732_p2 = ($signed(tmp_211_cast_reg_1554) + $signed(tmp_mid2_cast_fu_698_p1));

assign tmp_182_fu_757_p2 = (p_shl11_cast_fu_741_p3 - p_shl12_cast_fu_749_p3);

assign tmp_183_fu_888_p2 = (p_shl9_cast_fu_872_p1 - p_shl10_cast_fu_884_p1);

assign tmp_184_fu_1007_p3 = {{tmp_66_2_mid2_v_fu_1001_p2}, {5'd0}};

assign tmp_185_fu_1019_p3 = {{tmp_66_2_mid2_v_fu_1001_p2}, {2'd0}};

assign tmp_186_fu_1031_p2 = (p_shl7_cast_fu_1015_p1 - p_shl8_cast_fu_1027_p1);

assign tmp_187_fu_1153_p3 = {{tmp_66_3_mid2_v_reg_1714}, {5'd0}};

assign tmp_188_fu_1164_p3 = {{tmp_66_3_mid2_v_reg_1714}, {2'd0}};

assign tmp_189_fu_1175_p2 = (p_shl5_cast_fu_1160_p1 - p_shl6_cast_fu_1171_p1);

assign tmp_190_fu_1227_p3 = {{tmp_66_4_mid2_v_reg_1720}, {5'd0}};

assign tmp_191_fu_1238_p3 = {{tmp_66_4_mid2_v_reg_1720}, {2'd0}};

assign tmp_192_fu_1249_p2 = (p_shl3_cast_fu_1234_p1 - p_shl4_cast_fu_1245_p1);

assign tmp_193_fu_771_p2 = (tmp_180_fu_726_p2 + tmp_41_cast_fu_767_p1);

assign tmp_194_fu_1255_p2 = (tmp_183_reg_1672 + tmp_41_cast_reg_1605);

assign tmp_195_fu_1063_p2 = (tmp_186_fu_1031_p2 + tmp_41_cast_reg_1605);

assign tmp_196_fu_1181_p2 = (tmp_189_fu_1175_p2 + tmp_41_cast_reg_1605);

assign tmp_197_fu_1259_p2 = (tmp_192_fu_1249_p2 + tmp_41_cast_reg_1605);

assign tmp_198_fu_782_p2 = (tmp_182_fu_757_p2 + tmp_41_cast1_fu_763_p1);

assign tmp_199_fu_803_p2 = (tmp_180_fu_726_p2 + tmp_69_0_1_cast_fu_799_p1);

assign tmp_200_fu_920_p2 = (tmp_183_fu_888_p2 + tmp_69_0_1_cast_reg_1628);

assign tmp_201_fu_1073_p2 = (tmp_186_fu_1031_p2 + tmp_69_0_1_cast_reg_1628);

assign tmp_202_fu_1191_p2 = (tmp_189_fu_1175_p2 + tmp_69_0_1_cast_reg_1628);

assign tmp_203_fu_1264_p2 = (tmp_192_fu_1249_p2 + tmp_69_0_1_cast_reg_1628);

assign tmp_204_fu_1269_p2 = (tmp_180_reg_1598 + tmp_69_0_2_cast_reg_1684);

assign tmp_205_fu_939_p2 = (tmp_183_fu_888_p2 + tmp_69_0_2_cast_fu_935_p1);

assign tmp_206_fu_1273_p2 = (tmp_186_reg_1707 + tmp_69_0_2_cast_reg_1684);

assign tmp_207_fu_1277_p2 = (tmp_189_reg_1746 + tmp_69_0_2_cast_reg_1684);

assign tmp_208_fu_1286_p2 = (tmp_192_fu_1249_p2 + tmp_69_0_2_cast_reg_1684);

assign tmp_209_fu_823_p2 = (tmp_180_reg_1598 + tmp_69_0_3_cast_fu_819_p1);

assign tmp_210_fu_963_p2 = (tmp_183_reg_1672 + tmp_69_0_3_cast_reg_1646);

assign tmp_211_cast_fu_642_p1 = $signed(tmp_179_fu_636_p2);

assign tmp_211_fu_1109_p2 = (tmp_186_reg_1707 + tmp_69_0_3_cast_reg_1646);

assign tmp_212_fu_1291_p2 = (tmp_189_reg_1746 + tmp_69_0_3_cast_reg_1646);

assign tmp_213_fu_1300_p2 = (tmp_192_fu_1249_p2 + tmp_69_0_3_cast_reg_1646);

assign tmp_214_fu_842_p2 = (tmp_180_reg_1598 + tmp_69_0_4_cast_fu_838_p1);

assign tmp_215_fu_985_p2 = (tmp_183_reg_1672 + tmp_69_0_4_cast_reg_1659);

assign tmp_216_fu_1118_p2 = (tmp_186_reg_1707 + tmp_69_0_4_cast_reg_1659);

assign tmp_217_fu_1305_p2 = (tmp_189_reg_1746 + tmp_69_0_4_cast_reg_1659);

assign tmp_218_fu_1309_p2 = (tmp_192_fu_1249_p2 + tmp_69_0_4_cast_reg_1659);

assign tmp_231_cast_fu_777_p1 = tmp_193_fu_771_p2;

assign tmp_232_cast_fu_1442_p1 = tmp_194_reg_1763;

assign tmp_233_cast_fu_1068_p1 = $signed(tmp_195_fu_1063_p2);

assign tmp_234_cast_fu_1186_p1 = $signed(tmp_196_fu_1181_p2);

assign tmp_235_cast_fu_1340_p1 = $signed(tmp_197_reg_1768);

assign tmp_236_cast_fu_788_p1 = tmp_198_fu_782_p2;

assign tmp_237_cast_fu_809_p1 = tmp_199_fu_803_p2;

assign tmp_238_cast_fu_925_p1 = tmp_200_fu_920_p2;

assign tmp_239_cast_fu_1078_p1 = $signed(tmp_201_fu_1073_p2);

assign tmp_240_cast_fu_1196_p1 = $signed(tmp_202_fu_1191_p2);

assign tmp_241_cast_fu_1344_p1 = $signed(tmp_203_reg_1773);

assign tmp_242_cast_fu_1408_p1 = tmp_204_reg_1778;

assign tmp_243_cast_fu_945_p1 = tmp_205_fu_939_p2;

assign tmp_244_cast_fu_1446_p1 = $signed(tmp_206_reg_1783);

assign tmp_245_cast_fu_1281_p1 = $signed(tmp_207_fu_1277_p2);

assign tmp_246_cast_fu_1374_p1 = $signed(tmp_208_reg_1793);

assign tmp_247_cast_fu_828_p1 = tmp_209_fu_823_p2;

assign tmp_248_cast_fu_967_p1 = tmp_210_fu_963_p2;

assign tmp_249_cast_fu_1113_p1 = $signed(tmp_211_fu_1109_p2);

assign tmp_250_cast_fu_1295_p1 = $signed(tmp_212_fu_1291_p2);

assign tmp_251_cast_fu_1378_p1 = $signed(tmp_213_reg_1803);

assign tmp_252_cast_fu_847_p1 = tmp_214_fu_842_p2;

assign tmp_253_cast_fu_989_p1 = tmp_215_fu_985_p2;

assign tmp_254_cast_fu_1122_p1 = $signed(tmp_216_fu_1118_p2);

assign tmp_255_cast_fu_1489_p1 = $signed(tmp_217_reg_1808);

assign tmp_256_cast_fu_1412_p1 = $signed(tmp_218_reg_1813);

assign tmp_41_cast1_fu_763_p1 = column_mid2_fu_682_p3;

assign tmp_41_cast_fu_767_p1 = column_mid2_fu_682_p3;

assign tmp_66_1_mid2_fu_858_p3 = ((exitcond_reg_1578[0:0] === 1'b1) ? row_4_mid1_fu_852_p2 : row_1_3_reg_1564);

assign tmp_66_2_mid2_v_fu_1001_p2 = (row_1_reg_475 + tmp_66_2_mid2_v_v_ca_fu_994_p3);

assign tmp_66_2_mid2_v_v_ca_fu_994_p3 = ((exitcond_reg_1578[0:0] === 1'b1) ? 5'd3 : 5'd2);

assign tmp_66_3_mid2_v_fu_1044_p2 = (row_1_reg_475 + tmp_66_3_mid2_v_v_ca_fu_1037_p3);

assign tmp_66_3_mid2_v_v_ca_fu_1037_p3 = ((exitcond_reg_1578[0:0] === 1'b1) ? 5'd4 : 5'd3);

assign tmp_66_4_mid2_v_fu_1057_p2 = (row_1_reg_475 + tmp_66_4_mid2_v_v_ca_fu_1050_p3);

assign tmp_66_4_mid2_v_v_ca_fu_1050_p3 = ((exitcond_reg_1578[0:0] === 1'b1) ? 5'd5 : 5'd4);

assign tmp_68_0_2_fu_930_p2 = (5'd2 + column_mid2_reg_1586);

assign tmp_68_0_3_fu_814_p2 = (5'd3 + column_mid2_reg_1586);

assign tmp_68_0_4_fu_833_p2 = (5'd4 + column_mid2_reg_1586);

assign tmp_69_0_1_cast_fu_799_p1 = column_1_3_fu_793_p2;

assign tmp_69_0_2_cast_fu_935_p1 = tmp_68_0_2_fu_930_p2;

assign tmp_69_0_3_cast_fu_819_p1 = tmp_68_0_3_fu_814_p2;

assign tmp_69_0_4_cast_fu_838_p1 = tmp_68_0_4_fu_833_p2;

assign tmp_76_fu_702_p3 = {{tmp_mid2_fu_690_p3}, {5'd0}};

assign tmp_77_fu_714_p3 = {{tmp_mid2_fu_690_p3}, {2'd0}};

assign tmp_78_fu_737_p1 = tmp_181_fu_732_p2[6:0];

assign tmp_79_fu_864_p3 = {{tmp_66_1_mid2_fu_858_p3}, {5'd0}};

assign tmp_80_fu_876_p3 = {{tmp_66_1_mid2_fu_858_p3}, {2'd0}};

assign tmp_fu_612_p3 = {{channels_reg_452}, {5'd0}};

assign tmp_mid2_cast_fu_698_p1 = tmp_mid2_fu_690_p3;

assign tmp_mid2_fu_690_p3 = ((exitcond_fu_676_p2[0:0] === 1'b1) ? row_1_3_fu_658_p2 : ap_phi_mux_row_1_phi_fu_479_p4);

assign tmp_s_fu_624_p3 = {{channels_reg_452}, {3'd0}};

always @ (posedge ap_clk) begin
    tmp_211_cast_reg_1554[2:0] <= 3'b000;
    tmp_180_reg_1598[1:0] <= 2'b00;
    tmp_41_cast_reg_1605[10:5] <= 6'b000000;
    tmp_69_0_1_cast_reg_1628[10:5] <= 6'b000000;
    tmp_69_0_3_cast_reg_1646[10:5] <= 6'b000000;
    tmp_69_0_4_cast_reg_1659[10:5] <= 6'b000000;
    tmp_183_reg_1672[1:0] <= 2'b00;
    tmp_69_0_2_cast_reg_1684[10:5] <= 6'b000000;
    tmp_186_reg_1707[1:0] <= 2'b00;
    tmp_189_reg_1746[1:0] <= 2'b00;
end

endmodule //Conv1_layer
