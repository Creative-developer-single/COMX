// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "MaxPooling1_layer.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic MaxPooling1_layer::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic MaxPooling1_layer::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> MaxPooling1_layer::ap_ST_fsm_state1 = "1";
const sc_lv<7> MaxPooling1_layer::ap_ST_fsm_state2 = "10";
const sc_lv<7> MaxPooling1_layer::ap_ST_fsm_state3 = "100";
const sc_lv<7> MaxPooling1_layer::ap_ST_fsm_state4 = "1000";
const sc_lv<7> MaxPooling1_layer::ap_ST_fsm_state5 = "10000";
const sc_lv<7> MaxPooling1_layer::ap_ST_fsm_state6 = "100000";
const sc_lv<7> MaxPooling1_layer::ap_ST_fsm_state7 = "1000000";
const sc_lv<32> MaxPooling1_layer::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> MaxPooling1_layer::ap_const_lv32_1 = "1";
const sc_lv<1> MaxPooling1_layer::ap_const_lv1_0 = "0";
const sc_lv<32> MaxPooling1_layer::ap_const_lv32_2 = "10";
const sc_lv<32> MaxPooling1_layer::ap_const_lv32_3 = "11";
const sc_lv<32> MaxPooling1_layer::ap_const_lv32_4 = "100";
const sc_lv<32> MaxPooling1_layer::ap_const_lv32_5 = "101";
const sc_lv<32> MaxPooling1_layer::ap_const_lv32_6 = "110";
const sc_lv<2> MaxPooling1_layer::ap_const_lv2_0 = "00";
const sc_lv<1> MaxPooling1_layer::ap_const_lv1_1 = "1";
const sc_lv<4> MaxPooling1_layer::ap_const_lv4_0 = "0000";
const sc_lv<2> MaxPooling1_layer::ap_const_lv2_3 = "11";
const sc_lv<2> MaxPooling1_layer::ap_const_lv2_1 = "1";
const sc_lv<5> MaxPooling1_layer::ap_const_lv5_0 = "00000";
const sc_lv<3> MaxPooling1_layer::ap_const_lv3_0 = "000";
const sc_lv<4> MaxPooling1_layer::ap_const_lv4_C = "1100";
const sc_lv<4> MaxPooling1_layer::ap_const_lv4_1 = "1";
const sc_lv<2> MaxPooling1_layer::ap_const_lv2_2 = "10";
const sc_lv<5> MaxPooling1_layer::ap_const_lv5_2 = "10";
const sc_lv<5> MaxPooling1_layer::ap_const_lv5_4 = "100";
const bool MaxPooling1_layer::ap_const_boolean_1 = true;

MaxPooling1_layer::MaxPooling1_layer(sc_module_name name) : sc_module(name), mVcdFile(0) {
    run_fcmp_32ns_32ndEe_U45 = new run_fcmp_32ns_32ndEe<1,1,32,32,1>("run_fcmp_32ns_32ndEe_U45");
    run_fcmp_32ns_32ndEe_U45->din0(grp_fu_170_p0);
    run_fcmp_32ns_32ndEe_U45->din1(grp_fu_170_p1);
    run_fcmp_32ns_32ndEe_U45->opcode(grp_fu_170_opcode);
    run_fcmp_32ns_32ndEe_U45->dout(grp_fu_170_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond4_fu_178_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond4_fu_178_p2 );

    SC_METHOD(thread_channels_2_fu_184_p2);
    sensitive << ( channels_reg_90 );

    SC_METHOD(thread_column_1_1_fu_319_p2);
    sensitive << ( column_1_reg_112 );

    SC_METHOD(thread_conv1_output_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_36_cast_fu_442_p1 );

    SC_METHOD(thread_conv1_output_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_exitcond1_fu_337_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i_reg_124 );

    SC_METHOD(thread_exitcond2_fu_313_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( column_1_reg_112 );

    SC_METHOD(thread_exitcond3_fu_258_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( row_1_reg_101 );

    SC_METHOD(thread_exitcond4_fu_178_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( channels_reg_90 );

    SC_METHOD(thread_exitcond_fu_416_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( j_reg_147 );

    SC_METHOD(thread_grp_fu_170_opcode);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond1_fu_337_p2 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_170_p0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( maxn_reg_135 );
    sensitive << ( maxn_1_reg_158 );

    SC_METHOD(thread_grp_fu_170_p1);
    sensitive << ( conv1_output_q0 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_i_2_fu_343_p2);
    sensitive << ( i_reg_124 );

    SC_METHOD(thread_i_cast2_fu_333_p1);
    sensitive << ( i_reg_124 );

    SC_METHOD(thread_j_2_fu_422_p2);
    sensitive << ( j_reg_147 );

    SC_METHOD(thread_j_cast1_fu_412_p1);
    sensitive << ( j_reg_147 );

    SC_METHOD(thread_maxn_2_fu_447_p3);
    sensitive << ( conv1_output_q0 );
    sensitive << ( maxn_1_reg_158 );
    sensitive << ( grp_fu_170_p2 );

    SC_METHOD(thread_p_shl1_cast_fu_244_p1);
    sensitive << ( tmp_21_fu_236_p3 );

    SC_METHOD(thread_p_shl2_cast_fu_198_p1);
    sensitive << ( tmp_fu_190_p3 );

    SC_METHOD(thread_p_shl3_cast_fu_210_p1);
    sensitive << ( tmp_14_fu_202_p3 );

    SC_METHOD(thread_p_shl4_cast_fu_291_p3);
    sensitive << ( tmp_9_fu_287_p1 );

    SC_METHOD(thread_p_shl5_cast_fu_299_p3);
    sensitive << ( tmp_23_fu_282_p2 );

    SC_METHOD(thread_p_shl6_cast_fu_367_p3);
    sensitive << ( tmp_10_fu_363_p1 );

    SC_METHOD(thread_p_shl7_cast_fu_375_p3);
    sensitive << ( tmp_26_fu_358_p2 );

    SC_METHOD(thread_p_shl_cast_fu_232_p1);
    sensitive << ( tmp_19_fu_224_p3 );

    SC_METHOD(thread_pool1_output_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_31_cast_fu_407_p1 );

    SC_METHOD(thread_pool1_output_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_pool1_output_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( maxn_reg_135 );
    sensitive << ( grp_fu_170_p2 );

    SC_METHOD(thread_pool1_output_we0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond1_fu_337_p2 );

    SC_METHOD(thread_row_1_1_fu_264_p2);
    sensitive << ( row_1_reg_101 );

    SC_METHOD(thread_tmp_10_cast_fu_278_p1);
    sensitive << ( row_1_reg_101 );

    SC_METHOD(thread_tmp_10_fu_363_p1);
    sensitive << ( tmp_26_fu_358_p2 );

    SC_METHOD(thread_tmp_11_fu_325_p3);
    sensitive << ( column_1_reg_112 );

    SC_METHOD(thread_tmp_14_cast_fu_398_p1);
    sensitive << ( column_1_reg_112 );

    SC_METHOD(thread_tmp_14_fu_202_p3);
    sensitive << ( channels_reg_90 );

    SC_METHOD(thread_tmp_15_fu_349_p2);
    sensitive << ( tmp_s_reg_481 );
    sensitive << ( i_cast2_fu_333_p1 );

    SC_METHOD(thread_tmp_16_cast_fu_354_p1);
    sensitive << ( tmp_15_fu_349_p2 );

    SC_METHOD(thread_tmp_16_fu_214_p2);
    sensitive << ( p_shl2_cast_fu_198_p1 );
    sensitive << ( p_shl3_cast_fu_210_p1 );

    SC_METHOD(thread_tmp_18_fu_428_p2);
    sensitive << ( tmp_11_reg_499 );
    sensitive << ( j_cast1_fu_412_p1 );

    SC_METHOD(thread_tmp_19_cast_fu_433_p1);
    sensitive << ( tmp_18_fu_428_p2 );

    SC_METHOD(thread_tmp_19_fu_224_p3);
    sensitive << ( channels_reg_90 );

    SC_METHOD(thread_tmp_21_fu_236_p3);
    sensitive << ( channels_reg_90 );

    SC_METHOD(thread_tmp_22_fu_248_p2);
    sensitive << ( p_shl_cast_fu_232_p1 );
    sensitive << ( p_shl1_cast_fu_244_p1 );

    SC_METHOD(thread_tmp_23_cast_fu_220_p1);
    sensitive << ( tmp_16_fu_214_p2 );

    SC_METHOD(thread_tmp_23_fu_282_p2);
    sensitive << ( tmp_26_cast_reg_468 );
    sensitive << ( tmp_10_cast_fu_278_p1 );

    SC_METHOD(thread_tmp_24_fu_307_p2);
    sensitive << ( p_shl4_cast_fu_291_p3 );
    sensitive << ( p_shl5_cast_fu_299_p3 );

    SC_METHOD(thread_tmp_25_fu_402_p2);
    sensitive << ( tmp_24_reg_486 );
    sensitive << ( tmp_14_cast_fu_398_p1 );

    SC_METHOD(thread_tmp_26_cast_fu_254_p1);
    sensitive << ( tmp_22_fu_248_p2 );

    SC_METHOD(thread_tmp_26_fu_358_p2);
    sensitive << ( tmp_23_cast_reg_463 );
    sensitive << ( tmp_16_cast_fu_354_p1 );

    SC_METHOD(thread_tmp_27_fu_383_p2);
    sensitive << ( p_shl6_cast_fu_367_p3 );
    sensitive << ( p_shl7_cast_fu_375_p3 );

    SC_METHOD(thread_tmp_28_fu_437_p2);
    sensitive << ( tmp_27_reg_512 );
    sensitive << ( tmp_19_cast_fu_433_p1 );

    SC_METHOD(thread_tmp_31_cast_fu_407_p1);
    sensitive << ( tmp_25_fu_402_p2 );

    SC_METHOD(thread_tmp_36_cast_fu_442_p1);
    sensitive << ( tmp_28_fu_437_p2 );

    SC_METHOD(thread_tmp_9_fu_287_p1);
    sensitive << ( tmp_23_fu_282_p2 );

    SC_METHOD(thread_tmp_fu_190_p3);
    sensitive << ( channels_reg_90 );

    SC_METHOD(thread_tmp_s_fu_270_p3);
    sensitive << ( row_1_reg_101 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond4_fu_178_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond3_fu_258_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond2_fu_313_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond1_fu_337_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond_fu_416_p2 );

    ap_CS_fsm = "0000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "MaxPooling1_layer_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, conv1_output_address0, "(port)conv1_output_address0");
    sc_trace(mVcdFile, conv1_output_ce0, "(port)conv1_output_ce0");
    sc_trace(mVcdFile, conv1_output_q0, "(port)conv1_output_q0");
    sc_trace(mVcdFile, pool1_output_address0, "(port)pool1_output_address0");
    sc_trace(mVcdFile, pool1_output_ce0, "(port)pool1_output_ce0");
    sc_trace(mVcdFile, pool1_output_we0, "(port)pool1_output_we0");
    sc_trace(mVcdFile, pool1_output_d0, "(port)pool1_output_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, channels_2_fu_184_p2, "channels_2_fu_184_p2");
    sc_trace(mVcdFile, channels_2_reg_458, "channels_2_reg_458");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_23_cast_fu_220_p1, "tmp_23_cast_fu_220_p1");
    sc_trace(mVcdFile, tmp_23_cast_reg_463, "tmp_23_cast_reg_463");
    sc_trace(mVcdFile, exitcond4_fu_178_p2, "exitcond4_fu_178_p2");
    sc_trace(mVcdFile, tmp_26_cast_fu_254_p1, "tmp_26_cast_fu_254_p1");
    sc_trace(mVcdFile, tmp_26_cast_reg_468, "tmp_26_cast_reg_468");
    sc_trace(mVcdFile, row_1_1_fu_264_p2, "row_1_1_fu_264_p2");
    sc_trace(mVcdFile, row_1_1_reg_476, "row_1_1_reg_476");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_s_fu_270_p3, "tmp_s_fu_270_p3");
    sc_trace(mVcdFile, tmp_s_reg_481, "tmp_s_reg_481");
    sc_trace(mVcdFile, exitcond3_fu_258_p2, "exitcond3_fu_258_p2");
    sc_trace(mVcdFile, tmp_24_fu_307_p2, "tmp_24_fu_307_p2");
    sc_trace(mVcdFile, tmp_24_reg_486, "tmp_24_reg_486");
    sc_trace(mVcdFile, column_1_1_fu_319_p2, "column_1_1_fu_319_p2");
    sc_trace(mVcdFile, column_1_1_reg_494, "column_1_1_reg_494");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_11_fu_325_p3, "tmp_11_fu_325_p3");
    sc_trace(mVcdFile, tmp_11_reg_499, "tmp_11_reg_499");
    sc_trace(mVcdFile, exitcond2_fu_313_p2, "exitcond2_fu_313_p2");
    sc_trace(mVcdFile, i_2_fu_343_p2, "i_2_fu_343_p2");
    sc_trace(mVcdFile, i_2_reg_507, "i_2_reg_507");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_27_fu_383_p2, "tmp_27_fu_383_p2");
    sc_trace(mVcdFile, tmp_27_reg_512, "tmp_27_reg_512");
    sc_trace(mVcdFile, exitcond1_fu_337_p2, "exitcond1_fu_337_p2");
    sc_trace(mVcdFile, j_2_fu_422_p2, "j_2_fu_422_p2");
    sc_trace(mVcdFile, j_2_reg_520, "j_2_reg_520");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, exitcond_fu_416_p2, "exitcond_fu_416_p2");
    sc_trace(mVcdFile, maxn_2_fu_447_p3, "maxn_2_fu_447_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, channels_reg_90, "channels_reg_90");
    sc_trace(mVcdFile, row_1_reg_101, "row_1_reg_101");
    sc_trace(mVcdFile, column_1_reg_112, "column_1_reg_112");
    sc_trace(mVcdFile, i_reg_124, "i_reg_124");
    sc_trace(mVcdFile, maxn_reg_135, "maxn_reg_135");
    sc_trace(mVcdFile, j_reg_147, "j_reg_147");
    sc_trace(mVcdFile, maxn_1_reg_158, "maxn_1_reg_158");
    sc_trace(mVcdFile, tmp_31_cast_fu_407_p1, "tmp_31_cast_fu_407_p1");
    sc_trace(mVcdFile, tmp_36_cast_fu_442_p1, "tmp_36_cast_fu_442_p1");
    sc_trace(mVcdFile, grp_fu_170_p0, "grp_fu_170_p0");
    sc_trace(mVcdFile, grp_fu_170_p1, "grp_fu_170_p1");
    sc_trace(mVcdFile, tmp_fu_190_p3, "tmp_fu_190_p3");
    sc_trace(mVcdFile, tmp_14_fu_202_p3, "tmp_14_fu_202_p3");
    sc_trace(mVcdFile, p_shl2_cast_fu_198_p1, "p_shl2_cast_fu_198_p1");
    sc_trace(mVcdFile, p_shl3_cast_fu_210_p1, "p_shl3_cast_fu_210_p1");
    sc_trace(mVcdFile, tmp_16_fu_214_p2, "tmp_16_fu_214_p2");
    sc_trace(mVcdFile, tmp_19_fu_224_p3, "tmp_19_fu_224_p3");
    sc_trace(mVcdFile, tmp_21_fu_236_p3, "tmp_21_fu_236_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_232_p1, "p_shl_cast_fu_232_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_244_p1, "p_shl1_cast_fu_244_p1");
    sc_trace(mVcdFile, tmp_22_fu_248_p2, "tmp_22_fu_248_p2");
    sc_trace(mVcdFile, tmp_10_cast_fu_278_p1, "tmp_10_cast_fu_278_p1");
    sc_trace(mVcdFile, tmp_23_fu_282_p2, "tmp_23_fu_282_p2");
    sc_trace(mVcdFile, tmp_9_fu_287_p1, "tmp_9_fu_287_p1");
    sc_trace(mVcdFile, p_shl4_cast_fu_291_p3, "p_shl4_cast_fu_291_p3");
    sc_trace(mVcdFile, p_shl5_cast_fu_299_p3, "p_shl5_cast_fu_299_p3");
    sc_trace(mVcdFile, i_cast2_fu_333_p1, "i_cast2_fu_333_p1");
    sc_trace(mVcdFile, tmp_15_fu_349_p2, "tmp_15_fu_349_p2");
    sc_trace(mVcdFile, tmp_16_cast_fu_354_p1, "tmp_16_cast_fu_354_p1");
    sc_trace(mVcdFile, tmp_26_fu_358_p2, "tmp_26_fu_358_p2");
    sc_trace(mVcdFile, tmp_10_fu_363_p1, "tmp_10_fu_363_p1");
    sc_trace(mVcdFile, p_shl6_cast_fu_367_p3, "p_shl6_cast_fu_367_p3");
    sc_trace(mVcdFile, p_shl7_cast_fu_375_p3, "p_shl7_cast_fu_375_p3");
    sc_trace(mVcdFile, grp_fu_170_p2, "grp_fu_170_p2");
    sc_trace(mVcdFile, tmp_14_cast_fu_398_p1, "tmp_14_cast_fu_398_p1");
    sc_trace(mVcdFile, tmp_25_fu_402_p2, "tmp_25_fu_402_p2");
    sc_trace(mVcdFile, j_cast1_fu_412_p1, "j_cast1_fu_412_p1");
    sc_trace(mVcdFile, tmp_18_fu_428_p2, "tmp_18_fu_428_p2");
    sc_trace(mVcdFile, tmp_19_cast_fu_433_p1, "tmp_19_cast_fu_433_p1");
    sc_trace(mVcdFile, tmp_28_fu_437_p2, "tmp_28_fu_437_p2");
    sc_trace(mVcdFile, grp_fu_170_opcode, "grp_fu_170_opcode");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

MaxPooling1_layer::~MaxPooling1_layer() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete run_fcmp_32ns_32ndEe_U45;
}

void MaxPooling1_layer::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_258_p2.read(), ap_const_lv1_1))) {
        channels_reg_90 = channels_2_reg_458.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        channels_reg_90 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_258_p2.read()))) {
        column_1_reg_112 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(exitcond1_fu_337_p2.read(), ap_const_lv1_1))) {
        column_1_reg_112 = column_1_1_reg_494.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_416_p2.read(), ap_const_lv1_1))) {
        i_reg_124 = i_2_reg_507.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_313_p2.read()))) {
        i_reg_124 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_337_p2.read()))) {
        j_reg_147 = ap_const_lv2_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        j_reg_147 = j_2_reg_520.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_337_p2.read()))) {
        maxn_1_reg_158 = maxn_reg_135.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        maxn_1_reg_158 = maxn_2_fu_447_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_416_p2.read(), ap_const_lv1_1))) {
        maxn_reg_135 = maxn_1_reg_158.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_313_p2.read()))) {
        maxn_reg_135 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_313_p2.read(), ap_const_lv1_1))) {
        row_1_reg_101 = row_1_1_reg_476.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond4_fu_178_p2.read(), ap_const_lv1_0))) {
        row_1_reg_101 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        channels_2_reg_458 = channels_2_fu_184_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        column_1_1_reg_494 = column_1_1_fu_319_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_2_reg_507 = i_2_fu_343_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        j_2_reg_520 = j_2_fu_422_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        row_1_1_reg_476 = row_1_1_fu_264_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_313_p2.read()))) {
        tmp_11_reg_499 = tmp_11_fu_325_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond4_fu_178_p2.read(), ap_const_lv1_0))) {
        tmp_23_cast_reg_463 = tmp_23_cast_fu_220_p1.read();
        tmp_26_cast_reg_468 = tmp_26_cast_fu_254_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_258_p2.read()))) {
        tmp_24_reg_486 = tmp_24_fu_307_p2.read();
        tmp_s_reg_481 = tmp_s_fu_270_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_337_p2.read()))) {
        tmp_27_reg_512 = tmp_27_fu_383_p2.read();
    }
}

void MaxPooling1_layer::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void MaxPooling1_layer::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void MaxPooling1_layer::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void MaxPooling1_layer::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void MaxPooling1_layer::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void MaxPooling1_layer::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void MaxPooling1_layer::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void MaxPooling1_layer::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond4_fu_178_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void MaxPooling1_layer::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void MaxPooling1_layer::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond4_fu_178_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void MaxPooling1_layer::thread_channels_2_fu_184_p2() {
    channels_2_fu_184_p2 = (!channels_reg_90.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(channels_reg_90.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void MaxPooling1_layer::thread_column_1_1_fu_319_p2() {
    column_1_1_fu_319_p2 = (!column_1_reg_112.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(column_1_reg_112.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void MaxPooling1_layer::thread_conv1_output_address0() {
    conv1_output_address0 =  (sc_lv<11>) (tmp_36_cast_fu_442_p1.read());
}

void MaxPooling1_layer::thread_conv1_output_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        conv1_output_ce0 = ap_const_logic_1;
    } else {
        conv1_output_ce0 = ap_const_logic_0;
    }
}

void MaxPooling1_layer::thread_exitcond1_fu_337_p2() {
    exitcond1_fu_337_p2 = (!i_reg_124.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_124.read() == ap_const_lv2_2);
}

void MaxPooling1_layer::thread_exitcond2_fu_313_p2() {
    exitcond2_fu_313_p2 = (!column_1_reg_112.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): sc_lv<1>(column_1_reg_112.read() == ap_const_lv4_C);
}

void MaxPooling1_layer::thread_exitcond3_fu_258_p2() {
    exitcond3_fu_258_p2 = (!row_1_reg_101.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): sc_lv<1>(row_1_reg_101.read() == ap_const_lv4_C);
}

void MaxPooling1_layer::thread_exitcond4_fu_178_p2() {
    exitcond4_fu_178_p2 = (!channels_reg_90.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(channels_reg_90.read() == ap_const_lv2_3);
}

void MaxPooling1_layer::thread_exitcond_fu_416_p2() {
    exitcond_fu_416_p2 = (!j_reg_147.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_147.read() == ap_const_lv2_2);
}

void MaxPooling1_layer::thread_grp_fu_170_opcode() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_170_opcode = ap_const_lv5_4;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(exitcond1_fu_337_p2.read(), ap_const_lv1_1))) {
        grp_fu_170_opcode = ap_const_lv5_2;
    } else {
        grp_fu_170_opcode = "XXXXX";
    }
}

void MaxPooling1_layer::thread_grp_fu_170_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_170_p0 = maxn_1_reg_158.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_170_p0 = maxn_reg_135.read();
    } else {
        grp_fu_170_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void MaxPooling1_layer::thread_grp_fu_170_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_170_p1 = conv1_output_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_170_p1 = ap_const_lv32_0;
    } else {
        grp_fu_170_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void MaxPooling1_layer::thread_i_2_fu_343_p2() {
    i_2_fu_343_p2 = (!i_reg_124.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i_reg_124.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void MaxPooling1_layer::thread_i_cast2_fu_333_p1() {
    i_cast2_fu_333_p1 = esl_zext<5,2>(i_reg_124.read());
}

void MaxPooling1_layer::thread_j_2_fu_422_p2() {
    j_2_fu_422_p2 = (!j_reg_147.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j_reg_147.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void MaxPooling1_layer::thread_j_cast1_fu_412_p1() {
    j_cast1_fu_412_p1 = esl_zext<5,2>(j_reg_147.read());
}

void MaxPooling1_layer::thread_maxn_2_fu_447_p3() {
    maxn_2_fu_447_p3 = (!grp_fu_170_p2.read()[0].is_01())? sc_lv<32>(): ((grp_fu_170_p2.read()[0].to_bool())? conv1_output_q0.read(): maxn_1_reg_158.read());
}

void MaxPooling1_layer::thread_p_shl1_cast_fu_244_p1() {
    p_shl1_cast_fu_244_p1 = esl_zext<7,4>(tmp_21_fu_236_p3.read());
}

void MaxPooling1_layer::thread_p_shl2_cast_fu_198_p1() {
    p_shl2_cast_fu_198_p1 = esl_zext<8,7>(tmp_fu_190_p3.read());
}

void MaxPooling1_layer::thread_p_shl3_cast_fu_210_p1() {
    p_shl3_cast_fu_210_p1 = esl_zext<8,5>(tmp_14_fu_202_p3.read());
}

void MaxPooling1_layer::thread_p_shl4_cast_fu_291_p3() {
    p_shl4_cast_fu_291_p3 = esl_concat<6,4>(tmp_9_fu_287_p1.read(), ap_const_lv4_0);
}

void MaxPooling1_layer::thread_p_shl5_cast_fu_299_p3() {
    p_shl5_cast_fu_299_p3 = esl_concat<8,2>(tmp_23_fu_282_p2.read(), ap_const_lv2_0);
}

void MaxPooling1_layer::thread_p_shl6_cast_fu_367_p3() {
    p_shl6_cast_fu_367_p3 = esl_concat<7,5>(tmp_10_fu_363_p1.read(), ap_const_lv5_0);
}

void MaxPooling1_layer::thread_p_shl7_cast_fu_375_p3() {
    p_shl7_cast_fu_375_p3 = esl_concat<9,3>(tmp_26_fu_358_p2.read(), ap_const_lv3_0);
}

void MaxPooling1_layer::thread_p_shl_cast_fu_232_p1() {
    p_shl_cast_fu_232_p1 = esl_zext<7,6>(tmp_19_fu_224_p3.read());
}

void MaxPooling1_layer::thread_pool1_output_address0() {
    pool1_output_address0 =  (sc_lv<9>) (tmp_31_cast_fu_407_p1.read());
}

void MaxPooling1_layer::thread_pool1_output_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        pool1_output_ce0 = ap_const_logic_1;
    } else {
        pool1_output_ce0 = ap_const_logic_0;
    }
}

void MaxPooling1_layer::thread_pool1_output_d0() {
    pool1_output_d0 = (!grp_fu_170_p2.read()[0].is_01())? sc_lv<32>(): ((grp_fu_170_p2.read()[0].to_bool())? maxn_reg_135.read(): ap_const_lv32_0);
}

void MaxPooling1_layer::thread_pool1_output_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_337_p2.read(), ap_const_lv1_1))) {
        pool1_output_we0 = ap_const_logic_1;
    } else {
        pool1_output_we0 = ap_const_logic_0;
    }
}

void MaxPooling1_layer::thread_row_1_1_fu_264_p2() {
    row_1_1_fu_264_p2 = (!row_1_reg_101.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(row_1_reg_101.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void MaxPooling1_layer::thread_tmp_10_cast_fu_278_p1() {
    tmp_10_cast_fu_278_p1 = esl_zext<8,4>(row_1_reg_101.read());
}

void MaxPooling1_layer::thread_tmp_10_fu_363_p1() {
    tmp_10_fu_363_p1 = tmp_26_fu_358_p2.read().range(7-1, 0);
}

void MaxPooling1_layer::thread_tmp_11_fu_325_p3() {
    tmp_11_fu_325_p3 = esl_concat<4,1>(column_1_reg_112.read(), ap_const_lv1_0);
}

void MaxPooling1_layer::thread_tmp_14_cast_fu_398_p1() {
    tmp_14_cast_fu_398_p1 = esl_zext<10,4>(column_1_reg_112.read());
}

void MaxPooling1_layer::thread_tmp_14_fu_202_p3() {
    tmp_14_fu_202_p3 = esl_concat<2,3>(channels_reg_90.read(), ap_const_lv3_0);
}

void MaxPooling1_layer::thread_tmp_15_fu_349_p2() {
    tmp_15_fu_349_p2 = (!tmp_s_reg_481.read().is_01() || !i_cast2_fu_333_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_s_reg_481.read()) + sc_biguint<5>(i_cast2_fu_333_p1.read()));
}

void MaxPooling1_layer::thread_tmp_16_cast_fu_354_p1() {
    tmp_16_cast_fu_354_p1 = esl_zext<9,5>(tmp_15_fu_349_p2.read());
}

void MaxPooling1_layer::thread_tmp_16_fu_214_p2() {
    tmp_16_fu_214_p2 = (!p_shl2_cast_fu_198_p1.read().is_01() || !p_shl3_cast_fu_210_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(p_shl2_cast_fu_198_p1.read()) - sc_biguint<8>(p_shl3_cast_fu_210_p1.read()));
}

void MaxPooling1_layer::thread_tmp_18_fu_428_p2() {
    tmp_18_fu_428_p2 = (!j_cast1_fu_412_p1.read().is_01() || !tmp_11_reg_499.read().is_01())? sc_lv<5>(): (sc_biguint<5>(j_cast1_fu_412_p1.read()) + sc_biguint<5>(tmp_11_reg_499.read()));
}

void MaxPooling1_layer::thread_tmp_19_cast_fu_433_p1() {
    tmp_19_cast_fu_433_p1 = esl_zext<12,5>(tmp_18_fu_428_p2.read());
}

void MaxPooling1_layer::thread_tmp_19_fu_224_p3() {
    tmp_19_fu_224_p3 = esl_concat<2,4>(channels_reg_90.read(), ap_const_lv4_0);
}

void MaxPooling1_layer::thread_tmp_21_fu_236_p3() {
    tmp_21_fu_236_p3 = esl_concat<2,2>(channels_reg_90.read(), ap_const_lv2_0);
}

void MaxPooling1_layer::thread_tmp_22_fu_248_p2() {
    tmp_22_fu_248_p2 = (!p_shl_cast_fu_232_p1.read().is_01() || !p_shl1_cast_fu_244_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(p_shl_cast_fu_232_p1.read()) - sc_biguint<7>(p_shl1_cast_fu_244_p1.read()));
}

void MaxPooling1_layer::thread_tmp_23_cast_fu_220_p1() {
    tmp_23_cast_fu_220_p1 = esl_sext<9,8>(tmp_16_fu_214_p2.read());
}

void MaxPooling1_layer::thread_tmp_23_fu_282_p2() {
    tmp_23_fu_282_p2 = (!tmp_26_cast_reg_468.read().is_01() || !tmp_10_cast_fu_278_p1.read().is_01())? sc_lv<8>(): (sc_bigint<8>(tmp_26_cast_reg_468.read()) + sc_biguint<8>(tmp_10_cast_fu_278_p1.read()));
}

void MaxPooling1_layer::thread_tmp_24_fu_307_p2() {
    tmp_24_fu_307_p2 = (!p_shl4_cast_fu_291_p3.read().is_01() || !p_shl5_cast_fu_299_p3.read().is_01())? sc_lv<10>(): (sc_biguint<10>(p_shl4_cast_fu_291_p3.read()) - sc_biguint<10>(p_shl5_cast_fu_299_p3.read()));
}

void MaxPooling1_layer::thread_tmp_25_fu_402_p2() {
    tmp_25_fu_402_p2 = (!tmp_24_reg_486.read().is_01() || !tmp_14_cast_fu_398_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_24_reg_486.read()) + sc_biguint<10>(tmp_14_cast_fu_398_p1.read()));
}

void MaxPooling1_layer::thread_tmp_26_cast_fu_254_p1() {
    tmp_26_cast_fu_254_p1 = esl_sext<8,7>(tmp_22_fu_248_p2.read());
}

void MaxPooling1_layer::thread_tmp_26_fu_358_p2() {
    tmp_26_fu_358_p2 = (!tmp_16_cast_fu_354_p1.read().is_01() || !tmp_23_cast_reg_463.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_16_cast_fu_354_p1.read()) + sc_bigint<9>(tmp_23_cast_reg_463.read()));
}

void MaxPooling1_layer::thread_tmp_27_fu_383_p2() {
    tmp_27_fu_383_p2 = (!p_shl6_cast_fu_367_p3.read().is_01() || !p_shl7_cast_fu_375_p3.read().is_01())? sc_lv<12>(): (sc_biguint<12>(p_shl6_cast_fu_367_p3.read()) - sc_biguint<12>(p_shl7_cast_fu_375_p3.read()));
}

void MaxPooling1_layer::thread_tmp_28_fu_437_p2() {
    tmp_28_fu_437_p2 = (!tmp_27_reg_512.read().is_01() || !tmp_19_cast_fu_433_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(tmp_27_reg_512.read()) + sc_biguint<12>(tmp_19_cast_fu_433_p1.read()));
}

void MaxPooling1_layer::thread_tmp_31_cast_fu_407_p1() {
    tmp_31_cast_fu_407_p1 = esl_zext<64,10>(tmp_25_fu_402_p2.read());
}

void MaxPooling1_layer::thread_tmp_36_cast_fu_442_p1() {
    tmp_36_cast_fu_442_p1 = esl_zext<64,12>(tmp_28_fu_437_p2.read());
}

void MaxPooling1_layer::thread_tmp_9_fu_287_p1() {
    tmp_9_fu_287_p1 = tmp_23_fu_282_p2.read().range(6-1, 0);
}

void MaxPooling1_layer::thread_tmp_fu_190_p3() {
    tmp_fu_190_p3 = esl_concat<2,5>(channels_reg_90.read(), ap_const_lv5_0);
}

void MaxPooling1_layer::thread_tmp_s_fu_270_p3() {
    tmp_s_fu_270_p3 = esl_concat<4,1>(row_1_reg_101.read(), ap_const_lv1_0);
}

void MaxPooling1_layer::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond4_fu_178_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond3_fu_258_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond2_fu_313_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond1_fu_337_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(exitcond_fu_416_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<7>) ("XXXXXXX");
            break;
    }
}

}

