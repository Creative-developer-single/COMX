// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "MaxPooling2_layer.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic MaxPooling2_layer::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic MaxPooling2_layer::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> MaxPooling2_layer::ap_ST_fsm_state1 = "1";
const sc_lv<7> MaxPooling2_layer::ap_ST_fsm_state2 = "10";
const sc_lv<7> MaxPooling2_layer::ap_ST_fsm_state3 = "100";
const sc_lv<7> MaxPooling2_layer::ap_ST_fsm_state4 = "1000";
const sc_lv<7> MaxPooling2_layer::ap_ST_fsm_state5 = "10000";
const sc_lv<7> MaxPooling2_layer::ap_ST_fsm_state6 = "100000";
const sc_lv<7> MaxPooling2_layer::ap_ST_fsm_state7 = "1000000";
const sc_lv<32> MaxPooling2_layer::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> MaxPooling2_layer::ap_const_lv32_1 = "1";
const sc_lv<1> MaxPooling2_layer::ap_const_lv1_0 = "0";
const sc_lv<32> MaxPooling2_layer::ap_const_lv32_2 = "10";
const sc_lv<32> MaxPooling2_layer::ap_const_lv32_3 = "11";
const sc_lv<32> MaxPooling2_layer::ap_const_lv32_4 = "100";
const sc_lv<32> MaxPooling2_layer::ap_const_lv32_5 = "101";
const sc_lv<32> MaxPooling2_layer::ap_const_lv32_6 = "110";
const sc_lv<3> MaxPooling2_layer::ap_const_lv3_0 = "000";
const sc_lv<1> MaxPooling2_layer::ap_const_lv1_1 = "1";
const sc_lv<2> MaxPooling2_layer::ap_const_lv2_0 = "00";
const sc_lv<3> MaxPooling2_layer::ap_const_lv3_5 = "101";
const sc_lv<3> MaxPooling2_layer::ap_const_lv3_1 = "1";
const sc_lv<3> MaxPooling2_layer::ap_const_lv3_4 = "100";
const sc_lv<2> MaxPooling2_layer::ap_const_lv2_2 = "10";
const sc_lv<2> MaxPooling2_layer::ap_const_lv2_1 = "1";
const sc_lv<5> MaxPooling2_layer::ap_const_lv5_2 = "10";
const sc_lv<5> MaxPooling2_layer::ap_const_lv5_4 = "100";
const bool MaxPooling2_layer::ap_const_boolean_1 = true;

MaxPooling2_layer::MaxPooling2_layer(sc_module_name name) : sc_module(name), mVcdFile(0) {
    run_fcmp_32ns_32ndEe_U131 = new run_fcmp_32ns_32ndEe<1,1,32,32,1>("run_fcmp_32ns_32ndEe_U131");
    run_fcmp_32ns_32ndEe_U131->din0(grp_fu_153_p0);
    run_fcmp_32ns_32ndEe_U131->din1(grp_fu_153_p1);
    run_fcmp_32ns_32ndEe_U131->opcode(grp_fu_153_opcode);
    run_fcmp_32ns_32ndEe_U131->dout(grp_fu_153_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond4_fu_161_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond4_fu_161_p2 );

    SC_METHOD(thread_channels_1_fu_167_p2);
    sensitive << ( channels_reg_72 );

    SC_METHOD(thread_column_1_fu_226_p2);
    sensitive << ( column_1_1_reg_95 );

    SC_METHOD(thread_conv2_output_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_11_fu_312_p1 );

    SC_METHOD(thread_conv2_output_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_exitcond1_fu_242_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i_reg_107 );

    SC_METHOD(thread_exitcond2_fu_220_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( column_1_1_reg_95 );

    SC_METHOD(thread_exitcond3_fu_185_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( row_1_1_reg_84 );

    SC_METHOD(thread_exitcond4_fu_161_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( channels_reg_72 );

    SC_METHOD(thread_exitcond_fu_286_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( j_reg_130 );

    SC_METHOD(thread_grp_fu_153_opcode);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond1_fu_242_p2 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_153_p0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( maxn_reg_118 );
    sensitive << ( maxn_1_reg_141 );

    SC_METHOD(thread_grp_fu_153_p1);
    sensitive << ( conv2_output_q0 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_i_1_fu_248_p2);
    sensitive << ( i_reg_107 );

    SC_METHOD(thread_i_cast_fu_238_p1);
    sensitive << ( i_reg_107 );

    SC_METHOD(thread_j_1_fu_292_p2);
    sensitive << ( j_reg_130 );

    SC_METHOD(thread_j_cast_fu_282_p1);
    sensitive << ( j_reg_130 );

    SC_METHOD(thread_maxn_2_fu_317_p3);
    sensitive << ( conv2_output_q0 );
    sensitive << ( maxn_1_reg_141 );
    sensitive << ( grp_fu_153_p2 );

    SC_METHOD(thread_pool2_output_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_18_cast_fu_277_p1 );

    SC_METHOD(thread_pool2_output_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_pool2_output_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( maxn_reg_118 );
    sensitive << ( grp_fu_153_p2 );

    SC_METHOD(thread_pool2_output_we0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond1_fu_242_p2 );

    SC_METHOD(thread_row_1_fu_191_p2);
    sensitive << ( row_1_1_reg_84 );

    SC_METHOD(thread_tmp_10_fu_303_p4);
    sensitive << ( tmp_4_reg_377 );
    sensitive << ( channels_reg_72 );
    sensitive << ( tmp_6_fu_298_p2 );

    SC_METHOD(thread_tmp_11_fu_312_p1);
    sensitive << ( tmp_10_fu_303_p4 );

    SC_METHOD(thread_tmp_12_cast_fu_181_p1);
    sensitive << ( tmp_fu_173_p3 );

    SC_METHOD(thread_tmp_16_cast_fu_212_p3);
    sensitive << ( tmp_s_fu_207_p2 );

    SC_METHOD(thread_tmp_18_cast_fu_277_p1);
    sensitive << ( tmp_3_fu_272_p2 );

    SC_METHOD(thread_tmp_3_cast_fu_268_p1);
    sensitive << ( column_1_1_reg_95 );

    SC_METHOD(thread_tmp_3_fu_272_p2);
    sensitive << ( tmp_16_cast_reg_351 );
    sensitive << ( tmp_3_cast_fu_268_p1 );

    SC_METHOD(thread_tmp_4_fu_254_p2);
    sensitive << ( tmp_7_reg_346 );
    sensitive << ( i_cast_fu_238_p1 );

    SC_METHOD(thread_tmp_6_fu_298_p2);
    sensitive << ( tmp_8_reg_364 );
    sensitive << ( j_cast_fu_282_p1 );

    SC_METHOD(thread_tmp_7_fu_197_p2);
    sensitive << ( row_1_1_reg_84 );

    SC_METHOD(thread_tmp_8_cast_fu_203_p1);
    sensitive << ( row_1_1_reg_84 );

    SC_METHOD(thread_tmp_8_fu_232_p2);
    sensitive << ( column_1_1_reg_95 );

    SC_METHOD(thread_tmp_fu_173_p3);
    sensitive << ( channels_reg_72 );

    SC_METHOD(thread_tmp_s_fu_207_p2);
    sensitive << ( tmp_12_cast_reg_333 );
    sensitive << ( tmp_8_cast_fu_203_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond4_fu_161_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond3_fu_185_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond2_fu_220_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond1_fu_242_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond_fu_286_p2 );

    ap_CS_fsm = "0000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "MaxPooling2_layer_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, conv2_output_address0, "(port)conv2_output_address0");
    sc_trace(mVcdFile, conv2_output_ce0, "(port)conv2_output_ce0");
    sc_trace(mVcdFile, conv2_output_q0, "(port)conv2_output_q0");
    sc_trace(mVcdFile, pool2_output_address0, "(port)pool2_output_address0");
    sc_trace(mVcdFile, pool2_output_ce0, "(port)pool2_output_ce0");
    sc_trace(mVcdFile, pool2_output_we0, "(port)pool2_output_we0");
    sc_trace(mVcdFile, pool2_output_d0, "(port)pool2_output_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, channels_1_fu_167_p2, "channels_1_fu_167_p2");
    sc_trace(mVcdFile, channels_1_reg_328, "channels_1_reg_328");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_12_cast_fu_181_p1, "tmp_12_cast_fu_181_p1");
    sc_trace(mVcdFile, tmp_12_cast_reg_333, "tmp_12_cast_reg_333");
    sc_trace(mVcdFile, exitcond4_fu_161_p2, "exitcond4_fu_161_p2");
    sc_trace(mVcdFile, row_1_fu_191_p2, "row_1_fu_191_p2");
    sc_trace(mVcdFile, row_1_reg_341, "row_1_reg_341");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_7_fu_197_p2, "tmp_7_fu_197_p2");
    sc_trace(mVcdFile, tmp_7_reg_346, "tmp_7_reg_346");
    sc_trace(mVcdFile, exitcond3_fu_185_p2, "exitcond3_fu_185_p2");
    sc_trace(mVcdFile, tmp_16_cast_fu_212_p3, "tmp_16_cast_fu_212_p3");
    sc_trace(mVcdFile, tmp_16_cast_reg_351, "tmp_16_cast_reg_351");
    sc_trace(mVcdFile, column_1_fu_226_p2, "column_1_fu_226_p2");
    sc_trace(mVcdFile, column_1_reg_359, "column_1_reg_359");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_8_fu_232_p2, "tmp_8_fu_232_p2");
    sc_trace(mVcdFile, tmp_8_reg_364, "tmp_8_reg_364");
    sc_trace(mVcdFile, exitcond2_fu_220_p2, "exitcond2_fu_220_p2");
    sc_trace(mVcdFile, i_1_fu_248_p2, "i_1_fu_248_p2");
    sc_trace(mVcdFile, i_1_reg_372, "i_1_reg_372");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_4_fu_254_p2, "tmp_4_fu_254_p2");
    sc_trace(mVcdFile, tmp_4_reg_377, "tmp_4_reg_377");
    sc_trace(mVcdFile, exitcond1_fu_242_p2, "exitcond1_fu_242_p2");
    sc_trace(mVcdFile, j_1_fu_292_p2, "j_1_fu_292_p2");
    sc_trace(mVcdFile, j_1_reg_385, "j_1_reg_385");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, exitcond_fu_286_p2, "exitcond_fu_286_p2");
    sc_trace(mVcdFile, maxn_2_fu_317_p3, "maxn_2_fu_317_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, channels_reg_72, "channels_reg_72");
    sc_trace(mVcdFile, row_1_1_reg_84, "row_1_1_reg_84");
    sc_trace(mVcdFile, column_1_1_reg_95, "column_1_1_reg_95");
    sc_trace(mVcdFile, i_reg_107, "i_reg_107");
    sc_trace(mVcdFile, maxn_reg_118, "maxn_reg_118");
    sc_trace(mVcdFile, j_reg_130, "j_reg_130");
    sc_trace(mVcdFile, maxn_1_reg_141, "maxn_1_reg_141");
    sc_trace(mVcdFile, tmp_18_cast_fu_277_p1, "tmp_18_cast_fu_277_p1");
    sc_trace(mVcdFile, tmp_11_fu_312_p1, "tmp_11_fu_312_p1");
    sc_trace(mVcdFile, grp_fu_153_p0, "grp_fu_153_p0");
    sc_trace(mVcdFile, grp_fu_153_p1, "grp_fu_153_p1");
    sc_trace(mVcdFile, tmp_fu_173_p3, "tmp_fu_173_p3");
    sc_trace(mVcdFile, tmp_8_cast_fu_203_p1, "tmp_8_cast_fu_203_p1");
    sc_trace(mVcdFile, tmp_s_fu_207_p2, "tmp_s_fu_207_p2");
    sc_trace(mVcdFile, i_cast_fu_238_p1, "i_cast_fu_238_p1");
    sc_trace(mVcdFile, grp_fu_153_p2, "grp_fu_153_p2");
    sc_trace(mVcdFile, tmp_3_cast_fu_268_p1, "tmp_3_cast_fu_268_p1");
    sc_trace(mVcdFile, tmp_3_fu_272_p2, "tmp_3_fu_272_p2");
    sc_trace(mVcdFile, j_cast_fu_282_p1, "j_cast_fu_282_p1");
    sc_trace(mVcdFile, tmp_6_fu_298_p2, "tmp_6_fu_298_p2");
    sc_trace(mVcdFile, tmp_10_fu_303_p4, "tmp_10_fu_303_p4");
    sc_trace(mVcdFile, grp_fu_153_opcode, "grp_fu_153_opcode");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

MaxPooling2_layer::~MaxPooling2_layer() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete run_fcmp_32ns_32ndEe_U131;
}

void MaxPooling2_layer::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_185_p2.read(), ap_const_lv1_1))) {
        channels_reg_72 = channels_1_reg_328.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        channels_reg_72 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_185_p2.read()))) {
        column_1_1_reg_95 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(exitcond1_fu_242_p2.read(), ap_const_lv1_1))) {
        column_1_1_reg_95 = column_1_reg_359.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_286_p2.read(), ap_const_lv1_1))) {
        i_reg_107 = i_1_reg_372.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_220_p2.read()))) {
        i_reg_107 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_242_p2.read()))) {
        j_reg_130 = ap_const_lv2_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        j_reg_130 = j_1_reg_385.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_242_p2.read()))) {
        maxn_1_reg_141 = maxn_reg_118.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        maxn_1_reg_141 = maxn_2_fu_317_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_286_p2.read(), ap_const_lv1_1))) {
        maxn_reg_118 = maxn_1_reg_141.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_220_p2.read()))) {
        maxn_reg_118 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_220_p2.read(), ap_const_lv1_1))) {
        row_1_1_reg_84 = row_1_reg_341.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond4_fu_161_p2.read(), ap_const_lv1_0))) {
        row_1_1_reg_84 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        channels_1_reg_328 = channels_1_fu_167_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        column_1_reg_359 = column_1_fu_226_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_1_reg_372 = i_1_fu_248_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        j_1_reg_385 = j_1_fu_292_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        row_1_reg_341 = row_1_fu_191_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond4_fu_161_p2.read(), ap_const_lv1_0))) {
        tmp_12_cast_reg_333 = tmp_12_cast_fu_181_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_185_p2.read()))) {
        tmp_16_cast_reg_351 = tmp_16_cast_fu_212_p3.read();
        tmp_7_reg_346 = tmp_7_fu_197_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_242_p2.read()))) {
        tmp_4_reg_377 = tmp_4_fu_254_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_220_p2.read()))) {
        tmp_8_reg_364 = tmp_8_fu_232_p2.read();
    }
}

void MaxPooling2_layer::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void MaxPooling2_layer::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void MaxPooling2_layer::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void MaxPooling2_layer::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void MaxPooling2_layer::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void MaxPooling2_layer::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void MaxPooling2_layer::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void MaxPooling2_layer::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond4_fu_161_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void MaxPooling2_layer::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void MaxPooling2_layer::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond4_fu_161_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void MaxPooling2_layer::thread_channels_1_fu_167_p2() {
    channels_1_fu_167_p2 = (!channels_reg_72.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(channels_reg_72.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void MaxPooling2_layer::thread_column_1_fu_226_p2() {
    column_1_fu_226_p2 = (!column_1_1_reg_95.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(column_1_1_reg_95.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void MaxPooling2_layer::thread_conv2_output_address0() {
    conv2_output_address0 =  (sc_lv<9>) (tmp_11_fu_312_p1.read());
}

void MaxPooling2_layer::thread_conv2_output_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        conv2_output_ce0 = ap_const_logic_1;
    } else {
        conv2_output_ce0 = ap_const_logic_0;
    }
}

void MaxPooling2_layer::thread_exitcond1_fu_242_p2() {
    exitcond1_fu_242_p2 = (!i_reg_107.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_107.read() == ap_const_lv2_2);
}

void MaxPooling2_layer::thread_exitcond2_fu_220_p2() {
    exitcond2_fu_220_p2 = (!column_1_1_reg_95.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(column_1_1_reg_95.read() == ap_const_lv3_4);
}

void MaxPooling2_layer::thread_exitcond3_fu_185_p2() {
    exitcond3_fu_185_p2 = (!row_1_1_reg_84.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(row_1_1_reg_84.read() == ap_const_lv3_4);
}

void MaxPooling2_layer::thread_exitcond4_fu_161_p2() {
    exitcond4_fu_161_p2 = (!channels_reg_72.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(channels_reg_72.read() == ap_const_lv3_5);
}

void MaxPooling2_layer::thread_exitcond_fu_286_p2() {
    exitcond_fu_286_p2 = (!j_reg_130.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_130.read() == ap_const_lv2_2);
}

void MaxPooling2_layer::thread_grp_fu_153_opcode() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_153_opcode = ap_const_lv5_4;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(exitcond1_fu_242_p2.read(), ap_const_lv1_1))) {
        grp_fu_153_opcode = ap_const_lv5_2;
    } else {
        grp_fu_153_opcode = "XXXXX";
    }
}

void MaxPooling2_layer::thread_grp_fu_153_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_153_p0 = maxn_1_reg_141.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_153_p0 = maxn_reg_118.read();
    } else {
        grp_fu_153_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void MaxPooling2_layer::thread_grp_fu_153_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_153_p1 = conv2_output_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_153_p1 = ap_const_lv32_0;
    } else {
        grp_fu_153_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void MaxPooling2_layer::thread_i_1_fu_248_p2() {
    i_1_fu_248_p2 = (!i_reg_107.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i_reg_107.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void MaxPooling2_layer::thread_i_cast_fu_238_p1() {
    i_cast_fu_238_p1 = esl_zext<3,2>(i_reg_107.read());
}

void MaxPooling2_layer::thread_j_1_fu_292_p2() {
    j_1_fu_292_p2 = (!j_reg_130.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j_reg_130.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void MaxPooling2_layer::thread_j_cast_fu_282_p1() {
    j_cast_fu_282_p1 = esl_zext<3,2>(j_reg_130.read());
}

void MaxPooling2_layer::thread_maxn_2_fu_317_p3() {
    maxn_2_fu_317_p3 = (!grp_fu_153_p2.read()[0].is_01())? sc_lv<32>(): ((grp_fu_153_p2.read()[0].to_bool())? conv2_output_q0.read(): maxn_1_reg_141.read());
}

void MaxPooling2_layer::thread_pool2_output_address0() {
    pool2_output_address0 =  (sc_lv<7>) (tmp_18_cast_fu_277_p1.read());
}

void MaxPooling2_layer::thread_pool2_output_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        pool2_output_ce0 = ap_const_logic_1;
    } else {
        pool2_output_ce0 = ap_const_logic_0;
    }
}

void MaxPooling2_layer::thread_pool2_output_d0() {
    pool2_output_d0 = (!grp_fu_153_p2.read()[0].is_01())? sc_lv<32>(): ((grp_fu_153_p2.read()[0].to_bool())? maxn_reg_118.read(): ap_const_lv32_0);
}

void MaxPooling2_layer::thread_pool2_output_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_242_p2.read(), ap_const_lv1_1))) {
        pool2_output_we0 = ap_const_logic_1;
    } else {
        pool2_output_we0 = ap_const_logic_0;
    }
}

void MaxPooling2_layer::thread_row_1_fu_191_p2() {
    row_1_fu_191_p2 = (!row_1_1_reg_84.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(row_1_1_reg_84.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void MaxPooling2_layer::thread_tmp_10_fu_303_p4() {
    tmp_10_fu_303_p4 = esl_concat<6,3>(esl_concat<3,3>(channels_reg_72.read(), tmp_4_reg_377.read()), tmp_6_fu_298_p2.read());
}

void MaxPooling2_layer::thread_tmp_11_fu_312_p1() {
    tmp_11_fu_312_p1 = esl_zext<64,9>(tmp_10_fu_303_p4.read());
}

void MaxPooling2_layer::thread_tmp_12_cast_fu_181_p1() {
    tmp_12_cast_fu_181_p1 = esl_zext<6,5>(tmp_fu_173_p3.read());
}

void MaxPooling2_layer::thread_tmp_16_cast_fu_212_p3() {
    tmp_16_cast_fu_212_p3 = esl_concat<6,2>(tmp_s_fu_207_p2.read(), ap_const_lv2_0);
}

void MaxPooling2_layer::thread_tmp_18_cast_fu_277_p1() {
    tmp_18_cast_fu_277_p1 = esl_zext<64,8>(tmp_3_fu_272_p2.read());
}

void MaxPooling2_layer::thread_tmp_3_cast_fu_268_p1() {
    tmp_3_cast_fu_268_p1 = esl_zext<8,3>(column_1_1_reg_95.read());
}

void MaxPooling2_layer::thread_tmp_3_fu_272_p2() {
    tmp_3_fu_272_p2 = (!tmp_16_cast_reg_351.read().is_01() || !tmp_3_cast_fu_268_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_16_cast_reg_351.read()) + sc_biguint<8>(tmp_3_cast_fu_268_p1.read()));
}

void MaxPooling2_layer::thread_tmp_4_fu_254_p2() {
    tmp_4_fu_254_p2 = (!tmp_7_reg_346.read().is_01() || !i_cast_fu_238_p1.read().is_01())? sc_lv<3>(): (sc_biguint<3>(tmp_7_reg_346.read()) + sc_biguint<3>(i_cast_fu_238_p1.read()));
}

void MaxPooling2_layer::thread_tmp_6_fu_298_p2() {
    tmp_6_fu_298_p2 = (!tmp_8_reg_364.read().is_01() || !j_cast_fu_282_p1.read().is_01())? sc_lv<3>(): (sc_biguint<3>(tmp_8_reg_364.read()) + sc_biguint<3>(j_cast_fu_282_p1.read()));
}

void MaxPooling2_layer::thread_tmp_7_fu_197_p2() {
    tmp_7_fu_197_p2 = (!ap_const_lv3_1.is_01())? sc_lv<3>(): row_1_1_reg_84.read() << (unsigned short)ap_const_lv3_1.to_uint();
}

void MaxPooling2_layer::thread_tmp_8_cast_fu_203_p1() {
    tmp_8_cast_fu_203_p1 = esl_zext<6,3>(row_1_1_reg_84.read());
}

void MaxPooling2_layer::thread_tmp_8_fu_232_p2() {
    tmp_8_fu_232_p2 = (!ap_const_lv3_1.is_01())? sc_lv<3>(): column_1_1_reg_95.read() << (unsigned short)ap_const_lv3_1.to_uint();
}

void MaxPooling2_layer::thread_tmp_fu_173_p3() {
    tmp_fu_173_p3 = esl_concat<3,2>(channels_reg_72.read(), ap_const_lv2_0);
}

void MaxPooling2_layer::thread_tmp_s_fu_207_p2() {
    tmp_s_fu_207_p2 = (!tmp_12_cast_reg_333.read().is_01() || !tmp_8_cast_fu_203_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_12_cast_reg_333.read()) + sc_biguint<6>(tmp_8_cast_fu_203_p1.read()));
}

void MaxPooling2_layer::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond4_fu_161_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond3_fu_185_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond2_fu_220_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond1_fu_242_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(exitcond_fu_286_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<7>) ("XXXXXXX");
            break;
    }
}

}

