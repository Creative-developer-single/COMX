// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _MaxPooling1_layer_HH_
#define _MaxPooling1_layer_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "run_fcmp_32ns_32ndEe.h"

namespace ap_rtl {

struct MaxPooling1_layer : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<11> > conv1_output_address0;
    sc_out< sc_logic > conv1_output_ce0;
    sc_in< sc_lv<32> > conv1_output_q0;
    sc_out< sc_lv<9> > pool1_output_address0;
    sc_out< sc_logic > pool1_output_ce0;
    sc_out< sc_logic > pool1_output_we0;
    sc_out< sc_lv<32> > pool1_output_d0;


    // Module declarations
    MaxPooling1_layer(sc_module_name name);
    SC_HAS_PROCESS(MaxPooling1_layer);

    ~MaxPooling1_layer();

    sc_trace_file* mVcdFile;

    run_fcmp_32ns_32ndEe<1,1,32,32,1>* run_fcmp_32ns_32ndEe_U45;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<2> > channels_2_fu_184_p2;
    sc_signal< sc_lv<2> > channels_2_reg_458;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<9> > tmp_23_cast_fu_220_p1;
    sc_signal< sc_lv<9> > tmp_23_cast_reg_463;
    sc_signal< sc_lv<1> > exitcond4_fu_178_p2;
    sc_signal< sc_lv<8> > tmp_26_cast_fu_254_p1;
    sc_signal< sc_lv<8> > tmp_26_cast_reg_468;
    sc_signal< sc_lv<4> > row_1_1_fu_264_p2;
    sc_signal< sc_lv<4> > row_1_1_reg_476;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<5> > tmp_s_fu_270_p3;
    sc_signal< sc_lv<5> > tmp_s_reg_481;
    sc_signal< sc_lv<1> > exitcond3_fu_258_p2;
    sc_signal< sc_lv<10> > tmp_24_fu_307_p2;
    sc_signal< sc_lv<10> > tmp_24_reg_486;
    sc_signal< sc_lv<4> > column_1_1_fu_319_p2;
    sc_signal< sc_lv<4> > column_1_1_reg_494;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<5> > tmp_11_fu_325_p3;
    sc_signal< sc_lv<5> > tmp_11_reg_499;
    sc_signal< sc_lv<1> > exitcond2_fu_313_p2;
    sc_signal< sc_lv<2> > i_2_fu_343_p2;
    sc_signal< sc_lv<2> > i_2_reg_507;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<12> > tmp_27_fu_383_p2;
    sc_signal< sc_lv<12> > tmp_27_reg_512;
    sc_signal< sc_lv<1> > exitcond1_fu_337_p2;
    sc_signal< sc_lv<2> > j_2_fu_422_p2;
    sc_signal< sc_lv<2> > j_2_reg_520;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > exitcond_fu_416_p2;
    sc_signal< sc_lv<32> > maxn_2_fu_447_p3;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<2> > channels_reg_90;
    sc_signal< sc_lv<4> > row_1_reg_101;
    sc_signal< sc_lv<4> > column_1_reg_112;
    sc_signal< sc_lv<2> > i_reg_124;
    sc_signal< sc_lv<32> > maxn_reg_135;
    sc_signal< sc_lv<2> > j_reg_147;
    sc_signal< sc_lv<32> > maxn_1_reg_158;
    sc_signal< sc_lv<64> > tmp_31_cast_fu_407_p1;
    sc_signal< sc_lv<64> > tmp_36_cast_fu_442_p1;
    sc_signal< sc_lv<32> > grp_fu_170_p0;
    sc_signal< sc_lv<32> > grp_fu_170_p1;
    sc_signal< sc_lv<7> > tmp_fu_190_p3;
    sc_signal< sc_lv<5> > tmp_14_fu_202_p3;
    sc_signal< sc_lv<8> > p_shl2_cast_fu_198_p1;
    sc_signal< sc_lv<8> > p_shl3_cast_fu_210_p1;
    sc_signal< sc_lv<8> > tmp_16_fu_214_p2;
    sc_signal< sc_lv<6> > tmp_19_fu_224_p3;
    sc_signal< sc_lv<4> > tmp_21_fu_236_p3;
    sc_signal< sc_lv<7> > p_shl_cast_fu_232_p1;
    sc_signal< sc_lv<7> > p_shl1_cast_fu_244_p1;
    sc_signal< sc_lv<7> > tmp_22_fu_248_p2;
    sc_signal< sc_lv<8> > tmp_10_cast_fu_278_p1;
    sc_signal< sc_lv<8> > tmp_23_fu_282_p2;
    sc_signal< sc_lv<6> > tmp_9_fu_287_p1;
    sc_signal< sc_lv<10> > p_shl4_cast_fu_291_p3;
    sc_signal< sc_lv<10> > p_shl5_cast_fu_299_p3;
    sc_signal< sc_lv<5> > i_cast2_fu_333_p1;
    sc_signal< sc_lv<5> > tmp_15_fu_349_p2;
    sc_signal< sc_lv<9> > tmp_16_cast_fu_354_p1;
    sc_signal< sc_lv<9> > tmp_26_fu_358_p2;
    sc_signal< sc_lv<7> > tmp_10_fu_363_p1;
    sc_signal< sc_lv<12> > p_shl6_cast_fu_367_p3;
    sc_signal< sc_lv<12> > p_shl7_cast_fu_375_p3;
    sc_signal< sc_lv<1> > grp_fu_170_p2;
    sc_signal< sc_lv<10> > tmp_14_cast_fu_398_p1;
    sc_signal< sc_lv<10> > tmp_25_fu_402_p2;
    sc_signal< sc_lv<5> > j_cast1_fu_412_p1;
    sc_signal< sc_lv<5> > tmp_18_fu_428_p2;
    sc_signal< sc_lv<12> > tmp_19_cast_fu_433_p1;
    sc_signal< sc_lv<12> > tmp_28_fu_437_p2;
    sc_signal< sc_lv<5> > grp_fu_170_opcode;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<5> ap_const_lv5_4;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_channels_2_fu_184_p2();
    void thread_column_1_1_fu_319_p2();
    void thread_conv1_output_address0();
    void thread_conv1_output_ce0();
    void thread_exitcond1_fu_337_p2();
    void thread_exitcond2_fu_313_p2();
    void thread_exitcond3_fu_258_p2();
    void thread_exitcond4_fu_178_p2();
    void thread_exitcond_fu_416_p2();
    void thread_grp_fu_170_opcode();
    void thread_grp_fu_170_p0();
    void thread_grp_fu_170_p1();
    void thread_i_2_fu_343_p2();
    void thread_i_cast2_fu_333_p1();
    void thread_j_2_fu_422_p2();
    void thread_j_cast1_fu_412_p1();
    void thread_maxn_2_fu_447_p3();
    void thread_p_shl1_cast_fu_244_p1();
    void thread_p_shl2_cast_fu_198_p1();
    void thread_p_shl3_cast_fu_210_p1();
    void thread_p_shl4_cast_fu_291_p3();
    void thread_p_shl5_cast_fu_299_p3();
    void thread_p_shl6_cast_fu_367_p3();
    void thread_p_shl7_cast_fu_375_p3();
    void thread_p_shl_cast_fu_232_p1();
    void thread_pool1_output_address0();
    void thread_pool1_output_ce0();
    void thread_pool1_output_d0();
    void thread_pool1_output_we0();
    void thread_row_1_1_fu_264_p2();
    void thread_tmp_10_cast_fu_278_p1();
    void thread_tmp_10_fu_363_p1();
    void thread_tmp_11_fu_325_p3();
    void thread_tmp_14_cast_fu_398_p1();
    void thread_tmp_14_fu_202_p3();
    void thread_tmp_15_fu_349_p2();
    void thread_tmp_16_cast_fu_354_p1();
    void thread_tmp_16_fu_214_p2();
    void thread_tmp_18_fu_428_p2();
    void thread_tmp_19_cast_fu_433_p1();
    void thread_tmp_19_fu_224_p3();
    void thread_tmp_21_fu_236_p3();
    void thread_tmp_22_fu_248_p2();
    void thread_tmp_23_cast_fu_220_p1();
    void thread_tmp_23_fu_282_p2();
    void thread_tmp_24_fu_307_p2();
    void thread_tmp_25_fu_402_p2();
    void thread_tmp_26_cast_fu_254_p1();
    void thread_tmp_26_fu_358_p2();
    void thread_tmp_27_fu_383_p2();
    void thread_tmp_28_fu_437_p2();
    void thread_tmp_31_cast_fu_407_p1();
    void thread_tmp_36_cast_fu_442_p1();
    void thread_tmp_9_fu_287_p1();
    void thread_tmp_fu_190_p3();
    void thread_tmp_s_fu_270_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
