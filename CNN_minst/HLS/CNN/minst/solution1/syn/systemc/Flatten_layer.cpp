// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Flatten_layer.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Flatten_layer::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Flatten_layer::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> Flatten_layer::ap_ST_fsm_state1 = "1";
const sc_lv<10> Flatten_layer::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<10> Flatten_layer::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<10> Flatten_layer::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<10> Flatten_layer::ap_ST_fsm_pp0_stage3 = "10000";
const sc_lv<10> Flatten_layer::ap_ST_fsm_pp0_stage4 = "100000";
const sc_lv<10> Flatten_layer::ap_ST_fsm_pp0_stage5 = "1000000";
const sc_lv<10> Flatten_layer::ap_ST_fsm_pp0_stage6 = "10000000";
const sc_lv<10> Flatten_layer::ap_ST_fsm_pp0_stage7 = "100000000";
const sc_lv<10> Flatten_layer::ap_ST_fsm_state11 = "1000000000";
const bool Flatten_layer::ap_const_boolean_1 = true;
const sc_lv<32> Flatten_layer::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Flatten_layer::ap_const_lv32_1 = "1";
const bool Flatten_layer::ap_const_boolean_0 = false;
const sc_lv<1> Flatten_layer::ap_const_lv1_0 = "0";
const sc_lv<32> Flatten_layer::ap_const_lv32_2 = "10";
const sc_lv<32> Flatten_layer::ap_const_lv32_3 = "11";
const sc_lv<32> Flatten_layer::ap_const_lv32_4 = "100";
const sc_lv<32> Flatten_layer::ap_const_lv32_5 = "101";
const sc_lv<32> Flatten_layer::ap_const_lv32_6 = "110";
const sc_lv<32> Flatten_layer::ap_const_lv32_7 = "111";
const sc_lv<32> Flatten_layer::ap_const_lv32_8 = "1000";
const sc_lv<1> Flatten_layer::ap_const_lv1_1 = "1";
const sc_lv<3> Flatten_layer::ap_const_lv3_0 = "000";
const sc_lv<7> Flatten_layer::ap_const_lv7_0 = "0000000";
const sc_lv<3> Flatten_layer::ap_const_lv3_5 = "101";
const sc_lv<3> Flatten_layer::ap_const_lv3_1 = "1";
const sc_lv<4> Flatten_layer::ap_const_lv4_0 = "0000";
const sc_lv<7> Flatten_layer::ap_const_lv7_1 = "1";
const sc_lv<57> Flatten_layer::ap_const_lv57_0 = "000000000000000000000000000000000000000000000000000000000";
const sc_lv<7> Flatten_layer::ap_const_lv7_2 = "10";
const sc_lv<7> Flatten_layer::ap_const_lv7_3 = "11";
const sc_lv<7> Flatten_layer::ap_const_lv7_4 = "100";
const sc_lv<7> Flatten_layer::ap_const_lv7_5 = "101";
const sc_lv<8> Flatten_layer::ap_const_lv8_1 = "1";
const sc_lv<7> Flatten_layer::ap_const_lv7_6 = "110";
const sc_lv<7> Flatten_layer::ap_const_lv7_7 = "111";
const sc_lv<7> Flatten_layer::ap_const_lv7_8 = "1000";
const sc_lv<7> Flatten_layer::ap_const_lv7_9 = "1001";
const sc_lv<7> Flatten_layer::ap_const_lv7_A = "1010";
const sc_lv<7> Flatten_layer::ap_const_lv7_B = "1011";
const sc_lv<8> Flatten_layer::ap_const_lv8_4 = "100";
const sc_lv<8> Flatten_layer::ap_const_lv8_5 = "101";
const sc_lv<7> Flatten_layer::ap_const_lv7_C = "1100";
const sc_lv<7> Flatten_layer::ap_const_lv7_D = "1101";
const sc_lv<8> Flatten_layer::ap_const_lv8_6 = "110";
const sc_lv<8> Flatten_layer::ap_const_lv8_7 = "111";
const sc_lv<7> Flatten_layer::ap_const_lv7_E = "1110";
const sc_lv<7> Flatten_layer::ap_const_lv7_F = "1111";
const sc_lv<7> Flatten_layer::ap_const_lv7_10 = "10000";
const sc_lv<32> Flatten_layer::ap_const_lv32_9 = "1001";

Flatten_layer::Flatten_layer(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_pp0_stage3);

    SC_METHOD(thread_ap_block_pp0_stage3_11001);

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);

    SC_METHOD(thread_ap_block_pp0_stage4);

    SC_METHOD(thread_ap_block_pp0_stage4_11001);

    SC_METHOD(thread_ap_block_pp0_stage4_subdone);

    SC_METHOD(thread_ap_block_pp0_stage5);

    SC_METHOD(thread_ap_block_pp0_stage5_11001);

    SC_METHOD(thread_ap_block_pp0_stage5_subdone);

    SC_METHOD(thread_ap_block_pp0_stage6);

    SC_METHOD(thread_ap_block_pp0_stage6_11001);

    SC_METHOD(thread_ap_block_pp0_stage6_subdone);

    SC_METHOD(thread_ap_block_pp0_stage7);

    SC_METHOD(thread_ap_block_pp0_stage7_11001);

    SC_METHOD(thread_ap_block_pp0_stage7_subdone);

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage3_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage4_iter0);

    SC_METHOD(thread_ap_block_state7_pp0_stage5_iter0);

    SC_METHOD(thread_ap_block_state8_pp0_stage6_iter0);

    SC_METHOD(thread_ap_block_state9_pp0_stage7_iter0);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond2_fu_385_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_channels_phi_fu_366_p4);
    sensitive << ( channels_reg_362 );
    sensitive << ( exitcond2_reg_806 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( channels_7_reg_810 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_channels_7_fu_391_p2);
    sensitive << ( ap_phi_mux_channels_phi_fu_366_p4 );

    SC_METHOD(thread_cnt_1_fu_782_p2);
    sensitive << ( cnt_reg_373 );

    SC_METHOD(thread_exitcond2_fu_385_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_channels_phi_fu_366_p4 );

    SC_METHOD(thread_flatten_output_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_s_107_fu_459_p1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_39_0_2_fu_512_p1 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( tmp_39_1_fu_562_p1 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( tmp_39_1_2_fu_615_p1 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( tmp_39_2_fu_668_p1 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( tmp_39_2_2_fu_716_p1 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( tmp_39_3_fu_766_p1 );
    sensitive << ( tmp_39_3_2_fu_797_p1 );

    SC_METHOD(thread_flatten_output_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_39_0_1_fu_464_p1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_39_0_3_fu_517_p1 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( tmp_39_1_1_fu_567_p1 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( tmp_39_1_3_fu_620_p1 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( tmp_39_2_1_fu_673_p1 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( tmp_39_2_3_fu_721_p1 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( tmp_39_3_1_fu_771_p1 );
    sensitive << ( tmp_39_3_3_fu_802_p1 );

    SC_METHOD(thread_flatten_output_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_flatten_output_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_flatten_output_d0);
    sensitive << ( pool2_output_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage7 );

    SC_METHOD(thread_flatten_output_d1);
    sensitive << ( pool2_output_q1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage7 );

    SC_METHOD(thread_flatten_output_we0);
    sensitive << ( exitcond2_reg_806 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_flatten_output_we1);
    sensitive << ( exitcond2_reg_806 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_pool2_output_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_51_fu_405_p1 );
    sensitive << ( tmp_55_fu_430_p3 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_59_fu_474_p3 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_63_fu_527_p3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( tmp_67_fu_577_p3 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( tmp_71_fu_630_p3 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( tmp_75_fu_683_p3 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( tmp_79_fu_731_p3 );
    sensitive << ( ap_block_pp0_stage7 );

    SC_METHOD(thread_pool2_output_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_53_fu_416_p3 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_57_fu_444_p3 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_61_fu_488_p3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( tmp_65_fu_541_p3 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( tmp_69_fu_591_p3 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( tmp_73_fu_644_p3 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( tmp_77_fu_697_p3 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( tmp_81_fu_745_p3 );

    SC_METHOD(thread_pool2_output_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_11001 );

    SC_METHOD(thread_pool2_output_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_11001 );

    SC_METHOD(thread_tmp_1_fu_656_p2);
    sensitive << ( tmp_cast4_fu_653_p1 );

    SC_METHOD(thread_tmp_2_fu_754_p2);
    sensitive << ( cnt_reg_373 );

    SC_METHOD(thread_tmp_38_0_1_fu_500_p2);
    sensitive << ( tmp_38_0_cast3_fu_497_p1 );

    SC_METHOD(thread_tmp_38_0_2_fu_506_p2);
    sensitive << ( cnt_reg_373 );

    SC_METHOD(thread_tmp_38_0_cast3_fu_497_p1);
    sensitive << ( tmp_38_0_s_reg_853 );

    SC_METHOD(thread_tmp_38_0_s_fu_453_p2);
    sensitive << ( cnt_reg_373 );

    SC_METHOD(thread_tmp_38_1_1_fu_603_p2);
    sensitive << ( tmp_38_1_cast2_fu_600_p1 );

    SC_METHOD(thread_tmp_38_1_2_fu_609_p2);
    sensitive << ( cnt_reg_373 );

    SC_METHOD(thread_tmp_38_1_cast2_fu_600_p1);
    sensitive << ( tmp_38_1_s_reg_883 );

    SC_METHOD(thread_tmp_38_1_s_fu_556_p2);
    sensitive << ( cnt_reg_373 );

    SC_METHOD(thread_tmp_38_2_1_fu_706_p2);
    sensitive << ( tmp_cast4_reg_908 );

    SC_METHOD(thread_tmp_38_2_2_fu_711_p2);
    sensitive << ( tmp_cast4_reg_908 );

    SC_METHOD(thread_tmp_38_2_fu_662_p2);
    sensitive << ( tmp_cast4_fu_653_p1 );

    SC_METHOD(thread_tmp_38_3_1_fu_791_p2);
    sensitive << ( tmp_38_3_cast1_fu_788_p1 );

    SC_METHOD(thread_tmp_38_3_2_fu_776_p2);
    sensitive << ( cnt_reg_373 );

    SC_METHOD(thread_tmp_38_3_cast1_fu_788_p1);
    sensitive << ( tmp_38_3_s_reg_934 );

    SC_METHOD(thread_tmp_38_3_s_fu_760_p2);
    sensitive << ( cnt_reg_373 );

    SC_METHOD(thread_tmp_39_0_1_fu_464_p1);
    sensitive << ( tmp_38_0_s_fu_453_p2 );

    SC_METHOD(thread_tmp_39_0_2_fu_512_p1);
    sensitive << ( tmp_38_0_1_fu_500_p2 );

    SC_METHOD(thread_tmp_39_0_3_fu_517_p1);
    sensitive << ( tmp_38_0_2_fu_506_p2 );

    SC_METHOD(thread_tmp_39_1_1_fu_567_p1);
    sensitive << ( tmp_38_1_s_fu_556_p2 );

    SC_METHOD(thread_tmp_39_1_2_fu_615_p1);
    sensitive << ( tmp_38_1_1_fu_603_p2 );

    SC_METHOD(thread_tmp_39_1_3_fu_620_p1);
    sensitive << ( tmp_38_1_2_fu_609_p2 );

    SC_METHOD(thread_tmp_39_1_fu_562_p1);
    sensitive << ( tmp_s_fu_550_p2 );

    SC_METHOD(thread_tmp_39_2_1_fu_673_p1);
    sensitive << ( tmp_38_2_fu_662_p2 );

    SC_METHOD(thread_tmp_39_2_2_fu_716_p1);
    sensitive << ( tmp_38_2_1_fu_706_p2 );

    SC_METHOD(thread_tmp_39_2_3_fu_721_p1);
    sensitive << ( tmp_38_2_2_fu_711_p2 );

    SC_METHOD(thread_tmp_39_2_fu_668_p1);
    sensitive << ( tmp_1_fu_656_p2 );

    SC_METHOD(thread_tmp_39_3_1_fu_771_p1);
    sensitive << ( tmp_38_3_s_fu_760_p2 );

    SC_METHOD(thread_tmp_39_3_2_fu_797_p1);
    sensitive << ( tmp_38_3_1_fu_791_p2 );

    SC_METHOD(thread_tmp_39_3_3_fu_802_p1);
    sensitive << ( tmp_38_3_2_reg_939 );

    SC_METHOD(thread_tmp_39_3_fu_766_p1);
    sensitive << ( tmp_2_fu_754_p2 );

    SC_METHOD(thread_tmp_51_fu_405_p1);
    sensitive << ( tmp_fu_397_p3 );

    SC_METHOD(thread_tmp_52_fu_410_p2);
    sensitive << ( tmp_fu_397_p3 );

    SC_METHOD(thread_tmp_53_fu_416_p3);
    sensitive << ( tmp_52_fu_410_p2 );

    SC_METHOD(thread_tmp_54_fu_425_p2);
    sensitive << ( tmp_reg_815 );

    SC_METHOD(thread_tmp_55_fu_430_p3);
    sensitive << ( tmp_54_fu_425_p2 );

    SC_METHOD(thread_tmp_56_fu_439_p2);
    sensitive << ( tmp_reg_815 );

    SC_METHOD(thread_tmp_57_fu_444_p3);
    sensitive << ( tmp_56_fu_439_p2 );

    SC_METHOD(thread_tmp_58_fu_469_p2);
    sensitive << ( tmp_reg_815 );

    SC_METHOD(thread_tmp_59_fu_474_p3);
    sensitive << ( tmp_58_fu_469_p2 );

    SC_METHOD(thread_tmp_60_fu_483_p2);
    sensitive << ( tmp_reg_815 );

    SC_METHOD(thread_tmp_61_fu_488_p3);
    sensitive << ( tmp_60_fu_483_p2 );

    SC_METHOD(thread_tmp_62_fu_522_p2);
    sensitive << ( tmp_reg_815 );

    SC_METHOD(thread_tmp_63_fu_527_p3);
    sensitive << ( tmp_62_fu_522_p2 );

    SC_METHOD(thread_tmp_64_fu_536_p2);
    sensitive << ( tmp_reg_815 );

    SC_METHOD(thread_tmp_65_fu_541_p3);
    sensitive << ( tmp_64_fu_536_p2 );

    SC_METHOD(thread_tmp_66_fu_572_p2);
    sensitive << ( tmp_reg_815 );

    SC_METHOD(thread_tmp_67_fu_577_p3);
    sensitive << ( tmp_66_fu_572_p2 );

    SC_METHOD(thread_tmp_68_fu_586_p2);
    sensitive << ( tmp_reg_815 );

    SC_METHOD(thread_tmp_69_fu_591_p3);
    sensitive << ( tmp_68_fu_586_p2 );

    SC_METHOD(thread_tmp_70_fu_625_p2);
    sensitive << ( tmp_reg_815 );

    SC_METHOD(thread_tmp_71_fu_630_p3);
    sensitive << ( tmp_70_fu_625_p2 );

    SC_METHOD(thread_tmp_72_fu_639_p2);
    sensitive << ( tmp_reg_815 );

    SC_METHOD(thread_tmp_73_fu_644_p3);
    sensitive << ( tmp_72_fu_639_p2 );

    SC_METHOD(thread_tmp_74_fu_678_p2);
    sensitive << ( tmp_reg_815 );

    SC_METHOD(thread_tmp_75_fu_683_p3);
    sensitive << ( tmp_74_fu_678_p2 );

    SC_METHOD(thread_tmp_76_fu_692_p2);
    sensitive << ( tmp_reg_815 );

    SC_METHOD(thread_tmp_77_fu_697_p3);
    sensitive << ( tmp_76_fu_692_p2 );

    SC_METHOD(thread_tmp_78_fu_726_p2);
    sensitive << ( tmp_reg_815 );

    SC_METHOD(thread_tmp_79_fu_731_p3);
    sensitive << ( tmp_78_fu_726_p2 );

    SC_METHOD(thread_tmp_80_fu_740_p2);
    sensitive << ( tmp_reg_815 );

    SC_METHOD(thread_tmp_81_fu_745_p3);
    sensitive << ( tmp_80_fu_740_p2 );

    SC_METHOD(thread_tmp_cast4_fu_653_p1);
    sensitive << ( tmp_s_reg_878 );

    SC_METHOD(thread_tmp_fu_397_p3);
    sensitive << ( ap_phi_mux_channels_phi_fu_366_p4 );

    SC_METHOD(thread_tmp_s_107_fu_459_p1);
    sensitive << ( cnt_reg_373 );

    SC_METHOD(thread_tmp_s_fu_550_p2);
    sensitive << ( cnt_reg_373 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( exitcond2_fu_385_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage7_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp0_stage3_subdone );
    sensitive << ( ap_block_pp0_stage4_subdone );
    sensitive << ( ap_block_pp0_stage5_subdone );
    sensitive << ( ap_block_pp0_stage6_subdone );

    ap_CS_fsm = "0000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Flatten_layer_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, pool2_output_address0, "(port)pool2_output_address0");
    sc_trace(mVcdFile, pool2_output_ce0, "(port)pool2_output_ce0");
    sc_trace(mVcdFile, pool2_output_q0, "(port)pool2_output_q0");
    sc_trace(mVcdFile, pool2_output_address1, "(port)pool2_output_address1");
    sc_trace(mVcdFile, pool2_output_ce1, "(port)pool2_output_ce1");
    sc_trace(mVcdFile, pool2_output_q1, "(port)pool2_output_q1");
    sc_trace(mVcdFile, flatten_output_address0, "(port)flatten_output_address0");
    sc_trace(mVcdFile, flatten_output_ce0, "(port)flatten_output_ce0");
    sc_trace(mVcdFile, flatten_output_we0, "(port)flatten_output_we0");
    sc_trace(mVcdFile, flatten_output_d0, "(port)flatten_output_d0");
    sc_trace(mVcdFile, flatten_output_address1, "(port)flatten_output_address1");
    sc_trace(mVcdFile, flatten_output_ce1, "(port)flatten_output_ce1");
    sc_trace(mVcdFile, flatten_output_we1, "(port)flatten_output_we1");
    sc_trace(mVcdFile, flatten_output_d1, "(port)flatten_output_d1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, channels_reg_362, "channels_reg_362");
    sc_trace(mVcdFile, cnt_reg_373, "cnt_reg_373");
    sc_trace(mVcdFile, exitcond2_fu_385_p2, "exitcond2_fu_385_p2");
    sc_trace(mVcdFile, exitcond2_reg_806, "exitcond2_reg_806");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter1, "ap_block_state10_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, channels_7_fu_391_p2, "channels_7_fu_391_p2");
    sc_trace(mVcdFile, channels_7_reg_810, "channels_7_reg_810");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_fu_397_p3, "tmp_fu_397_p3");
    sc_trace(mVcdFile, tmp_reg_815, "tmp_reg_815");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, tmp_38_0_s_fu_453_p2, "tmp_38_0_s_fu_453_p2");
    sc_trace(mVcdFile, tmp_38_0_s_reg_853, "tmp_38_0_s_reg_853");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage2_iter0, "ap_block_state4_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage3_iter0, "ap_block_state5_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage3_11001, "ap_block_pp0_stage3_11001");
    sc_trace(mVcdFile, tmp_s_fu_550_p2, "tmp_s_fu_550_p2");
    sc_trace(mVcdFile, tmp_s_reg_878, "tmp_s_reg_878");
    sc_trace(mVcdFile, tmp_38_1_s_fu_556_p2, "tmp_38_1_s_fu_556_p2");
    sc_trace(mVcdFile, tmp_38_1_s_reg_883, "tmp_38_1_s_reg_883");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage4, "ap_CS_fsm_pp0_stage4");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage4_iter0, "ap_block_state6_pp0_stage4_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage4_11001, "ap_block_pp0_stage4_11001");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage5, "ap_CS_fsm_pp0_stage5");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage5_iter0, "ap_block_state7_pp0_stage5_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage5_11001, "ap_block_pp0_stage5_11001");
    sc_trace(mVcdFile, tmp_cast4_fu_653_p1, "tmp_cast4_fu_653_p1");
    sc_trace(mVcdFile, tmp_cast4_reg_908, "tmp_cast4_reg_908");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage6, "ap_CS_fsm_pp0_stage6");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage6_iter0, "ap_block_state8_pp0_stage6_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage6_11001, "ap_block_pp0_stage6_11001");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage7, "ap_CS_fsm_pp0_stage7");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage7_iter0, "ap_block_state9_pp0_stage7_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage7_11001, "ap_block_pp0_stage7_11001");
    sc_trace(mVcdFile, tmp_38_3_s_fu_760_p2, "tmp_38_3_s_fu_760_p2");
    sc_trace(mVcdFile, tmp_38_3_s_reg_934, "tmp_38_3_s_reg_934");
    sc_trace(mVcdFile, tmp_38_3_2_fu_776_p2, "tmp_38_3_2_fu_776_p2");
    sc_trace(mVcdFile, tmp_38_3_2_reg_939, "tmp_38_3_2_reg_939");
    sc_trace(mVcdFile, cnt_1_fu_782_p2, "cnt_1_fu_782_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_pp0_stage7_subdone, "ap_block_pp0_stage7_subdone");
    sc_trace(mVcdFile, ap_phi_mux_channels_phi_fu_366_p4, "ap_phi_mux_channels_phi_fu_366_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_51_fu_405_p1, "tmp_51_fu_405_p1");
    sc_trace(mVcdFile, tmp_53_fu_416_p3, "tmp_53_fu_416_p3");
    sc_trace(mVcdFile, tmp_55_fu_430_p3, "tmp_55_fu_430_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, tmp_57_fu_444_p3, "tmp_57_fu_444_p3");
    sc_trace(mVcdFile, tmp_s_107_fu_459_p1, "tmp_s_107_fu_459_p1");
    sc_trace(mVcdFile, tmp_39_0_1_fu_464_p1, "tmp_39_0_1_fu_464_p1");
    sc_trace(mVcdFile, tmp_59_fu_474_p3, "tmp_59_fu_474_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, tmp_61_fu_488_p3, "tmp_61_fu_488_p3");
    sc_trace(mVcdFile, tmp_39_0_2_fu_512_p1, "tmp_39_0_2_fu_512_p1");
    sc_trace(mVcdFile, tmp_39_0_3_fu_517_p1, "tmp_39_0_3_fu_517_p1");
    sc_trace(mVcdFile, tmp_63_fu_527_p3, "tmp_63_fu_527_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage3, "ap_block_pp0_stage3");
    sc_trace(mVcdFile, tmp_65_fu_541_p3, "tmp_65_fu_541_p3");
    sc_trace(mVcdFile, tmp_39_1_fu_562_p1, "tmp_39_1_fu_562_p1");
    sc_trace(mVcdFile, tmp_39_1_1_fu_567_p1, "tmp_39_1_1_fu_567_p1");
    sc_trace(mVcdFile, tmp_67_fu_577_p3, "tmp_67_fu_577_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage4, "ap_block_pp0_stage4");
    sc_trace(mVcdFile, tmp_69_fu_591_p3, "tmp_69_fu_591_p3");
    sc_trace(mVcdFile, tmp_39_1_2_fu_615_p1, "tmp_39_1_2_fu_615_p1");
    sc_trace(mVcdFile, tmp_39_1_3_fu_620_p1, "tmp_39_1_3_fu_620_p1");
    sc_trace(mVcdFile, tmp_71_fu_630_p3, "tmp_71_fu_630_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage5, "ap_block_pp0_stage5");
    sc_trace(mVcdFile, tmp_73_fu_644_p3, "tmp_73_fu_644_p3");
    sc_trace(mVcdFile, tmp_39_2_fu_668_p1, "tmp_39_2_fu_668_p1");
    sc_trace(mVcdFile, tmp_39_2_1_fu_673_p1, "tmp_39_2_1_fu_673_p1");
    sc_trace(mVcdFile, tmp_75_fu_683_p3, "tmp_75_fu_683_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage6, "ap_block_pp0_stage6");
    sc_trace(mVcdFile, tmp_77_fu_697_p3, "tmp_77_fu_697_p3");
    sc_trace(mVcdFile, tmp_39_2_2_fu_716_p1, "tmp_39_2_2_fu_716_p1");
    sc_trace(mVcdFile, tmp_39_2_3_fu_721_p1, "tmp_39_2_3_fu_721_p1");
    sc_trace(mVcdFile, tmp_79_fu_731_p3, "tmp_79_fu_731_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage7, "ap_block_pp0_stage7");
    sc_trace(mVcdFile, tmp_81_fu_745_p3, "tmp_81_fu_745_p3");
    sc_trace(mVcdFile, tmp_39_3_fu_766_p1, "tmp_39_3_fu_766_p1");
    sc_trace(mVcdFile, tmp_39_3_1_fu_771_p1, "tmp_39_3_1_fu_771_p1");
    sc_trace(mVcdFile, tmp_39_3_2_fu_797_p1, "tmp_39_3_2_fu_797_p1");
    sc_trace(mVcdFile, tmp_39_3_3_fu_802_p1, "tmp_39_3_3_fu_802_p1");
    sc_trace(mVcdFile, tmp_52_fu_410_p2, "tmp_52_fu_410_p2");
    sc_trace(mVcdFile, tmp_54_fu_425_p2, "tmp_54_fu_425_p2");
    sc_trace(mVcdFile, tmp_56_fu_439_p2, "tmp_56_fu_439_p2");
    sc_trace(mVcdFile, tmp_58_fu_469_p2, "tmp_58_fu_469_p2");
    sc_trace(mVcdFile, tmp_60_fu_483_p2, "tmp_60_fu_483_p2");
    sc_trace(mVcdFile, tmp_38_0_cast3_fu_497_p1, "tmp_38_0_cast3_fu_497_p1");
    sc_trace(mVcdFile, tmp_38_0_1_fu_500_p2, "tmp_38_0_1_fu_500_p2");
    sc_trace(mVcdFile, tmp_38_0_2_fu_506_p2, "tmp_38_0_2_fu_506_p2");
    sc_trace(mVcdFile, tmp_62_fu_522_p2, "tmp_62_fu_522_p2");
    sc_trace(mVcdFile, tmp_64_fu_536_p2, "tmp_64_fu_536_p2");
    sc_trace(mVcdFile, tmp_66_fu_572_p2, "tmp_66_fu_572_p2");
    sc_trace(mVcdFile, tmp_68_fu_586_p2, "tmp_68_fu_586_p2");
    sc_trace(mVcdFile, tmp_38_1_cast2_fu_600_p1, "tmp_38_1_cast2_fu_600_p1");
    sc_trace(mVcdFile, tmp_38_1_1_fu_603_p2, "tmp_38_1_1_fu_603_p2");
    sc_trace(mVcdFile, tmp_38_1_2_fu_609_p2, "tmp_38_1_2_fu_609_p2");
    sc_trace(mVcdFile, tmp_70_fu_625_p2, "tmp_70_fu_625_p2");
    sc_trace(mVcdFile, tmp_72_fu_639_p2, "tmp_72_fu_639_p2");
    sc_trace(mVcdFile, tmp_1_fu_656_p2, "tmp_1_fu_656_p2");
    sc_trace(mVcdFile, tmp_38_2_fu_662_p2, "tmp_38_2_fu_662_p2");
    sc_trace(mVcdFile, tmp_74_fu_678_p2, "tmp_74_fu_678_p2");
    sc_trace(mVcdFile, tmp_76_fu_692_p2, "tmp_76_fu_692_p2");
    sc_trace(mVcdFile, tmp_38_2_1_fu_706_p2, "tmp_38_2_1_fu_706_p2");
    sc_trace(mVcdFile, tmp_38_2_2_fu_711_p2, "tmp_38_2_2_fu_711_p2");
    sc_trace(mVcdFile, tmp_78_fu_726_p2, "tmp_78_fu_726_p2");
    sc_trace(mVcdFile, tmp_80_fu_740_p2, "tmp_80_fu_740_p2");
    sc_trace(mVcdFile, tmp_2_fu_754_p2, "tmp_2_fu_754_p2");
    sc_trace(mVcdFile, tmp_38_3_cast1_fu_788_p1, "tmp_38_3_cast1_fu_788_p1");
    sc_trace(mVcdFile, tmp_38_3_1_fu_791_p2, "tmp_38_3_1_fu_791_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage4_subdone, "ap_block_pp0_stage4_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage5_subdone, "ap_block_pp0_stage5_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage6_subdone, "ap_block_pp0_stage6_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

Flatten_layer::~Flatten_layer() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void Flatten_layer::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage7_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond2_reg_806.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        channels_reg_362 = channels_7_reg_810.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        channels_reg_362 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond2_reg_806.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        cnt_reg_373 = cnt_1_fu_782_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        cnt_reg_373 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        channels_7_reg_810 = channels_7_fu_391_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond2_reg_806 = exitcond2_fu_385_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond2_reg_806.read(), ap_const_lv1_0))) {
        tmp_38_0_s_reg_853 = tmp_38_0_s_fu_453_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond2_reg_806.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        tmp_38_1_s_reg_883 = tmp_38_1_s_fu_556_p2.read();
        tmp_s_reg_878 = tmp_s_fu_550_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond2_reg_806.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0))) {
        tmp_38_3_2_reg_939 = tmp_38_3_2_fu_776_p2.read();
        tmp_38_3_s_reg_934 = tmp_38_3_s_fu_760_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond2_reg_806.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0))) {
        tmp_cast4_reg_908 = tmp_cast4_fu_653_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond2_fu_385_p2.read(), ap_const_lv1_0))) {
        tmp_reg_815 = tmp_fu_397_p3.read();
    }
}

void Flatten_layer::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void Flatten_layer::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void Flatten_layer::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[3];
}

void Flatten_layer::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[4];
}

void Flatten_layer::thread_ap_CS_fsm_pp0_stage4() {
    ap_CS_fsm_pp0_stage4 = ap_CS_fsm.read()[5];
}

void Flatten_layer::thread_ap_CS_fsm_pp0_stage5() {
    ap_CS_fsm_pp0_stage5 = ap_CS_fsm.read()[6];
}

void Flatten_layer::thread_ap_CS_fsm_pp0_stage6() {
    ap_CS_fsm_pp0_stage6 = ap_CS_fsm.read()[7];
}

void Flatten_layer::thread_ap_CS_fsm_pp0_stage7() {
    ap_CS_fsm_pp0_stage7 = ap_CS_fsm.read()[8];
}

void Flatten_layer::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Flatten_layer::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[9];
}

void Flatten_layer::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_block_pp0_stage3() {
    ap_block_pp0_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_block_pp0_stage3_11001() {
    ap_block_pp0_stage3_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_block_pp0_stage4() {
    ap_block_pp0_stage4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_block_pp0_stage4_11001() {
    ap_block_pp0_stage4_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_block_pp0_stage4_subdone() {
    ap_block_pp0_stage4_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_block_pp0_stage5() {
    ap_block_pp0_stage5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_block_pp0_stage5_11001() {
    ap_block_pp0_stage5_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_block_pp0_stage5_subdone() {
    ap_block_pp0_stage5_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_block_pp0_stage6() {
    ap_block_pp0_stage6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_block_pp0_stage6_11001() {
    ap_block_pp0_stage6_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_block_pp0_stage6_subdone() {
    ap_block_pp0_stage6_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_block_pp0_stage7() {
    ap_block_pp0_stage7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_block_pp0_stage7_11001() {
    ap_block_pp0_stage7_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_block_pp0_stage7_subdone() {
    ap_block_pp0_stage7_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_block_state10_pp0_stage0_iter1() {
    ap_block_state10_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_block_state4_pp0_stage2_iter0() {
    ap_block_state4_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_block_state5_pp0_stage3_iter0() {
    ap_block_state5_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_block_state6_pp0_stage4_iter0() {
    ap_block_state6_pp0_stage4_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_block_state7_pp0_stage5_iter0() {
    ap_block_state7_pp0_stage5_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_block_state8_pp0_stage6_iter0() {
    ap_block_state8_pp0_stage6_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_block_state9_pp0_stage7_iter0() {
    ap_block_state9_pp0_stage7_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Flatten_layer::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond2_fu_385_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void Flatten_layer::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Flatten_layer::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Flatten_layer::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Flatten_layer::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Flatten_layer::thread_ap_phi_mux_channels_phi_fu_366_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond2_reg_806.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_channels_phi_fu_366_p4 = channels_7_reg_810.read();
    } else {
        ap_phi_mux_channels_phi_fu_366_p4 = channels_reg_362.read();
    }
}

void Flatten_layer::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Flatten_layer::thread_channels_7_fu_391_p2() {
    channels_7_fu_391_p2 = (!ap_phi_mux_channels_phi_fu_366_p4.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(ap_phi_mux_channels_phi_fu_366_p4.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void Flatten_layer::thread_cnt_1_fu_782_p2() {
    cnt_1_fu_782_p2 = (!cnt_reg_373.read().is_01() || !ap_const_lv7_10.is_01())? sc_lv<7>(): (sc_biguint<7>(cnt_reg_373.read()) + sc_biguint<7>(ap_const_lv7_10));
}

void Flatten_layer::thread_exitcond2_fu_385_p2() {
    exitcond2_fu_385_p2 = (!ap_phi_mux_channels_phi_fu_366_p4.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_channels_phi_fu_366_p4.read() == ap_const_lv3_5);
}

void Flatten_layer::thread_flatten_output_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        flatten_output_address0 =  (sc_lv<7>) (tmp_39_3_2_fu_797_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0))) {
        flatten_output_address0 =  (sc_lv<7>) (tmp_39_3_fu_766_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0))) {
        flatten_output_address0 =  (sc_lv<7>) (tmp_39_2_2_fu_716_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0))) {
        flatten_output_address0 =  (sc_lv<7>) (tmp_39_2_fu_668_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
        flatten_output_address0 =  (sc_lv<7>) (tmp_39_1_2_fu_615_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        flatten_output_address0 =  (sc_lv<7>) (tmp_39_1_fu_562_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        flatten_output_address0 =  (sc_lv<7>) (tmp_39_0_2_fu_512_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        flatten_output_address0 =  (sc_lv<7>) (tmp_s_107_fu_459_p1.read());
    } else {
        flatten_output_address0 = "XXXXXXX";
    }
}

void Flatten_layer::thread_flatten_output_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        flatten_output_address1 =  (sc_lv<7>) (tmp_39_3_3_fu_802_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0))) {
        flatten_output_address1 =  (sc_lv<7>) (tmp_39_3_1_fu_771_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0))) {
        flatten_output_address1 =  (sc_lv<7>) (tmp_39_2_3_fu_721_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0))) {
        flatten_output_address1 =  (sc_lv<7>) (tmp_39_2_1_fu_673_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
        flatten_output_address1 =  (sc_lv<7>) (tmp_39_1_3_fu_620_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        flatten_output_address1 =  (sc_lv<7>) (tmp_39_1_1_fu_567_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        flatten_output_address1 =  (sc_lv<7>) (tmp_39_0_3_fu_517_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        flatten_output_address1 =  (sc_lv<7>) (tmp_39_0_1_fu_464_p1.read());
    } else {
        flatten_output_address1 = "XXXXXXX";
    }
}

void Flatten_layer::thread_flatten_output_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)))) {
        flatten_output_ce0 = ap_const_logic_1;
    } else {
        flatten_output_ce0 = ap_const_logic_0;
    }
}

void Flatten_layer::thread_flatten_output_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)))) {
        flatten_output_ce1 = ap_const_logic_1;
    } else {
        flatten_output_ce1 = ap_const_logic_0;
    }
}

void Flatten_layer::thread_flatten_output_d0() {
    flatten_output_d0 = pool2_output_q0.read();
}

void Flatten_layer::thread_flatten_output_d1() {
    flatten_output_d1 = pool2_output_q1.read();
}

void Flatten_layer::thread_flatten_output_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond2_reg_806.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond2_reg_806.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond2_reg_806.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond2_reg_806.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond2_reg_806.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond2_reg_806.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond2_reg_806.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond2_reg_806.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)))) {
        flatten_output_we0 = ap_const_logic_1;
    } else {
        flatten_output_we0 = ap_const_logic_0;
    }
}

void Flatten_layer::thread_flatten_output_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond2_reg_806.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond2_reg_806.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond2_reg_806.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond2_reg_806.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond2_reg_806.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond2_reg_806.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond2_reg_806.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond2_reg_806.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)))) {
        flatten_output_we1 = ap_const_logic_1;
    } else {
        flatten_output_we1 = ap_const_logic_0;
    }
}

void Flatten_layer::thread_pool2_output_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0))) {
            pool2_output_address0 =  (sc_lv<7>) (tmp_79_fu_731_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0))) {
            pool2_output_address0 =  (sc_lv<7>) (tmp_75_fu_683_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0))) {
            pool2_output_address0 =  (sc_lv<7>) (tmp_71_fu_630_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
            pool2_output_address0 =  (sc_lv<7>) (tmp_67_fu_577_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            pool2_output_address0 =  (sc_lv<7>) (tmp_63_fu_527_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            pool2_output_address0 =  (sc_lv<7>) (tmp_59_fu_474_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            pool2_output_address0 =  (sc_lv<7>) (tmp_55_fu_430_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            pool2_output_address0 =  (sc_lv<7>) (tmp_51_fu_405_p1.read());
        } else {
            pool2_output_address0 = "XXXXXXX";
        }
    } else {
        pool2_output_address0 = "XXXXXXX";
    }
}

void Flatten_layer::thread_pool2_output_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0))) {
            pool2_output_address1 =  (sc_lv<7>) (tmp_81_fu_745_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0))) {
            pool2_output_address1 =  (sc_lv<7>) (tmp_77_fu_697_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0))) {
            pool2_output_address1 =  (sc_lv<7>) (tmp_73_fu_644_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
            pool2_output_address1 =  (sc_lv<7>) (tmp_69_fu_591_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            pool2_output_address1 =  (sc_lv<7>) (tmp_65_fu_541_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            pool2_output_address1 =  (sc_lv<7>) (tmp_61_fu_488_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            pool2_output_address1 =  (sc_lv<7>) (tmp_57_fu_444_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            pool2_output_address1 =  (sc_lv<7>) (tmp_53_fu_416_p3.read());
        } else {
            pool2_output_address1 = "XXXXXXX";
        }
    } else {
        pool2_output_address1 = "XXXXXXX";
    }
}

void Flatten_layer::thread_pool2_output_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)))) {
        pool2_output_ce0 = ap_const_logic_1;
    } else {
        pool2_output_ce0 = ap_const_logic_0;
    }
}

void Flatten_layer::thread_pool2_output_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)))) {
        pool2_output_ce1 = ap_const_logic_1;
    } else {
        pool2_output_ce1 = ap_const_logic_0;
    }
}

void Flatten_layer::thread_tmp_1_fu_656_p2() {
    tmp_1_fu_656_p2 = (!tmp_cast4_fu_653_p1.read().is_01() || !ap_const_lv8_4.is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_cast4_fu_653_p1.read()) + sc_biguint<8>(ap_const_lv8_4));
}

void Flatten_layer::thread_tmp_2_fu_754_p2() {
    tmp_2_fu_754_p2 = (cnt_reg_373.read() | ap_const_lv7_C);
}

void Flatten_layer::thread_tmp_38_0_1_fu_500_p2() {
    tmp_38_0_1_fu_500_p2 = (!tmp_38_0_cast3_fu_497_p1.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_38_0_cast3_fu_497_p1.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void Flatten_layer::thread_tmp_38_0_2_fu_506_p2() {
    tmp_38_0_2_fu_506_p2 = (cnt_reg_373.read() | ap_const_lv7_3);
}

void Flatten_layer::thread_tmp_38_0_cast3_fu_497_p1() {
    tmp_38_0_cast3_fu_497_p1 = esl_zext<8,7>(tmp_38_0_s_reg_853.read());
}

void Flatten_layer::thread_tmp_38_0_s_fu_453_p2() {
    tmp_38_0_s_fu_453_p2 = (cnt_reg_373.read() | ap_const_lv7_1);
}

void Flatten_layer::thread_tmp_38_1_1_fu_603_p2() {
    tmp_38_1_1_fu_603_p2 = (!tmp_38_1_cast2_fu_600_p1.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_38_1_cast2_fu_600_p1.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void Flatten_layer::thread_tmp_38_1_2_fu_609_p2() {
    tmp_38_1_2_fu_609_p2 = (cnt_reg_373.read() | ap_const_lv7_7);
}

void Flatten_layer::thread_tmp_38_1_cast2_fu_600_p1() {
    tmp_38_1_cast2_fu_600_p1 = esl_zext<8,7>(tmp_38_1_s_reg_883.read());
}

void Flatten_layer::thread_tmp_38_1_s_fu_556_p2() {
    tmp_38_1_s_fu_556_p2 = (cnt_reg_373.read() | ap_const_lv7_5);
}

void Flatten_layer::thread_tmp_38_2_1_fu_706_p2() {
    tmp_38_2_1_fu_706_p2 = (!tmp_cast4_reg_908.read().is_01() || !ap_const_lv8_6.is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_cast4_reg_908.read()) + sc_biguint<8>(ap_const_lv8_6));
}

void Flatten_layer::thread_tmp_38_2_2_fu_711_p2() {
    tmp_38_2_2_fu_711_p2 = (!tmp_cast4_reg_908.read().is_01() || !ap_const_lv8_7.is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_cast4_reg_908.read()) + sc_biguint<8>(ap_const_lv8_7));
}

void Flatten_layer::thread_tmp_38_2_fu_662_p2() {
    tmp_38_2_fu_662_p2 = (!tmp_cast4_fu_653_p1.read().is_01() || !ap_const_lv8_5.is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_cast4_fu_653_p1.read()) + sc_biguint<8>(ap_const_lv8_5));
}

void Flatten_layer::thread_tmp_38_3_1_fu_791_p2() {
    tmp_38_3_1_fu_791_p2 = (!tmp_38_3_cast1_fu_788_p1.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_38_3_cast1_fu_788_p1.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void Flatten_layer::thread_tmp_38_3_2_fu_776_p2() {
    tmp_38_3_2_fu_776_p2 = (cnt_reg_373.read() | ap_const_lv7_F);
}

void Flatten_layer::thread_tmp_38_3_cast1_fu_788_p1() {
    tmp_38_3_cast1_fu_788_p1 = esl_zext<8,7>(tmp_38_3_s_reg_934.read());
}

void Flatten_layer::thread_tmp_38_3_s_fu_760_p2() {
    tmp_38_3_s_fu_760_p2 = (cnt_reg_373.read() | ap_const_lv7_D);
}

void Flatten_layer::thread_tmp_39_0_1_fu_464_p1() {
    tmp_39_0_1_fu_464_p1 = esl_zext<64,7>(tmp_38_0_s_fu_453_p2.read());
}

void Flatten_layer::thread_tmp_39_0_2_fu_512_p1() {
    tmp_39_0_2_fu_512_p1 = esl_zext<64,8>(tmp_38_0_1_fu_500_p2.read());
}

void Flatten_layer::thread_tmp_39_0_3_fu_517_p1() {
    tmp_39_0_3_fu_517_p1 = esl_zext<64,7>(tmp_38_0_2_fu_506_p2.read());
}

void Flatten_layer::thread_tmp_39_1_1_fu_567_p1() {
    tmp_39_1_1_fu_567_p1 = esl_zext<64,7>(tmp_38_1_s_fu_556_p2.read());
}

void Flatten_layer::thread_tmp_39_1_2_fu_615_p1() {
    tmp_39_1_2_fu_615_p1 = esl_zext<64,8>(tmp_38_1_1_fu_603_p2.read());
}

void Flatten_layer::thread_tmp_39_1_3_fu_620_p1() {
    tmp_39_1_3_fu_620_p1 = esl_zext<64,7>(tmp_38_1_2_fu_609_p2.read());
}

void Flatten_layer::thread_tmp_39_1_fu_562_p1() {
    tmp_39_1_fu_562_p1 = esl_zext<64,7>(tmp_s_fu_550_p2.read());
}

void Flatten_layer::thread_tmp_39_2_1_fu_673_p1() {
    tmp_39_2_1_fu_673_p1 = esl_zext<64,8>(tmp_38_2_fu_662_p2.read());
}

void Flatten_layer::thread_tmp_39_2_2_fu_716_p1() {
    tmp_39_2_2_fu_716_p1 = esl_zext<64,8>(tmp_38_2_1_fu_706_p2.read());
}

void Flatten_layer::thread_tmp_39_2_3_fu_721_p1() {
    tmp_39_2_3_fu_721_p1 = esl_zext<64,8>(tmp_38_2_2_fu_711_p2.read());
}

void Flatten_layer::thread_tmp_39_2_fu_668_p1() {
    tmp_39_2_fu_668_p1 = esl_zext<64,8>(tmp_1_fu_656_p2.read());
}

void Flatten_layer::thread_tmp_39_3_1_fu_771_p1() {
    tmp_39_3_1_fu_771_p1 = esl_zext<64,7>(tmp_38_3_s_fu_760_p2.read());
}

void Flatten_layer::thread_tmp_39_3_2_fu_797_p1() {
    tmp_39_3_2_fu_797_p1 = esl_zext<64,8>(tmp_38_3_1_fu_791_p2.read());
}

void Flatten_layer::thread_tmp_39_3_3_fu_802_p1() {
    tmp_39_3_3_fu_802_p1 = esl_zext<64,7>(tmp_38_3_2_reg_939.read());
}

void Flatten_layer::thread_tmp_39_3_fu_766_p1() {
    tmp_39_3_fu_766_p1 = esl_zext<64,7>(tmp_2_fu_754_p2.read());
}

void Flatten_layer::thread_tmp_51_fu_405_p1() {
    tmp_51_fu_405_p1 = esl_zext<64,7>(tmp_fu_397_p3.read());
}

void Flatten_layer::thread_tmp_52_fu_410_p2() {
    tmp_52_fu_410_p2 = (tmp_fu_397_p3.read() | ap_const_lv7_1);
}

void Flatten_layer::thread_tmp_53_fu_416_p3() {
    tmp_53_fu_416_p3 = esl_concat<57,7>(ap_const_lv57_0, tmp_52_fu_410_p2.read());
}

void Flatten_layer::thread_tmp_54_fu_425_p2() {
    tmp_54_fu_425_p2 = (tmp_reg_815.read() | ap_const_lv7_2);
}

void Flatten_layer::thread_tmp_55_fu_430_p3() {
    tmp_55_fu_430_p3 = esl_concat<57,7>(ap_const_lv57_0, tmp_54_fu_425_p2.read());
}

void Flatten_layer::thread_tmp_56_fu_439_p2() {
    tmp_56_fu_439_p2 = (tmp_reg_815.read() | ap_const_lv7_3);
}

void Flatten_layer::thread_tmp_57_fu_444_p3() {
    tmp_57_fu_444_p3 = esl_concat<57,7>(ap_const_lv57_0, tmp_56_fu_439_p2.read());
}

void Flatten_layer::thread_tmp_58_fu_469_p2() {
    tmp_58_fu_469_p2 = (tmp_reg_815.read() | ap_const_lv7_4);
}

void Flatten_layer::thread_tmp_59_fu_474_p3() {
    tmp_59_fu_474_p3 = esl_concat<57,7>(ap_const_lv57_0, tmp_58_fu_469_p2.read());
}

void Flatten_layer::thread_tmp_60_fu_483_p2() {
    tmp_60_fu_483_p2 = (tmp_reg_815.read() | ap_const_lv7_5);
}

void Flatten_layer::thread_tmp_61_fu_488_p3() {
    tmp_61_fu_488_p3 = esl_concat<57,7>(ap_const_lv57_0, tmp_60_fu_483_p2.read());
}

void Flatten_layer::thread_tmp_62_fu_522_p2() {
    tmp_62_fu_522_p2 = (tmp_reg_815.read() | ap_const_lv7_6);
}

void Flatten_layer::thread_tmp_63_fu_527_p3() {
    tmp_63_fu_527_p3 = esl_concat<57,7>(ap_const_lv57_0, tmp_62_fu_522_p2.read());
}

void Flatten_layer::thread_tmp_64_fu_536_p2() {
    tmp_64_fu_536_p2 = (tmp_reg_815.read() | ap_const_lv7_7);
}

void Flatten_layer::thread_tmp_65_fu_541_p3() {
    tmp_65_fu_541_p3 = esl_concat<57,7>(ap_const_lv57_0, tmp_64_fu_536_p2.read());
}

void Flatten_layer::thread_tmp_66_fu_572_p2() {
    tmp_66_fu_572_p2 = (tmp_reg_815.read() | ap_const_lv7_8);
}

void Flatten_layer::thread_tmp_67_fu_577_p3() {
    tmp_67_fu_577_p3 = esl_concat<57,7>(ap_const_lv57_0, tmp_66_fu_572_p2.read());
}

void Flatten_layer::thread_tmp_68_fu_586_p2() {
    tmp_68_fu_586_p2 = (tmp_reg_815.read() | ap_const_lv7_9);
}

void Flatten_layer::thread_tmp_69_fu_591_p3() {
    tmp_69_fu_591_p3 = esl_concat<57,7>(ap_const_lv57_0, tmp_68_fu_586_p2.read());
}

void Flatten_layer::thread_tmp_70_fu_625_p2() {
    tmp_70_fu_625_p2 = (tmp_reg_815.read() | ap_const_lv7_A);
}

void Flatten_layer::thread_tmp_71_fu_630_p3() {
    tmp_71_fu_630_p3 = esl_concat<57,7>(ap_const_lv57_0, tmp_70_fu_625_p2.read());
}

void Flatten_layer::thread_tmp_72_fu_639_p2() {
    tmp_72_fu_639_p2 = (tmp_reg_815.read() | ap_const_lv7_B);
}

void Flatten_layer::thread_tmp_73_fu_644_p3() {
    tmp_73_fu_644_p3 = esl_concat<57,7>(ap_const_lv57_0, tmp_72_fu_639_p2.read());
}

void Flatten_layer::thread_tmp_74_fu_678_p2() {
    tmp_74_fu_678_p2 = (tmp_reg_815.read() | ap_const_lv7_C);
}

void Flatten_layer::thread_tmp_75_fu_683_p3() {
    tmp_75_fu_683_p3 = esl_concat<57,7>(ap_const_lv57_0, tmp_74_fu_678_p2.read());
}

void Flatten_layer::thread_tmp_76_fu_692_p2() {
    tmp_76_fu_692_p2 = (tmp_reg_815.read() | ap_const_lv7_D);
}

void Flatten_layer::thread_tmp_77_fu_697_p3() {
    tmp_77_fu_697_p3 = esl_concat<57,7>(ap_const_lv57_0, tmp_76_fu_692_p2.read());
}

void Flatten_layer::thread_tmp_78_fu_726_p2() {
    tmp_78_fu_726_p2 = (tmp_reg_815.read() | ap_const_lv7_E);
}

void Flatten_layer::thread_tmp_79_fu_731_p3() {
    tmp_79_fu_731_p3 = esl_concat<57,7>(ap_const_lv57_0, tmp_78_fu_726_p2.read());
}

void Flatten_layer::thread_tmp_80_fu_740_p2() {
    tmp_80_fu_740_p2 = (tmp_reg_815.read() | ap_const_lv7_F);
}

void Flatten_layer::thread_tmp_81_fu_745_p3() {
    tmp_81_fu_745_p3 = esl_concat<57,7>(ap_const_lv57_0, tmp_80_fu_740_p2.read());
}

void Flatten_layer::thread_tmp_cast4_fu_653_p1() {
    tmp_cast4_fu_653_p1 = esl_zext<8,7>(tmp_s_reg_878.read());
}

void Flatten_layer::thread_tmp_fu_397_p3() {
    tmp_fu_397_p3 = esl_concat<3,4>(ap_phi_mux_channels_phi_fu_366_p4.read(), ap_const_lv4_0);
}

void Flatten_layer::thread_tmp_s_107_fu_459_p1() {
    tmp_s_107_fu_459_p1 = esl_zext<64,7>(cnt_reg_373.read());
}

void Flatten_layer::thread_tmp_s_fu_550_p2() {
    tmp_s_fu_550_p2 = (cnt_reg_373.read() | ap_const_lv7_4);
}

void Flatten_layer::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond2_fu_385_p2.read(), ap_const_lv1_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond2_fu_385_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 16 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 32 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            }
            break;
        case 64 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage5_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            }
            break;
        case 128 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage6_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            }
            break;
        case 256 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage7_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<10>) ("XXXXXXXXXX");
            break;
    }
}

}

