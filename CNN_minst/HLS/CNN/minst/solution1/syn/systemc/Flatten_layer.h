// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Flatten_layer_HH_
#define _Flatten_layer_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct Flatten_layer : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<7> > pool2_output_address0;
    sc_out< sc_logic > pool2_output_ce0;
    sc_in< sc_lv<32> > pool2_output_q0;
    sc_out< sc_lv<7> > pool2_output_address1;
    sc_out< sc_logic > pool2_output_ce1;
    sc_in< sc_lv<32> > pool2_output_q1;
    sc_out< sc_lv<7> > flatten_output_address0;
    sc_out< sc_logic > flatten_output_ce0;
    sc_out< sc_logic > flatten_output_we0;
    sc_out< sc_lv<32> > flatten_output_d0;
    sc_out< sc_lv<7> > flatten_output_address1;
    sc_out< sc_logic > flatten_output_ce1;
    sc_out< sc_logic > flatten_output_we1;
    sc_out< sc_lv<32> > flatten_output_d1;


    // Module declarations
    Flatten_layer(sc_module_name name);
    SC_HAS_PROCESS(Flatten_layer);

    ~Flatten_layer();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > channels_reg_362;
    sc_signal< sc_lv<7> > cnt_reg_373;
    sc_signal< sc_lv<1> > exitcond2_fu_385_p2;
    sc_signal< sc_lv<1> > exitcond2_reg_806;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<3> > channels_7_fu_391_p2;
    sc_signal< sc_lv<3> > channels_7_reg_810;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<7> > tmp_fu_397_p3;
    sc_signal< sc_lv<7> > tmp_reg_815;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<7> > tmp_38_0_s_fu_453_p2;
    sc_signal< sc_lv<7> > tmp_38_0_s_reg_853;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_state4_pp0_stage2_iter0;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_state5_pp0_stage3_iter0;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_lv<7> > tmp_s_fu_550_p2;
    sc_signal< sc_lv<7> > tmp_s_reg_878;
    sc_signal< sc_lv<7> > tmp_38_1_s_fu_556_p2;
    sc_signal< sc_lv<7> > tmp_38_1_s_reg_883;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage4;
    sc_signal< bool > ap_block_state6_pp0_stage4_iter0;
    sc_signal< bool > ap_block_pp0_stage4_11001;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage5;
    sc_signal< bool > ap_block_state7_pp0_stage5_iter0;
    sc_signal< bool > ap_block_pp0_stage5_11001;
    sc_signal< sc_lv<8> > tmp_cast4_fu_653_p1;
    sc_signal< sc_lv<8> > tmp_cast4_reg_908;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage6;
    sc_signal< bool > ap_block_state8_pp0_stage6_iter0;
    sc_signal< bool > ap_block_pp0_stage6_11001;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage7;
    sc_signal< bool > ap_block_state9_pp0_stage7_iter0;
    sc_signal< bool > ap_block_pp0_stage7_11001;
    sc_signal< sc_lv<7> > tmp_38_3_s_fu_760_p2;
    sc_signal< sc_lv<7> > tmp_38_3_s_reg_934;
    sc_signal< sc_lv<7> > tmp_38_3_2_fu_776_p2;
    sc_signal< sc_lv<7> > tmp_38_3_2_reg_939;
    sc_signal< sc_lv<7> > cnt_1_fu_782_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< bool > ap_block_pp0_stage7_subdone;
    sc_signal< sc_lv<3> > ap_phi_mux_channels_phi_fu_366_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > tmp_51_fu_405_p1;
    sc_signal< sc_lv<64> > tmp_53_fu_416_p3;
    sc_signal< sc_lv<64> > tmp_55_fu_430_p3;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > tmp_57_fu_444_p3;
    sc_signal< sc_lv<64> > tmp_s_107_fu_459_p1;
    sc_signal< sc_lv<64> > tmp_39_0_1_fu_464_p1;
    sc_signal< sc_lv<64> > tmp_59_fu_474_p3;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<64> > tmp_61_fu_488_p3;
    sc_signal< sc_lv<64> > tmp_39_0_2_fu_512_p1;
    sc_signal< sc_lv<64> > tmp_39_0_3_fu_517_p1;
    sc_signal< sc_lv<64> > tmp_63_fu_527_p3;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< sc_lv<64> > tmp_65_fu_541_p3;
    sc_signal< sc_lv<64> > tmp_39_1_fu_562_p1;
    sc_signal< sc_lv<64> > tmp_39_1_1_fu_567_p1;
    sc_signal< sc_lv<64> > tmp_67_fu_577_p3;
    sc_signal< bool > ap_block_pp0_stage4;
    sc_signal< sc_lv<64> > tmp_69_fu_591_p3;
    sc_signal< sc_lv<64> > tmp_39_1_2_fu_615_p1;
    sc_signal< sc_lv<64> > tmp_39_1_3_fu_620_p1;
    sc_signal< sc_lv<64> > tmp_71_fu_630_p3;
    sc_signal< bool > ap_block_pp0_stage5;
    sc_signal< sc_lv<64> > tmp_73_fu_644_p3;
    sc_signal< sc_lv<64> > tmp_39_2_fu_668_p1;
    sc_signal< sc_lv<64> > tmp_39_2_1_fu_673_p1;
    sc_signal< sc_lv<64> > tmp_75_fu_683_p3;
    sc_signal< bool > ap_block_pp0_stage6;
    sc_signal< sc_lv<64> > tmp_77_fu_697_p3;
    sc_signal< sc_lv<64> > tmp_39_2_2_fu_716_p1;
    sc_signal< sc_lv<64> > tmp_39_2_3_fu_721_p1;
    sc_signal< sc_lv<64> > tmp_79_fu_731_p3;
    sc_signal< bool > ap_block_pp0_stage7;
    sc_signal< sc_lv<64> > tmp_81_fu_745_p3;
    sc_signal< sc_lv<64> > tmp_39_3_fu_766_p1;
    sc_signal< sc_lv<64> > tmp_39_3_1_fu_771_p1;
    sc_signal< sc_lv<64> > tmp_39_3_2_fu_797_p1;
    sc_signal< sc_lv<64> > tmp_39_3_3_fu_802_p1;
    sc_signal< sc_lv<7> > tmp_52_fu_410_p2;
    sc_signal< sc_lv<7> > tmp_54_fu_425_p2;
    sc_signal< sc_lv<7> > tmp_56_fu_439_p2;
    sc_signal< sc_lv<7> > tmp_58_fu_469_p2;
    sc_signal< sc_lv<7> > tmp_60_fu_483_p2;
    sc_signal< sc_lv<8> > tmp_38_0_cast3_fu_497_p1;
    sc_signal< sc_lv<8> > tmp_38_0_1_fu_500_p2;
    sc_signal< sc_lv<7> > tmp_38_0_2_fu_506_p2;
    sc_signal< sc_lv<7> > tmp_62_fu_522_p2;
    sc_signal< sc_lv<7> > tmp_64_fu_536_p2;
    sc_signal< sc_lv<7> > tmp_66_fu_572_p2;
    sc_signal< sc_lv<7> > tmp_68_fu_586_p2;
    sc_signal< sc_lv<8> > tmp_38_1_cast2_fu_600_p1;
    sc_signal< sc_lv<8> > tmp_38_1_1_fu_603_p2;
    sc_signal< sc_lv<7> > tmp_38_1_2_fu_609_p2;
    sc_signal< sc_lv<7> > tmp_70_fu_625_p2;
    sc_signal< sc_lv<7> > tmp_72_fu_639_p2;
    sc_signal< sc_lv<8> > tmp_1_fu_656_p2;
    sc_signal< sc_lv<8> > tmp_38_2_fu_662_p2;
    sc_signal< sc_lv<7> > tmp_74_fu_678_p2;
    sc_signal< sc_lv<7> > tmp_76_fu_692_p2;
    sc_signal< sc_lv<8> > tmp_38_2_1_fu_706_p2;
    sc_signal< sc_lv<8> > tmp_38_2_2_fu_711_p2;
    sc_signal< sc_lv<7> > tmp_78_fu_726_p2;
    sc_signal< sc_lv<7> > tmp_80_fu_740_p2;
    sc_signal< sc_lv<7> > tmp_2_fu_754_p2;
    sc_signal< sc_lv<8> > tmp_38_3_cast1_fu_788_p1;
    sc_signal< sc_lv<8> > tmp_38_3_1_fu_791_p2;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< bool > ap_block_pp0_stage4_subdone;
    sc_signal< bool > ap_block_pp0_stage5_subdone;
    sc_signal< bool > ap_block_pp0_stage6_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_pp0_stage0;
    static const sc_lv<10> ap_ST_fsm_pp0_stage1;
    static const sc_lv<10> ap_ST_fsm_pp0_stage2;
    static const sc_lv<10> ap_ST_fsm_pp0_stage3;
    static const sc_lv<10> ap_ST_fsm_pp0_stage4;
    static const sc_lv<10> ap_ST_fsm_pp0_stage5;
    static const sc_lv<10> ap_ST_fsm_pp0_stage6;
    static const sc_lv<10> ap_ST_fsm_pp0_stage7;
    static const sc_lv<10> ap_ST_fsm_state11;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<57> ap_const_lv57_0;
    static const sc_lv<7> ap_const_lv7_2;
    static const sc_lv<7> ap_const_lv7_3;
    static const sc_lv<7> ap_const_lv7_4;
    static const sc_lv<7> ap_const_lv7_5;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<7> ap_const_lv7_6;
    static const sc_lv<7> ap_const_lv7_7;
    static const sc_lv<7> ap_const_lv7_8;
    static const sc_lv<7> ap_const_lv7_9;
    static const sc_lv<7> ap_const_lv7_A;
    static const sc_lv<7> ap_const_lv7_B;
    static const sc_lv<8> ap_const_lv8_4;
    static const sc_lv<8> ap_const_lv8_5;
    static const sc_lv<7> ap_const_lv7_C;
    static const sc_lv<7> ap_const_lv7_D;
    static const sc_lv<8> ap_const_lv8_6;
    static const sc_lv<8> ap_const_lv8_7;
    static const sc_lv<7> ap_const_lv7_E;
    static const sc_lv<7> ap_const_lv7_F;
    static const sc_lv<7> ap_const_lv7_10;
    static const sc_lv<32> ap_const_lv32_9;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_pp0_stage4();
    void thread_ap_CS_fsm_pp0_stage5();
    void thread_ap_CS_fsm_pp0_stage6();
    void thread_ap_CS_fsm_pp0_stage7();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state11();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_pp0_stage4();
    void thread_ap_block_pp0_stage4_11001();
    void thread_ap_block_pp0_stage4_subdone();
    void thread_ap_block_pp0_stage5();
    void thread_ap_block_pp0_stage5_11001();
    void thread_ap_block_pp0_stage5_subdone();
    void thread_ap_block_pp0_stage6();
    void thread_ap_block_pp0_stage6_11001();
    void thread_ap_block_pp0_stage6_subdone();
    void thread_ap_block_pp0_stage7();
    void thread_ap_block_pp0_stage7_11001();
    void thread_ap_block_pp0_stage7_subdone();
    void thread_ap_block_state10_pp0_stage0_iter1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage2_iter0();
    void thread_ap_block_state5_pp0_stage3_iter0();
    void thread_ap_block_state6_pp0_stage4_iter0();
    void thread_ap_block_state7_pp0_stage5_iter0();
    void thread_ap_block_state8_pp0_stage6_iter0();
    void thread_ap_block_state9_pp0_stage7_iter0();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_channels_phi_fu_366_p4();
    void thread_ap_ready();
    void thread_channels_7_fu_391_p2();
    void thread_cnt_1_fu_782_p2();
    void thread_exitcond2_fu_385_p2();
    void thread_flatten_output_address0();
    void thread_flatten_output_address1();
    void thread_flatten_output_ce0();
    void thread_flatten_output_ce1();
    void thread_flatten_output_d0();
    void thread_flatten_output_d1();
    void thread_flatten_output_we0();
    void thread_flatten_output_we1();
    void thread_pool2_output_address0();
    void thread_pool2_output_address1();
    void thread_pool2_output_ce0();
    void thread_pool2_output_ce1();
    void thread_tmp_1_fu_656_p2();
    void thread_tmp_2_fu_754_p2();
    void thread_tmp_38_0_1_fu_500_p2();
    void thread_tmp_38_0_2_fu_506_p2();
    void thread_tmp_38_0_cast3_fu_497_p1();
    void thread_tmp_38_0_s_fu_453_p2();
    void thread_tmp_38_1_1_fu_603_p2();
    void thread_tmp_38_1_2_fu_609_p2();
    void thread_tmp_38_1_cast2_fu_600_p1();
    void thread_tmp_38_1_s_fu_556_p2();
    void thread_tmp_38_2_1_fu_706_p2();
    void thread_tmp_38_2_2_fu_711_p2();
    void thread_tmp_38_2_fu_662_p2();
    void thread_tmp_38_3_1_fu_791_p2();
    void thread_tmp_38_3_2_fu_776_p2();
    void thread_tmp_38_3_cast1_fu_788_p1();
    void thread_tmp_38_3_s_fu_760_p2();
    void thread_tmp_39_0_1_fu_464_p1();
    void thread_tmp_39_0_2_fu_512_p1();
    void thread_tmp_39_0_3_fu_517_p1();
    void thread_tmp_39_1_1_fu_567_p1();
    void thread_tmp_39_1_2_fu_615_p1();
    void thread_tmp_39_1_3_fu_620_p1();
    void thread_tmp_39_1_fu_562_p1();
    void thread_tmp_39_2_1_fu_673_p1();
    void thread_tmp_39_2_2_fu_716_p1();
    void thread_tmp_39_2_3_fu_721_p1();
    void thread_tmp_39_2_fu_668_p1();
    void thread_tmp_39_3_1_fu_771_p1();
    void thread_tmp_39_3_2_fu_797_p1();
    void thread_tmp_39_3_3_fu_802_p1();
    void thread_tmp_39_3_fu_766_p1();
    void thread_tmp_51_fu_405_p1();
    void thread_tmp_52_fu_410_p2();
    void thread_tmp_53_fu_416_p3();
    void thread_tmp_54_fu_425_p2();
    void thread_tmp_55_fu_430_p3();
    void thread_tmp_56_fu_439_p2();
    void thread_tmp_57_fu_444_p3();
    void thread_tmp_58_fu_469_p2();
    void thread_tmp_59_fu_474_p3();
    void thread_tmp_60_fu_483_p2();
    void thread_tmp_61_fu_488_p3();
    void thread_tmp_62_fu_522_p2();
    void thread_tmp_63_fu_527_p3();
    void thread_tmp_64_fu_536_p2();
    void thread_tmp_65_fu_541_p3();
    void thread_tmp_66_fu_572_p2();
    void thread_tmp_67_fu_577_p3();
    void thread_tmp_68_fu_586_p2();
    void thread_tmp_69_fu_591_p3();
    void thread_tmp_70_fu_625_p2();
    void thread_tmp_71_fu_630_p3();
    void thread_tmp_72_fu_639_p2();
    void thread_tmp_73_fu_644_p3();
    void thread_tmp_74_fu_678_p2();
    void thread_tmp_75_fu_683_p3();
    void thread_tmp_76_fu_692_p2();
    void thread_tmp_77_fu_697_p3();
    void thread_tmp_78_fu_726_p2();
    void thread_tmp_79_fu_731_p3();
    void thread_tmp_80_fu_740_p2();
    void thread_tmp_81_fu_745_p3();
    void thread_tmp_cast4_fu_653_p1();
    void thread_tmp_fu_397_p3();
    void thread_tmp_s_107_fu_459_p1();
    void thread_tmp_s_fu_550_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
