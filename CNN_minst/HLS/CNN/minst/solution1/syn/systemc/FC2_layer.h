// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _FC2_layer_HH_
#define _FC2_layer_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "run_fadd_32ns_32nbkb.h"
#include "run_fmul_32ns_32ncud.h"
#include "run_fcmp_32ns_32ndEe.h"
#include "FC2_layer_fc2_wei.h"
#include "FC2_layer_fc2_bias.h"

namespace ap_rtl {

struct FC2_layer : public sc_module {
    // Port declarations 15
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<6> > fc1_output_address0;
    sc_out< sc_logic > fc1_output_ce0;
    sc_in< sc_lv<32> > fc1_output_q0;
    sc_out< sc_lv<4> > fc2_output_address0;
    sc_out< sc_logic > fc2_output_ce0;
    sc_out< sc_logic > fc2_output_we0;
    sc_out< sc_lv<32> > fc2_output_d0;
    sc_in< sc_lv<32> > fc2_output_q0;
    sc_out< sc_lv<32> > ap_return;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    FC2_layer(sc_module_name name);
    SC_HAS_PROCESS(FC2_layer);

    ~FC2_layer();

    sc_trace_file* mVcdFile;

    FC2_layer_fc2_wei* fc2_wei_U;
    FC2_layer_fc2_bias* fc2_bias_U;
    run_fadd_32ns_32nbkb<1,4,32,32,32>* run_fadd_32ns_32nbkb_U136;
    run_fmul_32ns_32ncud<1,1,32,32,32>* run_fmul_32ns_32ncud_U137;
    run_fcmp_32ns_32ndEe<1,1,32,32,1>* run_fcmp_32ns_32ndEe_U138;
    sc_signal< sc_lv<15> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<9> > fc2_wei_address0;
    sc_signal< sc_logic > fc2_wei_ce0;
    sc_signal< sc_lv<32> > fc2_wei_q0;
    sc_signal< sc_lv<4> > fc2_bias_address0;
    sc_signal< sc_logic > fc2_bias_ce0;
    sc_signal< sc_lv<32> > fc2_bias_q0;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<4> > i_12_fu_194_p2;
    sc_signal< sc_lv<4> > i_12_reg_305;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > tmp_fu_200_p1;
    sc_signal< sc_lv<64> > tmp_reg_310;
    sc_signal< sc_lv<1> > exitcond3_fu_188_p2;
    sc_signal< sc_lv<10> > tmp_cast_fu_205_p1;
    sc_signal< sc_lv<10> > tmp_cast_reg_315;
    sc_signal< sc_lv<4> > fc2_output_addr_reg_320;
    sc_signal< sc_lv<6> > k_1_fu_215_p2;
    sc_signal< sc_lv<6> > k_1_reg_328;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > exitcond2_fu_209_p2;
    sc_signal< sc_lv<32> > fc1_output_load_reg_348;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > fc2_wei_load_reg_353;
    sc_signal< sc_lv<32> > tmp_35_fu_173_p2;
    sc_signal< sc_lv<32> > tmp_35_reg_358;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > index_cast1_fu_266_p1;
    sc_signal< sc_lv<32> > index_cast1_reg_368;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<4> > i_1_fu_276_p2;
    sc_signal< sc_lv<4> > i_1_reg_376;
    sc_signal< sc_lv<1> > exitcond_fu_270_p2;
    sc_signal< sc_lv<32> > index_1_fu_287_p3;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<32> > maxn_1_fu_294_p3;
    sc_signal< sc_lv<4> > i_reg_109;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<6> > k_reg_120;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > predict_write_assign_reg_131;
    sc_signal< sc_lv<32> > maxn_reg_143;
    sc_signal< sc_lv<4> > index_reg_155;
    sc_signal< sc_lv<64> > tmp_102_cast_fu_261_p1;
    sc_signal< sc_lv<64> > tmp_34_fu_221_p1;
    sc_signal< sc_lv<64> > tmp_32_fu_282_p1;
    sc_signal< sc_lv<32> > grp_fu_166_p2;
    sc_signal< sc_lv<32> > grp_fu_166_p1;
    sc_signal< sc_lv<9> > tmp_82_fu_226_p3;
    sc_signal< sc_lv<7> > tmp_83_fu_238_p3;
    sc_signal< sc_lv<10> > p_shl1_cast_fu_246_p1;
    sc_signal< sc_lv<10> > p_shl_cast_fu_234_p1;
    sc_signal< sc_lv<10> > tmp_84_fu_250_p2;
    sc_signal< sc_lv<10> > tmp_85_fu_256_p2;
    sc_signal< sc_lv<1> > tmp_33_fu_177_p2;
    sc_signal< sc_lv<32> > ap_return_preg;
    sc_signal< sc_lv<15> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<15> ap_ST_fsm_state1;
    static const sc_lv<15> ap_ST_fsm_state2;
    static const sc_lv<15> ap_ST_fsm_state3;
    static const sc_lv<15> ap_ST_fsm_state4;
    static const sc_lv<15> ap_ST_fsm_state5;
    static const sc_lv<15> ap_ST_fsm_state6;
    static const sc_lv<15> ap_ST_fsm_state7;
    static const sc_lv<15> ap_ST_fsm_state8;
    static const sc_lv<15> ap_ST_fsm_state9;
    static const sc_lv<15> ap_ST_fsm_state10;
    static const sc_lv<15> ap_ST_fsm_state11;
    static const sc_lv<15> ap_ST_fsm_state12;
    static const sc_lv<15> ap_ST_fsm_state13;
    static const sc_lv<15> ap_ST_fsm_state14;
    static const sc_lv<15> ap_ST_fsm_state15;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<6> ap_const_lv6_32;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<5> ap_const_lv5_4;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_exitcond2_fu_209_p2();
    void thread_exitcond3_fu_188_p2();
    void thread_exitcond_fu_270_p2();
    void thread_fc1_output_address0();
    void thread_fc1_output_ce0();
    void thread_fc2_bias_address0();
    void thread_fc2_bias_ce0();
    void thread_fc2_output_address0();
    void thread_fc2_output_ce0();
    void thread_fc2_output_d0();
    void thread_fc2_output_we0();
    void thread_fc2_wei_address0();
    void thread_fc2_wei_ce0();
    void thread_grp_fu_166_p1();
    void thread_i_12_fu_194_p2();
    void thread_i_1_fu_276_p2();
    void thread_index_1_fu_287_p3();
    void thread_index_cast1_fu_266_p1();
    void thread_k_1_fu_215_p2();
    void thread_maxn_1_fu_294_p3();
    void thread_p_shl1_cast_fu_246_p1();
    void thread_p_shl_cast_fu_234_p1();
    void thread_tmp_102_cast_fu_261_p1();
    void thread_tmp_32_fu_282_p1();
    void thread_tmp_34_fu_221_p1();
    void thread_tmp_82_fu_226_p3();
    void thread_tmp_83_fu_238_p3();
    void thread_tmp_84_fu_250_p2();
    void thread_tmp_85_fu_256_p2();
    void thread_tmp_cast_fu_205_p1();
    void thread_tmp_fu_200_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
