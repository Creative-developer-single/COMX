-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Flatten_layer is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    pool2_output_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    pool2_output_ce0 : OUT STD_LOGIC;
    pool2_output_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    pool2_output_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    pool2_output_ce1 : OUT STD_LOGIC;
    pool2_output_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    flatten_output_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    flatten_output_ce0 : OUT STD_LOGIC;
    flatten_output_we0 : OUT STD_LOGIC;
    flatten_output_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    flatten_output_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    flatten_output_ce1 : OUT STD_LOGIC;
    flatten_output_we1 : OUT STD_LOGIC;
    flatten_output_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of Flatten_layer is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv57_0 : STD_LOGIC_VECTOR (56 downto 0) := "000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv7_4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_const_lv7_5 : STD_LOGIC_VECTOR (6 downto 0) := "0000101";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv7_6 : STD_LOGIC_VECTOR (6 downto 0) := "0000110";
    constant ap_const_lv7_7 : STD_LOGIC_VECTOR (6 downto 0) := "0000111";
    constant ap_const_lv7_8 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_const_lv7_9 : STD_LOGIC_VECTOR (6 downto 0) := "0001001";
    constant ap_const_lv7_A : STD_LOGIC_VECTOR (6 downto 0) := "0001010";
    constant ap_const_lv7_B : STD_LOGIC_VECTOR (6 downto 0) := "0001011";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv8_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000101";
    constant ap_const_lv7_C : STD_LOGIC_VECTOR (6 downto 0) := "0001100";
    constant ap_const_lv7_D : STD_LOGIC_VECTOR (6 downto 0) := "0001101";
    constant ap_const_lv8_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000110";
    constant ap_const_lv8_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000111";
    constant ap_const_lv7_E : STD_LOGIC_VECTOR (6 downto 0) := "0001110";
    constant ap_const_lv7_F : STD_LOGIC_VECTOR (6 downto 0) := "0001111";
    constant ap_const_lv7_10 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal channels_reg_362 : STD_LOGIC_VECTOR (2 downto 0);
    signal cnt_reg_373 : STD_LOGIC_VECTOR (6 downto 0);
    signal exitcond2_fu_385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond2_reg_806 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal channels_7_fu_391_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal channels_7_reg_810 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_fu_397_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_reg_815 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp_38_0_s_fu_453_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_38_0_s_reg_853 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal tmp_s_fu_550_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_s_reg_878 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_38_1_s_fu_556_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_38_1_s_reg_883 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state6_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state7_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal tmp_cast4_fu_653_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_cast4_reg_908 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state8_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state9_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal tmp_38_3_s_fu_760_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_38_3_s_reg_934 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_38_3_2_fu_776_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_38_3_2_reg_939 : STD_LOGIC_VECTOR (6 downto 0);
    signal cnt_1_fu_782_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_phi_mux_channels_phi_fu_366_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_51_fu_405_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_53_fu_416_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_55_fu_430_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal tmp_57_fu_444_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_107_fu_459_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_39_0_1_fu_464_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_59_fu_474_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal tmp_61_fu_488_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_39_0_2_fu_512_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_39_0_3_fu_517_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_63_fu_527_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal tmp_65_fu_541_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_39_1_fu_562_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_39_1_1_fu_567_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_67_fu_577_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal tmp_69_fu_591_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_39_1_2_fu_615_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_39_1_3_fu_620_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_71_fu_630_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal tmp_73_fu_644_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_39_2_fu_668_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_39_2_1_fu_673_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_75_fu_683_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal tmp_77_fu_697_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_39_2_2_fu_716_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_39_2_3_fu_721_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_79_fu_731_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal tmp_81_fu_745_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_39_3_fu_766_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_39_3_1_fu_771_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_39_3_2_fu_797_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_39_3_3_fu_802_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_52_fu_410_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_54_fu_425_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_56_fu_439_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_58_fu_469_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_60_fu_483_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_38_0_cast3_fu_497_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_38_0_1_fu_500_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_38_0_2_fu_506_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_62_fu_522_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_64_fu_536_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_66_fu_572_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_68_fu_586_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_38_1_cast2_fu_600_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_38_1_1_fu_603_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_38_1_2_fu_609_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_70_fu_625_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_72_fu_639_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1_fu_656_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_38_2_fu_662_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_74_fu_678_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_76_fu_692_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_38_2_1_fu_706_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_38_2_2_fu_711_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_78_fu_726_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_80_fu_740_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_2_fu_754_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_38_3_cast1_fu_788_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_38_3_1_fu_791_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    channels_reg_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond2_reg_806 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                channels_reg_362 <= channels_7_reg_810;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                channels_reg_362 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    cnt_reg_373_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond2_reg_806 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                cnt_reg_373 <= cnt_1_fu_782_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                cnt_reg_373 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                channels_7_reg_810 <= channels_7_fu_391_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond2_reg_806 <= exitcond2_fu_385_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond2_reg_806 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    tmp_38_0_s_reg_853(6 downto 1) <= tmp_38_0_s_fu_453_p2(6 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_reg_806 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                    tmp_38_1_s_reg_883(1) <= tmp_38_1_s_fu_556_p2(1);    tmp_38_1_s_reg_883(6 downto 3) <= tmp_38_1_s_fu_556_p2(6 downto 3);
                    tmp_s_reg_878(1 downto 0) <= tmp_s_fu_550_p2(1 downto 0);    tmp_s_reg_878(6 downto 3) <= tmp_s_fu_550_p2(6 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_reg_806 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then
                    tmp_38_3_2_reg_939(6 downto 4) <= tmp_38_3_2_fu_776_p2(6 downto 4);
                    tmp_38_3_s_reg_934(1) <= tmp_38_3_s_fu_760_p2(1);    tmp_38_3_s_reg_934(6 downto 4) <= tmp_38_3_s_fu_760_p2(6 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_reg_806 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                    tmp_cast4_reg_908(1 downto 0) <= tmp_cast4_fu_653_p1(1 downto 0);    tmp_cast4_reg_908(6 downto 3) <= tmp_cast4_fu_653_p1(6 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond2_fu_385_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    tmp_reg_815(6 downto 4) <= tmp_fu_397_p3(6 downto 4);
            end if;
        end if;
    end process;
    tmp_reg_815(3 downto 0) <= "0000";
    tmp_38_0_s_reg_853(0) <= '1';
    tmp_s_reg_878(2) <= '1';
    tmp_38_1_s_reg_883(0) <= '1';
    tmp_38_1_s_reg_883(2) <= '1';
    tmp_cast4_reg_908(2) <= '1';
    tmp_cast4_reg_908(7) <= '0';
    tmp_38_3_s_reg_934(0) <= '1';
    tmp_38_3_s_reg_934(3 downto 2) <= "11";
    tmp_38_3_2_reg_939(3 downto 0) <= "1111";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, exitcond2_fu_385_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((exitcond2_fu_385_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((exitcond2_fu_385_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(8);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond2_fu_385_p2)
    begin
        if ((exitcond2_fu_385_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_channels_phi_fu_366_p4_assign_proc : process(channels_reg_362, exitcond2_reg_806, ap_CS_fsm_pp0_stage0, channels_7_reg_810, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((exitcond2_reg_806 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_channels_phi_fu_366_p4 <= channels_7_reg_810;
        else 
            ap_phi_mux_channels_phi_fu_366_p4 <= channels_reg_362;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    channels_7_fu_391_p2 <= std_logic_vector(unsigned(ap_phi_mux_channels_phi_fu_366_p4) + unsigned(ap_const_lv3_1));
    cnt_1_fu_782_p2 <= std_logic_vector(unsigned(cnt_reg_373) + unsigned(ap_const_lv7_10));
    exitcond2_fu_385_p2 <= "1" when (ap_phi_mux_channels_phi_fu_366_p4 = ap_const_lv3_5) else "0";

    flatten_output_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, tmp_s_107_fu_459_p1, ap_block_pp0_stage2, tmp_39_0_2_fu_512_p1, ap_block_pp0_stage3, tmp_39_1_fu_562_p1, ap_block_pp0_stage4, tmp_39_1_2_fu_615_p1, ap_block_pp0_stage5, tmp_39_2_fu_668_p1, ap_block_pp0_stage6, tmp_39_2_2_fu_716_p1, ap_block_pp0_stage7, tmp_39_3_fu_766_p1, tmp_39_3_2_fu_797_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            flatten_output_address0 <= tmp_39_3_2_fu_797_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            flatten_output_address0 <= tmp_39_3_fu_766_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            flatten_output_address0 <= tmp_39_2_2_fu_716_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            flatten_output_address0 <= tmp_39_2_fu_668_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            flatten_output_address0 <= tmp_39_1_2_fu_615_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            flatten_output_address0 <= tmp_39_1_fu_562_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            flatten_output_address0 <= tmp_39_0_2_fu_512_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            flatten_output_address0 <= tmp_s_107_fu_459_p1(7 - 1 downto 0);
        else 
            flatten_output_address0 <= "XXXXXXX";
        end if; 
    end process;


    flatten_output_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, tmp_39_0_1_fu_464_p1, ap_block_pp0_stage2, tmp_39_0_3_fu_517_p1, ap_block_pp0_stage3, tmp_39_1_1_fu_567_p1, ap_block_pp0_stage4, tmp_39_1_3_fu_620_p1, ap_block_pp0_stage5, tmp_39_2_1_fu_673_p1, ap_block_pp0_stage6, tmp_39_2_3_fu_721_p1, ap_block_pp0_stage7, tmp_39_3_1_fu_771_p1, tmp_39_3_3_fu_802_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            flatten_output_address1 <= tmp_39_3_3_fu_802_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            flatten_output_address1 <= tmp_39_3_1_fu_771_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            flatten_output_address1 <= tmp_39_2_3_fu_721_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            flatten_output_address1 <= tmp_39_2_1_fu_673_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            flatten_output_address1 <= tmp_39_1_3_fu_620_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            flatten_output_address1 <= tmp_39_1_1_fu_567_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            flatten_output_address1 <= tmp_39_0_3_fu_517_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            flatten_output_address1 <= tmp_39_0_1_fu_464_p1(7 - 1 downto 0);
        else 
            flatten_output_address1 <= "XXXXXXX";
        end if; 
    end process;


    flatten_output_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            flatten_output_ce0 <= ap_const_logic_1;
        else 
            flatten_output_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flatten_output_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            flatten_output_ce1 <= ap_const_logic_1;
        else 
            flatten_output_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    flatten_output_d0 <= pool2_output_q0;
    flatten_output_d1 <= pool2_output_q1;

    flatten_output_we0_assign_proc : process(exitcond2_reg_806, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((exitcond2_reg_806 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((exitcond2_reg_806 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((exitcond2_reg_806 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((exitcond2_reg_806 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((exitcond2_reg_806 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((exitcond2_reg_806 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond2_reg_806 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond2_reg_806 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            flatten_output_we0 <= ap_const_logic_1;
        else 
            flatten_output_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flatten_output_we1_assign_proc : process(exitcond2_reg_806, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((exitcond2_reg_806 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((exitcond2_reg_806 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((exitcond2_reg_806 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((exitcond2_reg_806 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((exitcond2_reg_806 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((exitcond2_reg_806 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond2_reg_806 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond2_reg_806 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            flatten_output_we1 <= ap_const_logic_1;
        else 
            flatten_output_we1 <= ap_const_logic_0;
        end if; 
    end process;


    pool2_output_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage0, tmp_51_fu_405_p1, tmp_55_fu_430_p3, ap_block_pp0_stage1, tmp_59_fu_474_p3, ap_block_pp0_stage2, tmp_63_fu_527_p3, ap_block_pp0_stage3, tmp_67_fu_577_p3, ap_block_pp0_stage4, tmp_71_fu_630_p3, ap_block_pp0_stage5, tmp_75_fu_683_p3, ap_block_pp0_stage6, tmp_79_fu_731_p3, ap_block_pp0_stage7)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                pool2_output_address0 <= tmp_79_fu_731_p3(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                pool2_output_address0 <= tmp_75_fu_683_p3(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                pool2_output_address0 <= tmp_71_fu_630_p3(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                pool2_output_address0 <= tmp_67_fu_577_p3(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                pool2_output_address0 <= tmp_63_fu_527_p3(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                pool2_output_address0 <= tmp_59_fu_474_p3(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                pool2_output_address0 <= tmp_55_fu_430_p3(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                pool2_output_address0 <= tmp_51_fu_405_p1(7 - 1 downto 0);
            else 
                pool2_output_address0 <= "XXXXXXX";
            end if;
        else 
            pool2_output_address0 <= "XXXXXXX";
        end if; 
    end process;


    pool2_output_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage0, tmp_53_fu_416_p3, ap_block_pp0_stage1, tmp_57_fu_444_p3, ap_block_pp0_stage2, tmp_61_fu_488_p3, ap_block_pp0_stage3, tmp_65_fu_541_p3, ap_block_pp0_stage4, tmp_69_fu_591_p3, ap_block_pp0_stage5, tmp_73_fu_644_p3, ap_block_pp0_stage6, tmp_77_fu_697_p3, ap_block_pp0_stage7, tmp_81_fu_745_p3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                pool2_output_address1 <= tmp_81_fu_745_p3(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                pool2_output_address1 <= tmp_77_fu_697_p3(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                pool2_output_address1 <= tmp_73_fu_644_p3(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                pool2_output_address1 <= tmp_69_fu_591_p3(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                pool2_output_address1 <= tmp_65_fu_541_p3(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                pool2_output_address1 <= tmp_61_fu_488_p3(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                pool2_output_address1 <= tmp_57_fu_444_p3(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                pool2_output_address1 <= tmp_53_fu_416_p3(7 - 1 downto 0);
            else 
                pool2_output_address1 <= "XXXXXXX";
            end if;
        else 
            pool2_output_address1 <= "XXXXXXX";
        end if; 
    end process;


    pool2_output_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            pool2_output_ce0 <= ap_const_logic_1;
        else 
            pool2_output_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pool2_output_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            pool2_output_ce1 <= ap_const_logic_1;
        else 
            pool2_output_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_1_fu_656_p2 <= std_logic_vector(unsigned(tmp_cast4_fu_653_p1) + unsigned(ap_const_lv8_4));
    tmp_2_fu_754_p2 <= (cnt_reg_373 or ap_const_lv7_C);
    tmp_38_0_1_fu_500_p2 <= std_logic_vector(unsigned(tmp_38_0_cast3_fu_497_p1) + unsigned(ap_const_lv8_1));
    tmp_38_0_2_fu_506_p2 <= (cnt_reg_373 or ap_const_lv7_3);
    tmp_38_0_cast3_fu_497_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_0_s_reg_853),8));
    tmp_38_0_s_fu_453_p2 <= (cnt_reg_373 or ap_const_lv7_1);
    tmp_38_1_1_fu_603_p2 <= std_logic_vector(unsigned(tmp_38_1_cast2_fu_600_p1) + unsigned(ap_const_lv8_1));
    tmp_38_1_2_fu_609_p2 <= (cnt_reg_373 or ap_const_lv7_7);
    tmp_38_1_cast2_fu_600_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_1_s_reg_883),8));
    tmp_38_1_s_fu_556_p2 <= (cnt_reg_373 or ap_const_lv7_5);
    tmp_38_2_1_fu_706_p2 <= std_logic_vector(unsigned(tmp_cast4_reg_908) + unsigned(ap_const_lv8_6));
    tmp_38_2_2_fu_711_p2 <= std_logic_vector(unsigned(tmp_cast4_reg_908) + unsigned(ap_const_lv8_7));
    tmp_38_2_fu_662_p2 <= std_logic_vector(unsigned(tmp_cast4_fu_653_p1) + unsigned(ap_const_lv8_5));
    tmp_38_3_1_fu_791_p2 <= std_logic_vector(unsigned(tmp_38_3_cast1_fu_788_p1) + unsigned(ap_const_lv8_1));
    tmp_38_3_2_fu_776_p2 <= (cnt_reg_373 or ap_const_lv7_F);
    tmp_38_3_cast1_fu_788_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_3_s_reg_934),8));
    tmp_38_3_s_fu_760_p2 <= (cnt_reg_373 or ap_const_lv7_D);
    tmp_39_0_1_fu_464_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_0_s_fu_453_p2),64));
    tmp_39_0_2_fu_512_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_0_1_fu_500_p2),64));
    tmp_39_0_3_fu_517_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_0_2_fu_506_p2),64));
    tmp_39_1_1_fu_567_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_1_s_fu_556_p2),64));
    tmp_39_1_2_fu_615_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_1_1_fu_603_p2),64));
    tmp_39_1_3_fu_620_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_1_2_fu_609_p2),64));
    tmp_39_1_fu_562_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_550_p2),64));
    tmp_39_2_1_fu_673_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_2_fu_662_p2),64));
    tmp_39_2_2_fu_716_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_2_1_fu_706_p2),64));
    tmp_39_2_3_fu_721_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_2_2_fu_711_p2),64));
    tmp_39_2_fu_668_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_656_p2),64));
    tmp_39_3_1_fu_771_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_3_s_fu_760_p2),64));
    tmp_39_3_2_fu_797_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_3_1_fu_791_p2),64));
    tmp_39_3_3_fu_802_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_3_2_reg_939),64));
    tmp_39_3_fu_766_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_754_p2),64));
    tmp_51_fu_405_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_397_p3),64));
    tmp_52_fu_410_p2 <= (tmp_fu_397_p3 or ap_const_lv7_1);
    tmp_53_fu_416_p3 <= (ap_const_lv57_0 & tmp_52_fu_410_p2);
    tmp_54_fu_425_p2 <= (tmp_reg_815 or ap_const_lv7_2);
    tmp_55_fu_430_p3 <= (ap_const_lv57_0 & tmp_54_fu_425_p2);
    tmp_56_fu_439_p2 <= (tmp_reg_815 or ap_const_lv7_3);
    tmp_57_fu_444_p3 <= (ap_const_lv57_0 & tmp_56_fu_439_p2);
    tmp_58_fu_469_p2 <= (tmp_reg_815 or ap_const_lv7_4);
    tmp_59_fu_474_p3 <= (ap_const_lv57_0 & tmp_58_fu_469_p2);
    tmp_60_fu_483_p2 <= (tmp_reg_815 or ap_const_lv7_5);
    tmp_61_fu_488_p3 <= (ap_const_lv57_0 & tmp_60_fu_483_p2);
    tmp_62_fu_522_p2 <= (tmp_reg_815 or ap_const_lv7_6);
    tmp_63_fu_527_p3 <= (ap_const_lv57_0 & tmp_62_fu_522_p2);
    tmp_64_fu_536_p2 <= (tmp_reg_815 or ap_const_lv7_7);
    tmp_65_fu_541_p3 <= (ap_const_lv57_0 & tmp_64_fu_536_p2);
    tmp_66_fu_572_p2 <= (tmp_reg_815 or ap_const_lv7_8);
    tmp_67_fu_577_p3 <= (ap_const_lv57_0 & tmp_66_fu_572_p2);
    tmp_68_fu_586_p2 <= (tmp_reg_815 or ap_const_lv7_9);
    tmp_69_fu_591_p3 <= (ap_const_lv57_0 & tmp_68_fu_586_p2);
    tmp_70_fu_625_p2 <= (tmp_reg_815 or ap_const_lv7_A);
    tmp_71_fu_630_p3 <= (ap_const_lv57_0 & tmp_70_fu_625_p2);
    tmp_72_fu_639_p2 <= (tmp_reg_815 or ap_const_lv7_B);
    tmp_73_fu_644_p3 <= (ap_const_lv57_0 & tmp_72_fu_639_p2);
    tmp_74_fu_678_p2 <= (tmp_reg_815 or ap_const_lv7_C);
    tmp_75_fu_683_p3 <= (ap_const_lv57_0 & tmp_74_fu_678_p2);
    tmp_76_fu_692_p2 <= (tmp_reg_815 or ap_const_lv7_D);
    tmp_77_fu_697_p3 <= (ap_const_lv57_0 & tmp_76_fu_692_p2);
    tmp_78_fu_726_p2 <= (tmp_reg_815 or ap_const_lv7_E);
    tmp_79_fu_731_p3 <= (ap_const_lv57_0 & tmp_78_fu_726_p2);
    tmp_80_fu_740_p2 <= (tmp_reg_815 or ap_const_lv7_F);
    tmp_81_fu_745_p3 <= (ap_const_lv57_0 & tmp_80_fu_740_p2);
    tmp_cast4_fu_653_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_reg_878),8));
    tmp_fu_397_p3 <= (ap_phi_mux_channels_phi_fu_366_p4 & ap_const_lv4_0);
    tmp_s_107_fu_459_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cnt_reg_373),64));
    tmp_s_fu_550_p2 <= (cnt_reg_373 or ap_const_lv7_4);
end behav;
