-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Conv1_layer is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    conv1_input_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    conv1_input_ce0 : OUT STD_LOGIC;
    conv1_input_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv1_input_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    conv1_input_ce1 : OUT STD_LOGIC;
    conv1_input_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv1_output_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    conv1_output_ce0 : OUT STD_LOGIC;
    conv1_output_we0 : OUT STD_LOGIC;
    conv1_output_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv1_output_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of Conv1_layer is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (15 downto 0) := "0010000000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (15 downto 0) := "0100000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_3D1A7B8B : STD_LOGIC_VECTOR (31 downto 0) := "00111101000110100111101110001011";
    constant ap_const_lv32_BE5088AA : STD_LOGIC_VECTOR (31 downto 0) := "10111110010100001000100010101010";
    constant ap_const_lv32_BE60B237 : STD_LOGIC_VECTOR (31 downto 0) := "10111110011000001011001000110111";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv10_240 : STD_LOGIC_VECTOR (9 downto 0) := "1001000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv32_3F00B78F : STD_LOGIC_VECTOR (31 downto 0) := "00111111000000001011011110001111";
    constant ap_const_lv32_3EA43537 : STD_LOGIC_VECTOR (31 downto 0) := "00111110101001000011010100110111";
    constant ap_const_lv32_BEAAC91D : STD_LOGIC_VECTOR (31 downto 0) := "10111110101010101100100100011101";
    constant ap_const_lv32_3E5233AB : STD_LOGIC_VECTOR (31 downto 0) := "00111110010100100011001110101011";
    constant ap_const_lv32_3EEA851C : STD_LOGIC_VECTOR (31 downto 0) := "00111110111010101000010100011100";
    constant ap_const_lv32_BDC007E8 : STD_LOGIC_VECTOR (31 downto 0) := "10111101110000000000011111101000";
    constant ap_const_lv32_3D8ABBDC : STD_LOGIC_VECTOR (31 downto 0) := "00111101100010101011101111011100";
    constant ap_const_lv32_BE85BB3C : STD_LOGIC_VECTOR (31 downto 0) := "10111110100001011011101100111100";
    constant ap_const_lv32_3EA5BB5E : STD_LOGIC_VECTOR (31 downto 0) := "00111110101001011011101101011110";
    constant ap_const_lv32_BE323220 : STD_LOGIC_VECTOR (31 downto 0) := "10111110001100100011001000100000";
    constant ap_const_lv32_BBD72679 : STD_LOGIC_VECTOR (31 downto 0) := "10111011110101110010011001111001";
    constant ap_const_lv32_3F29DAB5 : STD_LOGIC_VECTOR (31 downto 0) := "00111111001010011101101010110101";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv32_3F071C99 : STD_LOGIC_VECTOR (31 downto 0) := "00111111000001110001110010011001";
    constant ap_const_lv32_3EEEACC8 : STD_LOGIC_VECTOR (31 downto 0) := "00111110111011101010110011001000";
    constant ap_const_lv32_3C0E86FC : STD_LOGIC_VECTOR (31 downto 0) := "00111100000011101000011011111100";
    constant ap_const_lv32_3F40522A : STD_LOGIC_VECTOR (31 downto 0) := "00111111010000000101001000101010";
    constant ap_const_lv32_3E7CBAD1 : STD_LOGIC_VECTOR (31 downto 0) := "00111110011111001011101011010001";
    constant ap_const_lv32_3D92314F : STD_LOGIC_VECTOR (31 downto 0) := "00111101100100100011000101001111";
    constant ap_const_lv32_3F11F65D : STD_LOGIC_VECTOR (31 downto 0) := "00111111000100011111011001011101";
    constant ap_const_lv32_BECE5C4F : STD_LOGIC_VECTOR (31 downto 0) := "10111110110011100101110001001111";
    constant ap_const_lv32_3EE971C2 : STD_LOGIC_VECTOR (31 downto 0) := "00111110111010010111000111000010";
    constant ap_const_lv32_3E95E4FC : STD_LOGIC_VECTOR (31 downto 0) := "00111110100101011110010011111100";
    constant ap_const_lv32_BEDBEE3C : STD_LOGIC_VECTOR (31 downto 0) := "10111110110110111110111000111100";
    constant ap_const_lv32_3EC55FF9 : STD_LOGIC_VECTOR (31 downto 0) := "00111110110001010101111111111001";
    constant ap_const_lv32_3E2156FF : STD_LOGIC_VECTOR (31 downto 0) := "00111110001000010101011011111111";
    constant ap_const_lv32_3D8F4663 : STD_LOGIC_VECTOR (31 downto 0) := "00111101100011110100011001100011";
    constant ap_const_lv32_BE71169D : STD_LOGIC_VECTOR (31 downto 0) := "10111110011100010001011010011101";
    constant ap_const_lv32_3EBC81C4 : STD_LOGIC_VECTOR (31 downto 0) := "00111110101111001000000111000100";
    constant ap_const_lv32_3F087B62 : STD_LOGIC_VECTOR (31 downto 0) := "00111111000010000111101101100010";
    constant ap_const_lv32_3E69ECA7 : STD_LOGIC_VECTOR (31 downto 0) := "00111110011010011110110010100111";
    constant ap_const_lv32_3F031751 : STD_LOGIC_VECTOR (31 downto 0) := "00111111000000110001011101010001";
    constant ap_const_lv32_BE59374D : STD_LOGIC_VECTOR (31 downto 0) := "10111110010110010011011101001101";
    constant ap_const_lv32_3F008B93 : STD_LOGIC_VECTOR (31 downto 0) := "00111111000000001000101110010011";
    constant ap_const_lv32_3F010541 : STD_LOGIC_VECTOR (31 downto 0) := "00111111000000010000010101000001";
    constant ap_const_lv32_BEEA1981 : STD_LOGIC_VECTOR (31 downto 0) := "10111110111010100001100110000001";
    constant ap_const_lv32_3CA70F20 : STD_LOGIC_VECTOR (31 downto 0) := "00111100101001110000111100100000";
    constant ap_const_lv32_BE2F8619 : STD_LOGIC_VECTOR (31 downto 0) := "10111110001011111000011000011001";
    constant ap_const_lv32_3ED9DAC0 : STD_LOGIC_VECTOR (31 downto 0) := "00111110110110011101101011000000";
    constant ap_const_lv32_BB8E8F82 : STD_LOGIC_VECTOR (31 downto 0) := "10111011100011101000111110000010";
    constant ap_const_lv32_BE1B0008 : STD_LOGIC_VECTOR (31 downto 0) := "10111110000110110000000000001000";
    constant ap_const_lv32_3E7B0754 : STD_LOGIC_VECTOR (31 downto 0) := "00111110011110110000011101010100";
    constant ap_const_lv32_3E3625D1 : STD_LOGIC_VECTOR (31 downto 0) := "00111110001101100010010111010001";
    constant ap_const_lv32_BDE05AC4 : STD_LOGIC_VECTOR (31 downto 0) := "10111101111000000101101011000100";
    constant ap_const_lv32_3E00C487 : STD_LOGIC_VECTOR (31 downto 0) := "00111110000000001100010010000111";
    constant ap_const_lv32_3EBDF09B : STD_LOGIC_VECTOR (31 downto 0) := "00111110101111011111000010011011";
    constant ap_const_lv32_3EB178CE : STD_LOGIC_VECTOR (31 downto 0) := "00111110101100010111100011001110";
    constant ap_const_lv32_BE8BDD8D : STD_LOGIC_VECTOR (31 downto 0) := "10111110100010111101110110001101";
    constant ap_const_lv32_3E3A9542 : STD_LOGIC_VECTOR (31 downto 0) := "00111110001110101001010101000010";
    constant ap_const_lv32_BED85B68 : STD_LOGIC_VECTOR (31 downto 0) := "10111110110110000101101101101000";
    constant ap_const_lv32_3ED8FAC9 : STD_LOGIC_VECTOR (31 downto 0) := "00111110110110001111101011001001";
    constant ap_const_lv32_3E7E0799 : STD_LOGIC_VECTOR (31 downto 0) := "00111110011111100000011110011001";
    constant ap_const_lv32_BF01FD3F : STD_LOGIC_VECTOR (31 downto 0) := "10111111000000011111110100111111";
    constant ap_const_lv32_3E3ED055 : STD_LOGIC_VECTOR (31 downto 0) := "00111110001111101101000001010101";
    constant ap_const_lv32_3E62C9A3 : STD_LOGIC_VECTOR (31 downto 0) := "00111110011000101100100110100011";
    constant ap_const_lv32_BEFD369F : STD_LOGIC_VECTOR (31 downto 0) := "10111110111111010011011010011111";
    constant ap_const_lv32_3D9C8926 : STD_LOGIC_VECTOR (31 downto 0) := "00111101100111001000100100100110";
    constant ap_const_lv32_3F01FF87 : STD_LOGIC_VECTOR (31 downto 0) := "00111111000000011111111110000111";
    constant ap_const_lv32_BEC07C21 : STD_LOGIC_VECTOR (31 downto 0) := "10111110110000000111110000100001";
    constant ap_const_lv32_BE57EE97 : STD_LOGIC_VECTOR (31 downto 0) := "10111110010101111110111010010111";
    constant ap_const_lv32_3EDF7A0F : STD_LOGIC_VECTOR (31 downto 0) := "00111110110111110111101000001111";
    constant ap_const_lv32_3D5AAD11 : STD_LOGIC_VECTOR (31 downto 0) := "00111101010110101010110100010001";
    constant ap_const_lv32_3EAA36F0 : STD_LOGIC_VECTOR (31 downto 0) := "00111110101010100011011011110000";
    constant ap_const_lv32_3E9F5452 : STD_LOGIC_VECTOR (31 downto 0) := "00111110100111110101010001010010";
    constant ap_const_lv32_BDB29182 : STD_LOGIC_VECTOR (31 downto 0) := "10111101101100101001000110000010";
    constant ap_const_lv32_BE4985F4 : STD_LOGIC_VECTOR (31 downto 0) := "10111110010010011000010111110100";
    constant ap_const_lv32_3E973F59 : STD_LOGIC_VECTOR (31 downto 0) := "00111110100101110011111101011001";
    constant ap_const_lv32_3ED67840 : STD_LOGIC_VECTOR (31 downto 0) := "00111110110101100111100001000000";
    constant ap_const_lv32_3E48ABF8 : STD_LOGIC_VECTOR (31 downto 0) := "00111110010010001010101111111000";
    constant ap_const_lv32_BB3D2D29 : STD_LOGIC_VECTOR (31 downto 0) := "10111011001111010010110100101001";
    constant ap_const_lv32_3F06A6B3 : STD_LOGIC_VECTOR (31 downto 0) := "00111111000001101010011010110011";
    constant ap_const_lv32_3D4A4314 : STD_LOGIC_VECTOR (31 downto 0) := "00111101010010100100001100010100";
    constant ap_const_lv32_3ED2152C : STD_LOGIC_VECTOR (31 downto 0) := "00111110110100100001010100101100";
    constant ap_const_lv32_3EE3AB18 : STD_LOGIC_VECTOR (31 downto 0) := "00111110111000111010101100011000";
    constant ap_const_lv32_BEDEDEE8 : STD_LOGIC_VECTOR (31 downto 0) := "10111110110111101101111011101000";
    constant ap_const_lv32_BD82B765 : STD_LOGIC_VECTOR (31 downto 0) := "10111101100000101011011101100101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_464 : STD_LOGIC_VECTOR (9 downto 0);
    signal row_1_reg_475 : STD_LOGIC_VECTOR (4 downto 0);
    signal column_1_reg_487 : STD_LOGIC_VECTOR (4 downto 0);
    signal reg_515 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state4_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state17_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state30_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state43_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal exitcond_flatten_reg_1569 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state5_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state18_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state31_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state44_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state6_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state19_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state32_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state7_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state20_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state33_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state8_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state21_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_state34_pp0_stage5_iter2 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state9_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state22_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_state35_pp0_stage6_iter2 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state10_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state23_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_state36_pp0_stage7_iter2 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_state11_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_state24_pp0_stage8_iter1 : BOOLEAN;
    signal ap_block_state37_pp0_stage8_iter2 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_state12_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_state25_pp0_stage9_iter1 : BOOLEAN;
    signal ap_block_state38_pp0_stage9_iter2 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_state13_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_state26_pp0_stage10_iter1 : BOOLEAN;
    signal ap_block_state39_pp0_stage10_iter2 : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_state14_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_state27_pp0_stage11_iter1 : BOOLEAN;
    signal ap_block_state40_pp0_stage11_iter2 : BOOLEAN;
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_state15_pp0_stage12_iter0 : BOOLEAN;
    signal ap_block_state28_pp0_stage12_iter1 : BOOLEAN;
    signal ap_block_state41_pp0_stage12_iter2 : BOOLEAN;
    signal ap_block_pp0_stage12_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state42_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal reg_520 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_507_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_525 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_511_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_531 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_537 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_542 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_547 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_553 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_559 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_565 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_498_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_571 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_577 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_flatten_reg_1569_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_502_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_583 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_589 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_595 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond4_fu_600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal channels_9_fu_606_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal channels_9_reg_1549 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_211_cast_fu_642_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_211_cast_reg_1554 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_40_fu_646_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_reg_1559 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_1_3_fu_658_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal row_1_3_reg_1564 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond_flatten_fu_664_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1569_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1569_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_670_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_flatten_next_reg_1573 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond_fu_676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1578 : STD_LOGIC_VECTOR (0 downto 0);
    signal column_mid2_fu_682_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal column_mid2_reg_1586 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_mid2_fu_690_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_mid2_reg_1593 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_180_fu_726_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_180_reg_1598 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_41_cast_fu_767_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_41_cast_reg_1605 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_output_addr_reg_1618 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_output_addr_reg_1618_pp0_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_output_addr_reg_1618_pp0_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_output_addr_reg_1618_pp0_iter3_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal column_1_3_fu_793_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal column_1_3_reg_1623 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_69_0_1_cast_fu_799_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_69_0_1_cast_reg_1628 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_output_load_reg_1641 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_69_0_3_cast_fu_819_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_69_0_3_cast_reg_1646 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_69_0_4_cast_fu_838_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_69_0_4_cast_reg_1659 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_183_fu_888_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_183_reg_1672 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_69_0_2_cast_fu_935_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_69_0_2_cast_reg_1684 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_186_fu_1031_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_186_reg_1707 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_66_3_mid2_v_fu_1044_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_66_3_mid2_v_reg_1714 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_66_4_mid2_v_fu_1057_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_66_4_mid2_v_reg_1720 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_189_fu_1175_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_189_reg_1746 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_194_fu_1255_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_194_reg_1763 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_197_fu_1259_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_197_reg_1768 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_203_fu_1264_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_203_reg_1773 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_204_fu_1269_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_204_reg_1778 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_206_fu_1273_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_206_reg_1783 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_208_fu_1286_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_208_reg_1793 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_213_fu_1300_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_213_reg_1803 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_217_fu_1305_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_217_reg_1808 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_218_fu_1309_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_218_reg_1813 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp6_reg_1818 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp9_reg_1833 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_reg_1858 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp19_reg_1878 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_70_3_4_reg_1883 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp24_reg_1888 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp5_reg_1893 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp8_reg_1898 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp15_reg_1903 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp21_reg_1908 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_reg_1913 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp7_reg_1918 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp14_reg_1923 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp20_reg_1928 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_reg_1933 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal tmp13_reg_1938 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal channels_reg_452 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_phi_mux_indvar_flatten_phi_fu_468_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_row_1_phi_fu_479_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_column_1_phi_fu_491_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_231_cast_fu_777_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_236_cast_fu_788_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_237_cast_fu_809_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_247_cast_fu_828_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal tmp_252_cast_fu_847_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_238_cast_fu_925_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal tmp_243_cast_fu_945_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_248_cast_fu_967_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal tmp_253_cast_fu_989_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_233_cast_fu_1068_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal tmp_239_cast_fu_1078_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_249_cast_fu_1113_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal tmp_254_cast_fu_1122_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_234_cast_fu_1186_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal tmp_240_cast_fu_1196_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_245_cast_fu_1281_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal tmp_250_cast_fu_1295_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_235_cast_fu_1340_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal tmp_241_cast_fu_1344_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_246_cast_fu_1374_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal tmp_251_cast_fu_1378_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_242_cast_fu_1408_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal tmp_256_cast_fu_1412_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_232_cast_fu_1442_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal tmp_244_cast_fu_1446_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_255_cast_fu_1489_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage12 : BOOLEAN;
    signal grp_fu_498_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_498_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_502_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_502_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_507_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_42_fu_894_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_fu_950_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_50_fu_1083_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_fu_1127_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_fu_1201_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_fu_1314_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_59_fu_1348_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_61_fu_1382_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_64_fu_1416_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_66_fu_1450_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_fu_1476_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_fu_1506_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_63_fu_1532_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_511_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_44_fu_907_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_fu_972_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_fu_1096_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_53_fu_1140_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_55_fu_1214_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_fu_1327_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_fu_1361_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_62_fu_1395_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_65_fu_1429_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_67_fu_1463_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_68_fu_1493_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_56_fu_1519_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_612_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_s_fu_624_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl_cast_fu_620_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl2_cast_fu_632_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_179_fu_636_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_76_fu_702_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_77_fu_714_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl13_cast_fu_710_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl14_cast_fu_722_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_mid2_cast_fu_698_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_181_fu_732_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_78_fu_737_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl11_cast_fu_741_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl12_cast_fu_749_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_193_fu_771_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_182_fu_757_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_41_cast1_fu_763_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_198_fu_782_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_199_fu_803_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_68_0_3_fu_814_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_209_fu_823_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_68_0_4_fu_833_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_214_fu_842_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal row_4_mid1_fu_852_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_66_1_mid2_fu_858_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_79_fu_864_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_80_fu_876_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl9_cast_fu_872_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl10_cast_fu_884_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_200_fu_920_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_68_0_2_fu_930_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_205_fu_939_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_210_fu_963_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_215_fu_985_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_66_2_mid2_v_v_ca_fu_994_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_66_2_mid2_v_fu_1001_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_184_fu_1007_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_185_fu_1019_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl7_cast_fu_1015_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl8_cast_fu_1027_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_66_3_mid2_v_v_ca_fu_1037_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_66_4_mid2_v_v_ca_fu_1050_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_195_fu_1063_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_201_fu_1073_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_211_fu_1109_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_216_fu_1118_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_187_fu_1153_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_188_fu_1164_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl5_cast_fu_1160_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl6_cast_fu_1171_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_196_fu_1181_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_202_fu_1191_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_190_fu_1227_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_191_fu_1238_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl3_cast_fu_1234_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl4_cast_fu_1245_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_192_fu_1249_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_207_fu_1277_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_212_fu_1291_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component run_fadd_32ns_32nbkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component run_fmul_32ns_32ncud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component run_mux_32_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    run_fadd_32ns_32nbkb_U10 : component run_fadd_32ns_32nbkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_498_p0,
        din1 => grp_fu_498_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_498_p2);

    run_fadd_32ns_32nbkb_U11 : component run_fadd_32ns_32nbkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_502_p0,
        din1 => grp_fu_502_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_502_p2);

    run_fmul_32ns_32ncud_U12 : component run_fmul_32ns_32ncud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => reg_515,
        din1 => grp_fu_507_p1,
        dout => grp_fu_507_p2);

    run_fmul_32ns_32ncud_U13 : component run_fmul_32ns_32ncud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => reg_520,
        din1 => grp_fu_511_p1,
        dout => grp_fu_511_p2);

    run_mux_32_32_1_1_U14 : component run_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_3D1A7B8B,
        din1 => ap_const_lv32_BE5088AA,
        din2 => ap_const_lv32_BE60B237,
        din3 => channels_reg_452,
        dout => tmp_40_fu_646_p5);

    run_mux_32_32_1_1_U15 : component run_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_3F00B78F,
        din1 => ap_const_lv32_3EA43537,
        din2 => ap_const_lv32_BEAAC91D,
        din3 => channels_reg_452,
        dout => tmp_42_fu_894_p5);

    run_mux_32_32_1_1_U16 : component run_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_3E5233AB,
        din1 => ap_const_lv32_3EEA851C,
        din2 => ap_const_lv32_BDC007E8,
        din3 => channels_reg_452,
        dout => tmp_44_fu_907_p5);

    run_mux_32_32_1_1_U17 : component run_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_3D8ABBDC,
        din1 => ap_const_lv32_BE85BB3C,
        din2 => ap_const_lv32_3EA5BB5E,
        din3 => channels_reg_452,
        dout => tmp_47_fu_950_p5);

    run_mux_32_32_1_1_U18 : component run_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_BE323220,
        din1 => ap_const_lv32_BBD72679,
        din2 => ap_const_lv32_3F29DAB5,
        din3 => channels_reg_452,
        dout => tmp_48_fu_972_p5);

    run_mux_32_32_1_1_U19 : component run_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_3F071C99,
        din1 => ap_const_lv32_3EEEACC8,
        din2 => ap_const_lv32_3C0E86FC,
        din3 => channels_reg_452,
        dout => tmp_50_fu_1083_p5);

    run_mux_32_32_1_1_U20 : component run_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_3F40522A,
        din1 => ap_const_lv32_3E7CBAD1,
        din2 => ap_const_lv32_3D92314F,
        din3 => channels_reg_452,
        dout => tmp_51_fu_1096_p5);

    run_mux_32_32_1_1_U21 : component run_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_3F11F65D,
        din1 => ap_const_lv32_BECE5C4F,
        din2 => ap_const_lv32_3EE971C2,
        din3 => channels_reg_452,
        dout => tmp_52_fu_1127_p5);

    run_mux_32_32_1_1_U22 : component run_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_3E95E4FC,
        din1 => ap_const_lv32_BEDBEE3C,
        din2 => ap_const_lv32_3EC55FF9,
        din3 => channels_reg_452,
        dout => tmp_53_fu_1140_p5);

    run_mux_32_32_1_1_U23 : component run_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_3E2156FF,
        din1 => ap_const_lv32_3D8F4663,
        din2 => ap_const_lv32_BE71169D,
        din3 => channels_reg_452,
        dout => tmp_54_fu_1201_p5);

    run_mux_32_32_1_1_U24 : component run_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_3EBC81C4,
        din1 => ap_const_lv32_3F087B62,
        din2 => ap_const_lv32_3E69ECA7,
        din3 => channels_reg_452,
        dout => tmp_55_fu_1214_p5);

    run_mux_32_32_1_1_U25 : component run_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_3F031751,
        din1 => ap_const_lv32_BE59374D,
        din2 => ap_const_lv32_3F008B93,
        din3 => channels_reg_452,
        dout => tmp_57_fu_1314_p5);

    run_mux_32_32_1_1_U26 : component run_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_3F010541,
        din1 => ap_const_lv32_BEEA1981,
        din2 => ap_const_lv32_3CA70F20,
        din3 => channels_reg_452,
        dout => tmp_58_fu_1327_p5);

    run_mux_32_32_1_1_U27 : component run_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_BE2F8619,
        din1 => ap_const_lv32_3ED9DAC0,
        din2 => ap_const_lv32_BB8E8F82,
        din3 => channels_reg_452,
        dout => tmp_59_fu_1348_p5);

    run_mux_32_32_1_1_U28 : component run_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_BE1B0008,
        din1 => ap_const_lv32_3E7B0754,
        din2 => ap_const_lv32_3E3625D1,
        din3 => channels_reg_452,
        dout => tmp_60_fu_1361_p5);

    run_mux_32_32_1_1_U29 : component run_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_BDE05AC4,
        din1 => ap_const_lv32_3E00C487,
        din2 => ap_const_lv32_3EBDF09B,
        din3 => channels_reg_452,
        dout => tmp_61_fu_1382_p5);

    run_mux_32_32_1_1_U30 : component run_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_3EB178CE,
        din1 => ap_const_lv32_BE8BDD8D,
        din2 => ap_const_lv32_3E3A9542,
        din3 => channels_reg_452,
        dout => tmp_62_fu_1395_p5);

    run_mux_32_32_1_1_U31 : component run_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_BED85B68,
        din1 => ap_const_lv32_3ED8FAC9,
        din2 => ap_const_lv32_3E7E0799,
        din3 => channels_reg_452,
        dout => tmp_64_fu_1416_p5);

    run_mux_32_32_1_1_U32 : component run_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_BF01FD3F,
        din1 => ap_const_lv32_3E3ED055,
        din2 => ap_const_lv32_3E62C9A3,
        din3 => channels_reg_452,
        dout => tmp_65_fu_1429_p5);

    run_mux_32_32_1_1_U33 : component run_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_BEFD369F,
        din1 => ap_const_lv32_3D9C8926,
        din2 => ap_const_lv32_3F01FF87,
        din3 => channels_reg_452,
        dout => tmp_66_fu_1450_p5);

    run_mux_32_32_1_1_U34 : component run_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_BEC07C21,
        din1 => ap_const_lv32_BE57EE97,
        din2 => ap_const_lv32_3EDF7A0F,
        din3 => channels_reg_452,
        dout => tmp_67_fu_1463_p5);

    run_mux_32_32_1_1_U35 : component run_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_3D5AAD11,
        din1 => ap_const_lv32_3EAA36F0,
        din2 => ap_const_lv32_3E9F5452,
        din3 => channels_reg_452,
        dout => tmp_46_fu_1476_p5);

    run_mux_32_32_1_1_U36 : component run_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_BDB29182,
        din1 => ap_const_lv32_BE4985F4,
        din2 => ap_const_lv32_3E973F59,
        din3 => channels_reg_452,
        dout => tmp_68_fu_1493_p5);

    run_mux_32_32_1_1_U37 : component run_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_3ED67840,
        din1 => ap_const_lv32_3E48ABF8,
        din2 => ap_const_lv32_BB3D2D29,
        din3 => channels_reg_452,
        dout => tmp_49_fu_1506_p5);

    run_mux_32_32_1_1_U38 : component run_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_3F06A6B3,
        din1 => ap_const_lv32_3D4A4314,
        din2 => ap_const_lv32_3ED2152C,
        din3 => channels_reg_452,
        dout => tmp_56_fu_1519_p5);

    run_mux_32_32_1_1_U39 : component run_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_3EE3AB18,
        din1 => ap_const_lv32_BEDEDEE8,
        din2 => ap_const_lv32_BD82B765,
        din3 => channels_reg_452,
        dout => tmp_63_fu_1532_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((exitcond4_fu_600_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage12_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage12_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif (((exitcond4_fu_600_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    channels_reg_452_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
                channels_reg_452 <= channels_9_reg_1549;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                channels_reg_452 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    column_1_reg_487_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                column_1_reg_487 <= column_1_3_reg_1623;
            elsif (((exitcond4_fu_600_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                column_1_reg_487 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_464_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_464 <= indvar_flatten_next_reg_1573;
            elsif (((exitcond4_fu_600_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                indvar_flatten_reg_464 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    row_1_reg_475_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                row_1_reg_475 <= tmp_mid2_reg_1593;
            elsif (((exitcond4_fu_600_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                row_1_reg_475 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                channels_9_reg_1549 <= channels_9_fu_606_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_664_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                column_1_3_reg_1623 <= column_1_3_fu_793_p2;
                tmp_mid2_reg_1593 <= tmp_mid2_fu_690_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_664_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                column_mid2_reg_1586 <= column_mid2_fu_682_p3;
                conv1_output_addr_reg_1618 <= tmp_236_cast_fu_788_p1(11 - 1 downto 0);
                exitcond_reg_1578 <= exitcond_fu_676_p2;
                    tmp_180_reg_1598(10 downto 2) <= tmp_180_fu_726_p2(10 downto 2);
                    tmp_41_cast_reg_1605(4 downto 0) <= tmp_41_cast_fu_767_p1(4 downto 0);
                    tmp_69_0_1_cast_reg_1628(4 downto 0) <= tmp_69_0_1_cast_fu_799_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                conv1_output_addr_reg_1618_pp0_iter1_reg <= conv1_output_addr_reg_1618;
                conv1_output_addr_reg_1618_pp0_iter2_reg <= conv1_output_addr_reg_1618_pp0_iter1_reg;
                conv1_output_addr_reg_1618_pp0_iter3_reg <= conv1_output_addr_reg_1618_pp0_iter2_reg;
                exitcond_flatten_reg_1569 <= exitcond_flatten_fu_664_p2;
                exitcond_flatten_reg_1569_pp0_iter1_reg <= exitcond_flatten_reg_1569;
                exitcond_flatten_reg_1569_pp0_iter2_reg <= exitcond_flatten_reg_1569_pp0_iter1_reg;
                exitcond_flatten_reg_1569_pp0_iter3_reg <= exitcond_flatten_reg_1569_pp0_iter2_reg;
                row_1_3_reg_1564 <= row_1_3_fu_658_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                conv1_output_load_reg_1641 <= conv1_output_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                indvar_flatten_next_reg_1573 <= indvar_flatten_next_fu_670_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_515 <= conv1_input_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_520 <= conv1_input_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)))) then
                reg_525 <= grp_fu_507_p2;
                reg_531 <= grp_fu_511_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)))) then
                reg_537 <= grp_fu_507_p2;
                reg_542 <= grp_fu_511_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)))) then
                reg_547 <= grp_fu_507_p2;
                reg_553 <= grp_fu_511_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)))) then
                reg_559 <= grp_fu_507_p2;
                reg_565 <= grp_fu_511_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)))) then
                reg_571 <= grp_fu_498_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((exitcond_flatten_reg_1569_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then
                reg_577 <= grp_fu_498_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((exitcond_flatten_reg_1569_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then
                reg_583 <= grp_fu_502_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((exitcond_flatten_reg_1569_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)))) then
                reg_589 <= grp_fu_498_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((exitcond_flatten_reg_1569_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((exitcond_flatten_reg_1569_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)))) then
                reg_595 <= grp_fu_502_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1569_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then
                tmp13_reg_1938 <= grp_fu_502_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1569_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then
                tmp14_reg_1923 <= grp_fu_502_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1569_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                tmp15_reg_1903 <= grp_fu_502_p2;
                tmp8_reg_1898 <= grp_fu_498_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp19_reg_1878 <= grp_fu_498_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1569_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp1_reg_1933 <= grp_fu_502_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1569_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then
                tmp20_reg_1928 <= grp_fu_502_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1569_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                tmp21_reg_1908 <= grp_fu_502_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (exitcond_flatten_reg_1569_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                tmp24_reg_1888 <= grp_fu_498_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1569_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then
                tmp2_reg_1913 <= grp_fu_502_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then
                tmp3_reg_1858 <= grp_fu_498_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1569_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                tmp5_reg_1893 <= grp_fu_498_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then
                tmp6_reg_1818 <= grp_fu_498_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1569_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001))) then
                tmp7_reg_1918 <= grp_fu_502_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then
                tmp9_reg_1833 <= grp_fu_498_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                    tmp_183_reg_1672(10 downto 2) <= tmp_183_fu_888_p2(10 downto 2);
                    tmp_69_0_2_cast_reg_1684(4 downto 0) <= tmp_69_0_2_cast_fu_935_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                    tmp_186_reg_1707(10 downto 2) <= tmp_186_fu_1031_p2(10 downto 2);
                tmp_66_3_mid2_v_reg_1714 <= tmp_66_3_mid2_v_fu_1044_p2;
                tmp_66_4_mid2_v_reg_1720 <= tmp_66_4_mid2_v_fu_1057_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then
                    tmp_189_reg_1746(10 downto 2) <= tmp_189_fu_1175_p2(10 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then
                tmp_194_reg_1763 <= tmp_194_fu_1255_p2;
                tmp_197_reg_1768 <= tmp_197_fu_1259_p2;
                tmp_203_reg_1773 <= tmp_203_fu_1264_p2;
                tmp_204_reg_1778 <= tmp_204_fu_1269_p2;
                tmp_206_reg_1783 <= tmp_206_fu_1273_p2;
                tmp_208_reg_1793 <= tmp_208_fu_1286_p2;
                tmp_213_reg_1803 <= tmp_213_fu_1300_p2;
                tmp_217_reg_1808 <= tmp_217_fu_1305_p2;
                tmp_218_reg_1813 <= tmp_218_fu_1309_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond4_fu_600_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    tmp_211_cast_reg_1554(8 downto 3) <= tmp_211_cast_fu_642_p1(8 downto 3);
                tmp_40_reg_1559 <= tmp_40_fu_646_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    tmp_69_0_3_cast_reg_1646(4 downto 0) <= tmp_69_0_3_cast_fu_819_p1(4 downto 0);
                    tmp_69_0_4_cast_reg_1659(4 downto 0) <= tmp_69_0_4_cast_fu_838_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1569_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                tmp_70_3_4_reg_1883 <= grp_fu_507_p2;
            end if;
        end if;
    end process;
    tmp_211_cast_reg_1554(2 downto 0) <= "000";
    tmp_180_reg_1598(1 downto 0) <= "00";
    tmp_41_cast_reg_1605(10 downto 5) <= "000000";
    tmp_69_0_1_cast_reg_1628(10 downto 5) <= "000000";
    tmp_69_0_3_cast_reg_1646(10 downto 5) <= "000000";
    tmp_69_0_4_cast_reg_1659(10 downto 5) <= "000000";
    tmp_183_reg_1672(1 downto 0) <= "00";
    tmp_69_0_2_cast_reg_1684(10 downto 5) <= "000000";
    tmp_186_reg_1707(1 downto 0) <= "00";
    tmp_189_reg_1746(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter1, exitcond4_fu_600_p2, ap_CS_fsm_state2, exitcond_flatten_fu_664_p2, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone, ap_block_pp0_stage12_subdone, ap_block_pp0_stage2_subdone, ap_enable_reg_pp0_iter3, ap_block_pp0_stage1_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage11_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond4_fu_600_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond_flatten_fu_664_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond_flatten_fu_664_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(9);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(11);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state45 <= ap_CS_fsm(15);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage9_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage10_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage11_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage12_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage8_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage9_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage10_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage11_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage12_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage6_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage7_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage8_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage9_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage10_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage11_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage12_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond_flatten_fu_664_p2)
    begin
        if ((exitcond_flatten_fu_664_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, exitcond4_fu_600_p2, ap_CS_fsm_state2)
    begin
        if ((((exitcond4_fu_600_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_column_1_phi_fu_491_p4_assign_proc : process(column_1_reg_487, exitcond_flatten_reg_1569, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, column_1_3_reg_1623, ap_block_pp0_stage0)
    begin
        if (((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_column_1_phi_fu_491_p4 <= column_1_3_reg_1623;
        else 
            ap_phi_mux_column_1_phi_fu_491_p4 <= column_1_reg_487;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_468_p4_assign_proc : process(indvar_flatten_reg_464, exitcond_flatten_reg_1569, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, indvar_flatten_next_reg_1573, ap_block_pp0_stage0)
    begin
        if (((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_468_p4 <= indvar_flatten_next_reg_1573;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_468_p4 <= indvar_flatten_reg_464;
        end if; 
    end process;


    ap_phi_mux_row_1_phi_fu_479_p4_assign_proc : process(row_1_reg_475, exitcond_flatten_reg_1569, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_mid2_reg_1593, ap_block_pp0_stage0)
    begin
        if (((exitcond_flatten_reg_1569 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_row_1_phi_fu_479_p4 <= tmp_mid2_reg_1593;
        else 
            ap_phi_mux_row_1_phi_fu_479_p4 <= row_1_reg_475;
        end if; 
    end process;


    ap_ready_assign_proc : process(exitcond4_fu_600_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond4_fu_600_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    channels_9_fu_606_p2 <= std_logic_vector(unsigned(channels_reg_452) + unsigned(ap_const_lv2_1));
    column_1_3_fu_793_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(column_mid2_fu_682_p3));
    column_mid2_fu_682_p3 <= 
        ap_const_lv5_0 when (exitcond_fu_676_p2(0) = '1') else 
        ap_phi_mux_column_1_phi_fu_491_p4;

    conv1_input_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, tmp_231_cast_fu_777_p1, tmp_247_cast_fu_828_p1, ap_block_pp0_stage1, tmp_238_cast_fu_925_p1, ap_block_pp0_stage2, tmp_248_cast_fu_967_p1, ap_block_pp0_stage3, tmp_233_cast_fu_1068_p1, ap_block_pp0_stage4, tmp_249_cast_fu_1113_p1, ap_block_pp0_stage5, tmp_234_cast_fu_1186_p1, ap_block_pp0_stage6, tmp_245_cast_fu_1281_p1, ap_block_pp0_stage7, tmp_235_cast_fu_1340_p1, ap_block_pp0_stage8, tmp_246_cast_fu_1374_p1, ap_block_pp0_stage9, tmp_242_cast_fu_1408_p1, ap_block_pp0_stage10, tmp_232_cast_fu_1442_p1, ap_block_pp0_stage11, tmp_255_cast_fu_1489_p1, ap_block_pp0_stage12)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
                conv1_input_address0 <= tmp_255_cast_fu_1489_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                conv1_input_address0 <= tmp_232_cast_fu_1442_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                conv1_input_address0 <= tmp_242_cast_fu_1408_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                conv1_input_address0 <= tmp_246_cast_fu_1374_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                conv1_input_address0 <= tmp_235_cast_fu_1340_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                conv1_input_address0 <= tmp_245_cast_fu_1281_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                conv1_input_address0 <= tmp_234_cast_fu_1186_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                conv1_input_address0 <= tmp_249_cast_fu_1113_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                conv1_input_address0 <= tmp_233_cast_fu_1068_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                conv1_input_address0 <= tmp_248_cast_fu_967_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                conv1_input_address0 <= tmp_238_cast_fu_925_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv1_input_address0 <= tmp_247_cast_fu_828_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv1_input_address0 <= tmp_231_cast_fu_777_p1(10 - 1 downto 0);
            else 
                conv1_input_address0 <= "XXXXXXXXXX";
            end if;
        else 
            conv1_input_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv1_input_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, tmp_237_cast_fu_809_p1, ap_block_pp0_stage1, tmp_252_cast_fu_847_p1, ap_block_pp0_stage2, tmp_243_cast_fu_945_p1, ap_block_pp0_stage3, tmp_253_cast_fu_989_p1, ap_block_pp0_stage4, tmp_239_cast_fu_1078_p1, ap_block_pp0_stage5, tmp_254_cast_fu_1122_p1, ap_block_pp0_stage6, tmp_240_cast_fu_1196_p1, ap_block_pp0_stage7, tmp_250_cast_fu_1295_p1, ap_block_pp0_stage8, tmp_241_cast_fu_1344_p1, ap_block_pp0_stage9, tmp_251_cast_fu_1378_p1, ap_block_pp0_stage10, tmp_256_cast_fu_1412_p1, ap_block_pp0_stage11, tmp_244_cast_fu_1446_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                conv1_input_address1 <= tmp_244_cast_fu_1446_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                conv1_input_address1 <= tmp_256_cast_fu_1412_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                conv1_input_address1 <= tmp_251_cast_fu_1378_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                conv1_input_address1 <= tmp_241_cast_fu_1344_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                conv1_input_address1 <= tmp_250_cast_fu_1295_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                conv1_input_address1 <= tmp_240_cast_fu_1196_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                conv1_input_address1 <= tmp_254_cast_fu_1122_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                conv1_input_address1 <= tmp_239_cast_fu_1078_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                conv1_input_address1 <= tmp_253_cast_fu_989_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                conv1_input_address1 <= tmp_243_cast_fu_945_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv1_input_address1 <= tmp_252_cast_fu_847_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv1_input_address1 <= tmp_237_cast_fu_809_p1(10 - 1 downto 0);
            else 
                conv1_input_address1 <= "XXXXXXXXXX";
            end if;
        else 
            conv1_input_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv1_input_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            conv1_input_ce0 <= ap_const_logic_1;
        else 
            conv1_input_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_input_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            conv1_input_ce1 <= ap_const_logic_1;
        else 
            conv1_input_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_output_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, conv1_output_addr_reg_1618_pp0_iter3_reg, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, tmp_236_cast_fu_788_p1, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            conv1_output_address0 <= conv1_output_addr_reg_1618_pp0_iter3_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv1_output_address0 <= tmp_236_cast_fu_788_p1(11 - 1 downto 0);
        else 
            conv1_output_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    conv1_output_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            conv1_output_ce0 <= ap_const_logic_1;
        else 
            conv1_output_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv1_output_d0 <= grp_fu_502_p2;

    conv1_output_we0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, exitcond_flatten_reg_1569_pp0_iter3_reg, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (exitcond_flatten_reg_1569_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            conv1_output_we0 <= ap_const_logic_1;
        else 
            conv1_output_we0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond4_fu_600_p2 <= "1" when (channels_reg_452 = ap_const_lv2_3) else "0";
    exitcond_flatten_fu_664_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_468_p4 = ap_const_lv10_240) else "0";
    exitcond_fu_676_p2 <= "1" when (ap_phi_mux_column_1_phi_fu_491_p4 = ap_const_lv5_18) else "0";

    grp_fu_498_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, reg_525, reg_537, reg_547, reg_559, reg_571, reg_583, tmp6_reg_1818, tmp9_reg_1833, tmp19_reg_1878, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11, ap_block_pp0_stage12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_498_p0 <= tmp19_reg_1878;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_498_p0 <= tmp9_reg_1833;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_498_p0 <= tmp6_reg_1818;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            grp_fu_498_p0 <= reg_583;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_498_p0 <= reg_571;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            grp_fu_498_p0 <= reg_559;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_498_p0 <= reg_547;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            grp_fu_498_p0 <= reg_537;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_498_p0 <= reg_525;
        else 
            grp_fu_498_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_498_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, reg_531, reg_542, reg_547, reg_553, reg_559, reg_565, reg_577, reg_589, conv1_output_load_reg_1641, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11, ap_block_pp0_stage12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_498_p1 <= reg_589;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_498_p1 <= reg_559;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_498_p1 <= reg_547;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            grp_fu_498_p1 <= reg_577;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_498_p1 <= conv1_output_load_reg_1641;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            grp_fu_498_p1 <= reg_565;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_498_p1 <= reg_553;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            grp_fu_498_p1 <= reg_542;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_498_p1 <= reg_531;
        else 
            grp_fu_498_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_502_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, reg_525, reg_553, reg_571, reg_577, reg_583, reg_589, reg_595, tmp5_reg_1893, tmp7_reg_1918, tmp20_reg_1928, ap_enable_reg_pp0_iter2, tmp13_reg_1938, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11, ap_block_pp0_stage12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
            grp_fu_502_p0 <= tmp13_reg_1938;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_502_p0 <= tmp20_reg_1928;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            grp_fu_502_p0 <= tmp7_reg_1918;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_502_p0 <= reg_589;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_502_p0 <= reg_577;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_502_p0 <= tmp5_reg_1893;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            grp_fu_502_p0 <= reg_595;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_502_p0 <= reg_583;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_502_p0 <= reg_571;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_502_p0 <= reg_553;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
            grp_fu_502_p0 <= reg_525;
        else 
            grp_fu_502_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_502_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, reg_531, reg_565, tmp_40_reg_1559, tmp3_reg_1858, tmp_70_3_4_reg_1883, tmp24_reg_1888, tmp8_reg_1898, tmp15_reg_1903, tmp21_reg_1908, tmp2_reg_1913, tmp14_reg_1923, tmp1_reg_1933, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11, ap_block_pp0_stage12)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
            grp_fu_502_p1 <= tmp1_reg_1933;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_502_p1 <= tmp14_reg_1923;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            grp_fu_502_p1 <= tmp2_reg_1913;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_502_p1 <= tmp21_reg_1908;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_502_p1 <= tmp15_reg_1903;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_502_p1 <= tmp8_reg_1898;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_502_p1 <= tmp3_reg_1858;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_502_p1 <= tmp24_reg_1888;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_502_p1 <= tmp_70_3_4_reg_1883;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_502_p1 <= reg_565;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_502_p1 <= tmp_40_reg_1559;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
            grp_fu_502_p1 <= reg_531;
        else 
            grp_fu_502_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_507_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11, ap_block_pp0_stage12, tmp_42_fu_894_p5, tmp_47_fu_950_p5, tmp_50_fu_1083_p5, tmp_52_fu_1127_p5, tmp_54_fu_1201_p5, tmp_57_fu_1314_p5, tmp_59_fu_1348_p5, tmp_61_fu_1382_p5, tmp_64_fu_1416_p5, tmp_66_fu_1450_p5, tmp_46_fu_1476_p5, tmp_49_fu_1506_p5, tmp_63_fu_1532_p5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_507_p1 <= tmp_63_fu_1532_p5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_507_p1 <= tmp_49_fu_1506_p5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
            grp_fu_507_p1 <= tmp_46_fu_1476_p5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            grp_fu_507_p1 <= tmp_66_fu_1450_p5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            grp_fu_507_p1 <= tmp_64_fu_1416_p5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_507_p1 <= tmp_61_fu_1382_p5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_507_p1 <= tmp_59_fu_1348_p5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_507_p1 <= tmp_57_fu_1314_p5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_507_p1 <= tmp_54_fu_1201_p5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_507_p1 <= tmp_52_fu_1127_p5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_507_p1 <= tmp_50_fu_1083_p5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_507_p1 <= tmp_47_fu_950_p5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_507_p1 <= tmp_42_fu_894_p5;
        else 
            grp_fu_507_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_511_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11, ap_block_pp0_stage12, tmp_44_fu_907_p5, tmp_48_fu_972_p5, tmp_51_fu_1096_p5, tmp_53_fu_1140_p5, tmp_55_fu_1214_p5, tmp_58_fu_1327_p5, tmp_60_fu_1361_p5, tmp_62_fu_1395_p5, tmp_65_fu_1429_p5, tmp_67_fu_1463_p5, tmp_68_fu_1493_p5, tmp_56_fu_1519_p5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_511_p1 <= tmp_56_fu_1519_p5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
            grp_fu_511_p1 <= tmp_68_fu_1493_p5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            grp_fu_511_p1 <= tmp_67_fu_1463_p5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            grp_fu_511_p1 <= tmp_65_fu_1429_p5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_511_p1 <= tmp_62_fu_1395_p5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_511_p1 <= tmp_60_fu_1361_p5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_511_p1 <= tmp_58_fu_1327_p5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_511_p1 <= tmp_55_fu_1214_p5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_511_p1 <= tmp_53_fu_1140_p5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_511_p1 <= tmp_51_fu_1096_p5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_511_p1 <= tmp_48_fu_972_p5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_511_p1 <= tmp_44_fu_907_p5;
        else 
            grp_fu_511_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    indvar_flatten_next_fu_670_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_468_p4) + unsigned(ap_const_lv10_1));
    p_shl10_cast_fu_884_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_80_fu_876_p3),11));
    p_shl11_cast_fu_741_p3 <= (tmp_78_fu_737_p1 & ap_const_lv5_0);
    p_shl12_cast_fu_749_p3 <= (tmp_181_fu_732_p2 & ap_const_lv3_0);
    p_shl13_cast_fu_710_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_76_fu_702_p3),11));
    p_shl14_cast_fu_722_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_77_fu_714_p3),11));
    p_shl2_cast_fu_632_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_624_p3),8));
    p_shl3_cast_fu_1234_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_190_fu_1227_p3),11));
    p_shl4_cast_fu_1245_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_191_fu_1238_p3),11));
    p_shl5_cast_fu_1160_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_187_fu_1153_p3),11));
    p_shl6_cast_fu_1171_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_188_fu_1164_p3),11));
    p_shl7_cast_fu_1015_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_184_fu_1007_p3),11));
    p_shl8_cast_fu_1027_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_185_fu_1019_p3),11));
    p_shl9_cast_fu_872_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_79_fu_864_p3),11));
    p_shl_cast_fu_620_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_612_p3),8));
    row_1_3_fu_658_p2 <= std_logic_vector(unsigned(ap_phi_mux_row_1_phi_fu_479_p4) + unsigned(ap_const_lv5_1));
    row_4_mid1_fu_852_p2 <= std_logic_vector(unsigned(ap_const_lv5_2) + unsigned(row_1_reg_475));
    tmp_179_fu_636_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_620_p1) - unsigned(p_shl2_cast_fu_632_p1));
    tmp_180_fu_726_p2 <= std_logic_vector(unsigned(p_shl13_cast_fu_710_p1) - unsigned(p_shl14_cast_fu_722_p1));
    tmp_181_fu_732_p2 <= std_logic_vector(signed(tmp_211_cast_reg_1554) + signed(tmp_mid2_cast_fu_698_p1));
    tmp_182_fu_757_p2 <= std_logic_vector(unsigned(p_shl11_cast_fu_741_p3) - unsigned(p_shl12_cast_fu_749_p3));
    tmp_183_fu_888_p2 <= std_logic_vector(unsigned(p_shl9_cast_fu_872_p1) - unsigned(p_shl10_cast_fu_884_p1));
    tmp_184_fu_1007_p3 <= (tmp_66_2_mid2_v_fu_1001_p2 & ap_const_lv5_0);
    tmp_185_fu_1019_p3 <= (tmp_66_2_mid2_v_fu_1001_p2 & ap_const_lv2_0);
    tmp_186_fu_1031_p2 <= std_logic_vector(unsigned(p_shl7_cast_fu_1015_p1) - unsigned(p_shl8_cast_fu_1027_p1));
    tmp_187_fu_1153_p3 <= (tmp_66_3_mid2_v_reg_1714 & ap_const_lv5_0);
    tmp_188_fu_1164_p3 <= (tmp_66_3_mid2_v_reg_1714 & ap_const_lv2_0);
    tmp_189_fu_1175_p2 <= std_logic_vector(unsigned(p_shl5_cast_fu_1160_p1) - unsigned(p_shl6_cast_fu_1171_p1));
    tmp_190_fu_1227_p3 <= (tmp_66_4_mid2_v_reg_1720 & ap_const_lv5_0);
    tmp_191_fu_1238_p3 <= (tmp_66_4_mid2_v_reg_1720 & ap_const_lv2_0);
    tmp_192_fu_1249_p2 <= std_logic_vector(unsigned(p_shl3_cast_fu_1234_p1) - unsigned(p_shl4_cast_fu_1245_p1));
    tmp_193_fu_771_p2 <= std_logic_vector(unsigned(tmp_180_fu_726_p2) + unsigned(tmp_41_cast_fu_767_p1));
    tmp_194_fu_1255_p2 <= std_logic_vector(unsigned(tmp_183_reg_1672) + unsigned(tmp_41_cast_reg_1605));
    tmp_195_fu_1063_p2 <= std_logic_vector(unsigned(tmp_186_fu_1031_p2) + unsigned(tmp_41_cast_reg_1605));
    tmp_196_fu_1181_p2 <= std_logic_vector(unsigned(tmp_189_fu_1175_p2) + unsigned(tmp_41_cast_reg_1605));
    tmp_197_fu_1259_p2 <= std_logic_vector(unsigned(tmp_192_fu_1249_p2) + unsigned(tmp_41_cast_reg_1605));
    tmp_198_fu_782_p2 <= std_logic_vector(unsigned(tmp_182_fu_757_p2) + unsigned(tmp_41_cast1_fu_763_p1));
    tmp_199_fu_803_p2 <= std_logic_vector(unsigned(tmp_180_fu_726_p2) + unsigned(tmp_69_0_1_cast_fu_799_p1));
    tmp_200_fu_920_p2 <= std_logic_vector(unsigned(tmp_183_fu_888_p2) + unsigned(tmp_69_0_1_cast_reg_1628));
    tmp_201_fu_1073_p2 <= std_logic_vector(unsigned(tmp_186_fu_1031_p2) + unsigned(tmp_69_0_1_cast_reg_1628));
    tmp_202_fu_1191_p2 <= std_logic_vector(unsigned(tmp_189_fu_1175_p2) + unsigned(tmp_69_0_1_cast_reg_1628));
    tmp_203_fu_1264_p2 <= std_logic_vector(unsigned(tmp_192_fu_1249_p2) + unsigned(tmp_69_0_1_cast_reg_1628));
    tmp_204_fu_1269_p2 <= std_logic_vector(unsigned(tmp_180_reg_1598) + unsigned(tmp_69_0_2_cast_reg_1684));
    tmp_205_fu_939_p2 <= std_logic_vector(unsigned(tmp_183_fu_888_p2) + unsigned(tmp_69_0_2_cast_fu_935_p1));
    tmp_206_fu_1273_p2 <= std_logic_vector(unsigned(tmp_186_reg_1707) + unsigned(tmp_69_0_2_cast_reg_1684));
    tmp_207_fu_1277_p2 <= std_logic_vector(unsigned(tmp_189_reg_1746) + unsigned(tmp_69_0_2_cast_reg_1684));
    tmp_208_fu_1286_p2 <= std_logic_vector(unsigned(tmp_192_fu_1249_p2) + unsigned(tmp_69_0_2_cast_reg_1684));
    tmp_209_fu_823_p2 <= std_logic_vector(unsigned(tmp_180_reg_1598) + unsigned(tmp_69_0_3_cast_fu_819_p1));
    tmp_210_fu_963_p2 <= std_logic_vector(unsigned(tmp_183_reg_1672) + unsigned(tmp_69_0_3_cast_reg_1646));
        tmp_211_cast_fu_642_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_179_fu_636_p2),9));

    tmp_211_fu_1109_p2 <= std_logic_vector(unsigned(tmp_186_reg_1707) + unsigned(tmp_69_0_3_cast_reg_1646));
    tmp_212_fu_1291_p2 <= std_logic_vector(unsigned(tmp_189_reg_1746) + unsigned(tmp_69_0_3_cast_reg_1646));
    tmp_213_fu_1300_p2 <= std_logic_vector(unsigned(tmp_192_fu_1249_p2) + unsigned(tmp_69_0_3_cast_reg_1646));
    tmp_214_fu_842_p2 <= std_logic_vector(unsigned(tmp_180_reg_1598) + unsigned(tmp_69_0_4_cast_fu_838_p1));
    tmp_215_fu_985_p2 <= std_logic_vector(unsigned(tmp_183_reg_1672) + unsigned(tmp_69_0_4_cast_reg_1659));
    tmp_216_fu_1118_p2 <= std_logic_vector(unsigned(tmp_186_reg_1707) + unsigned(tmp_69_0_4_cast_reg_1659));
    tmp_217_fu_1305_p2 <= std_logic_vector(unsigned(tmp_189_reg_1746) + unsigned(tmp_69_0_4_cast_reg_1659));
    tmp_218_fu_1309_p2 <= std_logic_vector(unsigned(tmp_192_fu_1249_p2) + unsigned(tmp_69_0_4_cast_reg_1659));
    tmp_231_cast_fu_777_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_193_fu_771_p2),64));
    tmp_232_cast_fu_1442_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_194_reg_1763),64));
        tmp_233_cast_fu_1068_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_195_fu_1063_p2),64));

        tmp_234_cast_fu_1186_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_196_fu_1181_p2),64));

        tmp_235_cast_fu_1340_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_197_reg_1768),64));

    tmp_236_cast_fu_788_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_198_fu_782_p2),64));
    tmp_237_cast_fu_809_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_199_fu_803_p2),64));
    tmp_238_cast_fu_925_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_200_fu_920_p2),64));
        tmp_239_cast_fu_1078_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_201_fu_1073_p2),64));

        tmp_240_cast_fu_1196_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_202_fu_1191_p2),64));

        tmp_241_cast_fu_1344_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_203_reg_1773),64));

    tmp_242_cast_fu_1408_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_204_reg_1778),64));
    tmp_243_cast_fu_945_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_205_fu_939_p2),64));
        tmp_244_cast_fu_1446_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_206_reg_1783),64));

        tmp_245_cast_fu_1281_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_207_fu_1277_p2),64));

        tmp_246_cast_fu_1374_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_208_reg_1793),64));

    tmp_247_cast_fu_828_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_209_fu_823_p2),64));
    tmp_248_cast_fu_967_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_210_fu_963_p2),64));
        tmp_249_cast_fu_1113_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_211_fu_1109_p2),64));

        tmp_250_cast_fu_1295_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_212_fu_1291_p2),64));

        tmp_251_cast_fu_1378_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_213_reg_1803),64));

    tmp_252_cast_fu_847_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_214_fu_842_p2),64));
    tmp_253_cast_fu_989_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_215_fu_985_p2),64));
        tmp_254_cast_fu_1122_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_216_fu_1118_p2),64));

        tmp_255_cast_fu_1489_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_217_reg_1808),64));

        tmp_256_cast_fu_1412_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_218_reg_1813),64));

    tmp_41_cast1_fu_763_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(column_mid2_fu_682_p3),12));
    tmp_41_cast_fu_767_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(column_mid2_fu_682_p3),11));
    tmp_66_1_mid2_fu_858_p3 <= 
        row_4_mid1_fu_852_p2 when (exitcond_reg_1578(0) = '1') else 
        row_1_3_reg_1564;
    tmp_66_2_mid2_v_fu_1001_p2 <= std_logic_vector(unsigned(row_1_reg_475) + unsigned(tmp_66_2_mid2_v_v_ca_fu_994_p3));
    tmp_66_2_mid2_v_v_ca_fu_994_p3 <= 
        ap_const_lv5_3 when (exitcond_reg_1578(0) = '1') else 
        ap_const_lv5_2;
    tmp_66_3_mid2_v_fu_1044_p2 <= std_logic_vector(unsigned(row_1_reg_475) + unsigned(tmp_66_3_mid2_v_v_ca_fu_1037_p3));
    tmp_66_3_mid2_v_v_ca_fu_1037_p3 <= 
        ap_const_lv5_4 when (exitcond_reg_1578(0) = '1') else 
        ap_const_lv5_3;
    tmp_66_4_mid2_v_fu_1057_p2 <= std_logic_vector(unsigned(row_1_reg_475) + unsigned(tmp_66_4_mid2_v_v_ca_fu_1050_p3));
    tmp_66_4_mid2_v_v_ca_fu_1050_p3 <= 
        ap_const_lv5_5 when (exitcond_reg_1578(0) = '1') else 
        ap_const_lv5_4;
    tmp_68_0_2_fu_930_p2 <= std_logic_vector(unsigned(ap_const_lv5_2) + unsigned(column_mid2_reg_1586));
    tmp_68_0_3_fu_814_p2 <= std_logic_vector(unsigned(ap_const_lv5_3) + unsigned(column_mid2_reg_1586));
    tmp_68_0_4_fu_833_p2 <= std_logic_vector(unsigned(ap_const_lv5_4) + unsigned(column_mid2_reg_1586));
    tmp_69_0_1_cast_fu_799_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(column_1_3_fu_793_p2),11));
    tmp_69_0_2_cast_fu_935_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_68_0_2_fu_930_p2),11));
    tmp_69_0_3_cast_fu_819_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_68_0_3_fu_814_p2),11));
    tmp_69_0_4_cast_fu_838_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_68_0_4_fu_833_p2),11));
    tmp_76_fu_702_p3 <= (tmp_mid2_fu_690_p3 & ap_const_lv5_0);
    tmp_77_fu_714_p3 <= (tmp_mid2_fu_690_p3 & ap_const_lv2_0);
    tmp_78_fu_737_p1 <= tmp_181_fu_732_p2(7 - 1 downto 0);
    tmp_79_fu_864_p3 <= (tmp_66_1_mid2_fu_858_p3 & ap_const_lv5_0);
    tmp_80_fu_876_p3 <= (tmp_66_1_mid2_fu_858_p3 & ap_const_lv2_0);
    tmp_fu_612_p3 <= (channels_reg_452 & ap_const_lv5_0);
    tmp_mid2_cast_fu_698_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_mid2_fu_690_p3),9));
    tmp_mid2_fu_690_p3 <= 
        row_1_3_fu_658_p2 when (exitcond_fu_676_p2(0) = '1') else 
        ap_phi_mux_row_1_phi_fu_479_p4;
    tmp_s_fu_624_p3 <= (channels_reg_452 & ap_const_lv3_0);
end behav;
