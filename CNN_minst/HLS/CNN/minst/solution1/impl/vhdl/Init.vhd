-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Init is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    data_ce0 : OUT STD_LOGIC;
    data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv1_input_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    conv1_input_ce0 : OUT STD_LOGIC;
    conv1_input_we0 : OUT STD_LOGIC;
    conv1_input_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv1_output_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    conv1_output_ce0 : OUT STD_LOGIC;
    conv1_output_we0 : OUT STD_LOGIC;
    conv1_output_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pool1_output_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    pool1_output_ce0 : OUT STD_LOGIC;
    pool1_output_we0 : OUT STD_LOGIC;
    pool1_output_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv2_output_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    conv2_output_ce0 : OUT STD_LOGIC;
    conv2_output_we0 : OUT STD_LOGIC;
    conv2_output_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    pool2_output_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    pool2_output_ce0 : OUT STD_LOGIC;
    pool2_output_we0 : OUT STD_LOGIC;
    pool2_output_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    flatten_output_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    flatten_output_ce0 : OUT STD_LOGIC;
    flatten_output_we0 : OUT STD_LOGIC;
    flatten_output_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    fc1_output_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    fc1_output_ce0 : OUT STD_LOGIC;
    fc1_output_we0 : OUT STD_LOGIC;
    fc1_output_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    fc2_output_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    fc2_output_ce0 : OUT STD_LOGIC;
    fc2_output_we0 : OUT STD_LOGIC;
    fc2_output_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of Init is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (18 downto 0) := "0000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (18 downto 0) := "0000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (18 downto 0) := "0000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (18 downto 0) := "0000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (18 downto 0) := "0000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (18 downto 0) := "0001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (18 downto 0) := "0010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (18 downto 0) := "0100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (18 downto 0) := "1000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv7_50 : STD_LOGIC_VECTOR (6 downto 0) := "1010000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv6_32 : STD_LOGIC_VECTOR (5 downto 0) := "110010";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i_3_fu_434_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_3_reg_946 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_30_fu_464_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_30_reg_951 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond16_fu_428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_3_fu_476_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_3_reg_959 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_42_cast_fu_491_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_cast_reg_964 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond15_fu_470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal channels_3_fu_502_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal channels_3_reg_977 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_41_cast_fu_538_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_41_cast_reg_982 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond14_fu_496_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_4_fu_548_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_4_reg_990 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_40_fu_583_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_40_reg_995 : STD_LOGIC_VECTOR (11 downto 0);
    signal exitcond13_fu_542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_4_fu_595_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal channels_4_fu_621_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal channels_4_reg_1011 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_45_cast_fu_657_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_45_cast_reg_1016 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond11_fu_615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_5_fu_667_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_5_reg_1024 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal tmp_43_fu_702_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_43_reg_1029 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond10_fu_661_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_5_fu_714_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal channels_5_fu_740_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal channels_5_reg_1045 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal tmp_51_cast_fu_754_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_51_cast_reg_1050 : STD_LOGIC_VECTOR (6 downto 0);
    signal exitcond8_fu_734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_7_fu_764_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_7_reg_1058 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal tmp_61_cast_fu_779_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_61_cast_reg_1063 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond7_fu_758_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_6_fu_793_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal channels_6_fu_819_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal channels_6_reg_1079 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal tmp_58_cast_fu_833_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_58_cast_reg_1084 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond5_fu_813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_9_fu_843_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_9_reg_1092 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal tmp_65_cast_fu_858_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_65_cast_reg_1097 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond4_fu_837_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_7_fu_872_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal i_6_fu_898_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal i_8_fu_915_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal i_11_fu_932_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal i_reg_241 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_reg_252 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal channels_reg_263 : STD_LOGIC_VECTOR (1 downto 0);
    signal i1_reg_274 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond12_fu_589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j2_reg_285 : STD_LOGIC_VECTOR (4 downto 0);
    signal channels3_reg_296 : STD_LOGIC_VECTOR (1 downto 0);
    signal i4_reg_307 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond9_fu_708_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j5_reg_318 : STD_LOGIC_VECTOR (3 downto 0);
    signal channels6_reg_329 : STD_LOGIC_VECTOR (2 downto 0);
    signal i7_reg_340 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond6_fu_787_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j8_reg_351 : STD_LOGIC_VECTOR (3 downto 0);
    signal channels9_reg_362 : STD_LOGIC_VECTOR (2 downto 0);
    signal i8_reg_373 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond3_fu_866_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j7_reg_384 : STD_LOGIC_VECTOR (2 downto 0);
    signal i6_reg_395 : STD_LOGIC_VECTOR (6 downto 0);
    signal exitcond2_fu_892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i9_reg_406 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond1_fu_909_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i10_reg_417 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond_fu_926_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_cast_fu_610_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_62_cast_fu_729_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_66_cast_fu_808_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_67_cast_fu_887_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_fu_904_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_fu_921_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_31_fu_938_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_440_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_s_fu_452_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl_cast_fu_448_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl1_cast_fu_460_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_cast_fu_482_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_35_fu_486_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_32_fu_508_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_33_fu_520_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl2_cast_fu_516_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl3_cast_fu_528_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_34_fu_532_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_21_cast_fu_554_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_39_fu_558_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_11_fu_563_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl4_cast_fu_567_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl5_cast_fu_575_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_23_cast_fu_601_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_44_fu_605_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_36_fu_627_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_37_fu_639_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl6_cast_fu_635_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl7_cast_fu_647_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_38_fu_651_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_22_cast_fu_673_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_42_fu_677_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_682_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl8_cast_fu_686_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl9_cast_fu_694_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_25_cast_fu_720_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_47_fu_724_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_41_fu_746_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_24_cast_fu_770_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_46_fu_774_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_28_cast_fu_799_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_49_fu_803_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_45_fu_825_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_27_cast_fu_849_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_48_fu_853_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_30_cast_fu_878_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_50_fu_882_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (18 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    channels3_reg_296_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond14_fu_496_p2 = ap_const_lv1_1))) then 
                channels3_reg_296 <= ap_const_lv2_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond10_fu_661_p2 = ap_const_lv1_1))) then 
                channels3_reg_296 <= channels_4_reg_1011;
            end if; 
        end if;
    end process;

    channels6_reg_329_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond11_fu_615_p2 = ap_const_lv1_1))) then 
                channels6_reg_329 <= ap_const_lv3_0;
            elsif (((exitcond7_fu_758_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                channels6_reg_329 <= channels_5_reg_1045;
            end if; 
        end if;
    end process;

    channels9_reg_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (exitcond8_fu_734_p2 = ap_const_lv1_1))) then 
                channels9_reg_362 <= ap_const_lv3_0;
            elsif (((exitcond4_fu_837_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                channels9_reg_362 <= channels_6_reg_1079;
            end if; 
        end if;
    end process;

    channels_reg_263_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond16_fu_428_p2 = ap_const_lv1_1))) then 
                channels_reg_263 <= ap_const_lv2_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond13_fu_542_p2 = ap_const_lv1_1))) then 
                channels_reg_263 <= channels_3_reg_977;
            end if; 
        end if;
    end process;

    i10_reg_417_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_fu_909_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                i10_reg_417 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (exitcond_fu_926_p2 = ap_const_lv1_0))) then 
                i10_reg_417 <= i_11_fu_932_p2;
            end if; 
        end if;
    end process;

    i1_reg_274_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond12_fu_589_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                i1_reg_274 <= i_4_reg_990;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond14_fu_496_p2 = ap_const_lv1_0))) then 
                i1_reg_274 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    i4_reg_307_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond9_fu_708_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                i4_reg_307 <= i_5_reg_1024;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond11_fu_615_p2 = ap_const_lv1_0))) then 
                i4_reg_307 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i6_reg_395_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond5_fu_813_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                i6_reg_395 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond2_fu_892_p2 = ap_const_lv1_0))) then 
                i6_reg_395 <= i_6_fu_898_p2;
            end if; 
        end if;
    end process;

    i7_reg_340_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond6_fu_787_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                i7_reg_340 <= i_7_reg_1058;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (exitcond8_fu_734_p2 = ap_const_lv1_0))) then 
                i7_reg_340 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i8_reg_373_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_fu_866_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                i8_reg_373 <= i_9_reg_1092;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (exitcond5_fu_813_p2 = ap_const_lv1_0))) then 
                i8_reg_373 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i9_reg_406_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_fu_892_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                i9_reg_406 <= ap_const_lv6_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state18) and (exitcond1_fu_909_p2 = ap_const_lv1_0))) then 
                i9_reg_406 <= i_8_fu_915_p2;
            end if; 
        end if;
    end process;

    i_reg_241_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond15_fu_470_p2 = ap_const_lv1_1))) then 
                i_reg_241 <= i_3_reg_946;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_241 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    j2_reg_285_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond13_fu_542_p2 = ap_const_lv1_0))) then 
                j2_reg_285 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond12_fu_589_p2 = ap_const_lv1_0))) then 
                j2_reg_285 <= j_4_fu_595_p2;
            end if; 
        end if;
    end process;

    j5_reg_318_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond10_fu_661_p2 = ap_const_lv1_0))) then 
                j5_reg_318 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (exitcond9_fu_708_p2 = ap_const_lv1_0))) then 
                j5_reg_318 <= j_5_fu_714_p2;
            end if; 
        end if;
    end process;

    j7_reg_384_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) and (exitcond4_fu_837_p2 = ap_const_lv1_0))) then 
                j7_reg_384 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (exitcond3_fu_866_p2 = ap_const_lv1_0))) then 
                j7_reg_384 <= j_7_fu_872_p2;
            end if; 
        end if;
    end process;

    j8_reg_351_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond7_fu_758_p2 = ap_const_lv1_0))) then 
                j8_reg_351 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond6_fu_787_p2 = ap_const_lv1_0))) then 
                j8_reg_351 <= j_6_fu_793_p2;
            end if; 
        end if;
    end process;

    j_reg_252_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond16_fu_428_p2 = ap_const_lv1_0))) then 
                j_reg_252 <= ap_const_lv5_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                j_reg_252 <= j_3_reg_959;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                channels_3_reg_977 <= channels_3_fu_502_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                channels_4_reg_1011 <= channels_4_fu_621_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                channels_5_reg_1045 <= channels_5_fu_740_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                channels_6_reg_1079 <= channels_6_fu_819_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_3_reg_946 <= i_3_fu_434_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                i_4_reg_990 <= i_4_fu_548_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                i_5_reg_1024 <= i_5_fu_667_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                i_7_reg_1058 <= i_7_fu_764_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                i_9_reg_1092 <= i_9_fu_843_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                j_3_reg_959 <= j_3_fu_476_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond16_fu_428_p2 = ap_const_lv1_0))) then
                    tmp_30_reg_951(10 downto 2) <= tmp_30_fu_464_p2(10 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond13_fu_542_p2 = ap_const_lv1_0))) then
                    tmp_40_reg_995(11 downto 3) <= tmp_40_fu_583_p2(11 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond14_fu_496_p2 = ap_const_lv1_0))) then
                    tmp_41_cast_reg_982(8 downto 3) <= tmp_41_cast_fu_538_p1(8 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond15_fu_470_p2 = ap_const_lv1_0))) then
                tmp_42_cast_reg_964 <= tmp_42_cast_fu_491_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond10_fu_661_p2 = ap_const_lv1_0))) then
                    tmp_43_reg_1029(9 downto 2) <= tmp_43_fu_702_p2(9 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond11_fu_615_p2 = ap_const_lv1_0))) then
                    tmp_45_cast_reg_1016(7 downto 2) <= tmp_45_cast_fu_657_p1(7 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (exitcond8_fu_734_p2 = ap_const_lv1_0))) then
                    tmp_51_cast_reg_1050(5 downto 3) <= tmp_51_cast_fu_754_p1(5 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (exitcond5_fu_813_p2 = ap_const_lv1_0))) then
                    tmp_58_cast_reg_1084(4 downto 2) <= tmp_58_cast_fu_833_p1(4 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond7_fu_758_p2 = ap_const_lv1_0))) then
                    tmp_61_cast_reg_1063(9 downto 3) <= tmp_61_cast_fu_779_p3(9 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) and (exitcond4_fu_837_p2 = ap_const_lv1_0))) then
                    tmp_65_cast_reg_1097(7 downto 2) <= tmp_65_cast_fu_858_p3(7 downto 2);
            end if;
        end if;
    end process;
    tmp_30_reg_951(1 downto 0) <= "00";
    tmp_41_cast_reg_982(2 downto 0) <= "000";
    tmp_40_reg_995(2 downto 0) <= "000";
    tmp_45_cast_reg_1016(1 downto 0) <= "00";
    tmp_43_reg_1029(1 downto 0) <= "00";
    tmp_51_cast_reg_1050(2 downto 0) <= "000";
    tmp_51_cast_reg_1050(6) <= '0';
    tmp_61_cast_reg_1063(2 downto 0) <= "000";
    tmp_58_cast_reg_1084(1 downto 0) <= "00";
    tmp_58_cast_reg_1084(5) <= '0';
    tmp_65_cast_reg_1097(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond16_fu_428_p2, ap_CS_fsm_state3, exitcond15_fu_470_p2, ap_CS_fsm_state5, exitcond14_fu_496_p2, ap_CS_fsm_state6, exitcond13_fu_542_p2, ap_CS_fsm_state7, ap_CS_fsm_state8, exitcond11_fu_615_p2, ap_CS_fsm_state9, exitcond10_fu_661_p2, ap_CS_fsm_state10, ap_CS_fsm_state11, exitcond8_fu_734_p2, ap_CS_fsm_state12, exitcond7_fu_758_p2, ap_CS_fsm_state13, ap_CS_fsm_state14, exitcond5_fu_813_p2, ap_CS_fsm_state15, exitcond4_fu_837_p2, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, exitcond12_fu_589_p2, exitcond9_fu_708_p2, exitcond6_fu_787_p2, exitcond3_fu_866_p2, exitcond2_fu_892_p2, exitcond1_fu_909_p2, exitcond_fu_926_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond16_fu_428_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond15_fu_470_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond14_fu_496_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond13_fu_542_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                if (((exitcond12_fu_589_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond11_fu_615_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond10_fu_661_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                if (((exitcond9_fu_708_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (exitcond8_fu_734_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                if (((exitcond7_fu_758_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state13 => 
                if (((exitcond6_fu_787_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                if (((exitcond5_fu_813_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state15 => 
                if (((exitcond4_fu_837_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state16 => 
                if (((exitcond3_fu_866_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                if (((exitcond2_fu_892_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                if (((exitcond1_fu_909_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                if (((exitcond_fu_926_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state19, exitcond_fu_926_p2)
    begin
        if ((((exitcond_fu_926_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state19, exitcond_fu_926_p2)
    begin
        if (((exitcond_fu_926_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    channels_3_fu_502_p2 <= std_logic_vector(unsigned(channels_reg_263) + unsigned(ap_const_lv2_1));
    channels_4_fu_621_p2 <= std_logic_vector(unsigned(channels3_reg_296) + unsigned(ap_const_lv2_1));
    channels_5_fu_740_p2 <= std_logic_vector(unsigned(channels6_reg_329) + unsigned(ap_const_lv3_1));
    channels_6_fu_819_p2 <= std_logic_vector(unsigned(channels9_reg_362) + unsigned(ap_const_lv3_1));
    conv1_input_address0 <= tmp_42_cast_reg_964(10 - 1 downto 0);

    conv1_input_ce0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            conv1_input_ce0 <= ap_const_logic_1;
        else 
            conv1_input_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv1_input_d0 <= data_q0;

    conv1_input_we0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            conv1_input_we0 <= ap_const_logic_1;
        else 
            conv1_input_we0 <= ap_const_logic_0;
        end if; 
    end process;

    conv1_output_address0 <= tmp_56_cast_fu_610_p1(11 - 1 downto 0);

    conv1_output_ce0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            conv1_output_ce0 <= ap_const_logic_1;
        else 
            conv1_output_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv1_output_d0 <= ap_const_lv32_0;

    conv1_output_we0_assign_proc : process(ap_CS_fsm_state7, exitcond12_fu_589_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond12_fu_589_p2 = ap_const_lv1_0))) then 
            conv1_output_we0 <= ap_const_logic_1;
        else 
            conv1_output_we0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_output_address0 <= tmp_66_cast_fu_808_p1(9 - 1 downto 0);

    conv2_output_ce0_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            conv2_output_ce0 <= ap_const_logic_1;
        else 
            conv2_output_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv2_output_d0 <= ap_const_lv32_0;

    conv2_output_we0_assign_proc : process(ap_CS_fsm_state13, exitcond6_fu_787_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond6_fu_787_p2 = ap_const_lv1_0))) then 
            conv2_output_we0 <= ap_const_logic_1;
        else 
            conv2_output_we0 <= ap_const_logic_0;
        end if; 
    end process;

    data_address0 <= tmp_42_cast_fu_491_p1(10 - 1 downto 0);

    data_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            data_ce0 <= ap_const_logic_1;
        else 
            data_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond10_fu_661_p2 <= "1" when (i4_reg_307 = ap_const_lv4_C) else "0";
    exitcond11_fu_615_p2 <= "1" when (channels3_reg_296 = ap_const_lv2_3) else "0";
    exitcond12_fu_589_p2 <= "1" when (j2_reg_285 = ap_const_lv5_18) else "0";
    exitcond13_fu_542_p2 <= "1" when (i1_reg_274 = ap_const_lv5_18) else "0";
    exitcond14_fu_496_p2 <= "1" when (channels_reg_263 = ap_const_lv2_3) else "0";
    exitcond15_fu_470_p2 <= "1" when (j_reg_252 = ap_const_lv5_1C) else "0";
    exitcond16_fu_428_p2 <= "1" when (i_reg_241 = ap_const_lv5_1C) else "0";
    exitcond1_fu_909_p2 <= "1" when (i9_reg_406 = ap_const_lv6_32) else "0";
    exitcond2_fu_892_p2 <= "1" when (i6_reg_395 = ap_const_lv7_50) else "0";
    exitcond3_fu_866_p2 <= "1" when (j7_reg_384 = ap_const_lv3_4) else "0";
    exitcond4_fu_837_p2 <= "1" when (i8_reg_373 = ap_const_lv3_4) else "0";
    exitcond5_fu_813_p2 <= "1" when (channels9_reg_362 = ap_const_lv3_5) else "0";
    exitcond6_fu_787_p2 <= "1" when (j8_reg_351 = ap_const_lv4_8) else "0";
    exitcond7_fu_758_p2 <= "1" when (i7_reg_340 = ap_const_lv4_8) else "0";
    exitcond8_fu_734_p2 <= "1" when (channels6_reg_329 = ap_const_lv3_5) else "0";
    exitcond9_fu_708_p2 <= "1" when (j5_reg_318 = ap_const_lv4_C) else "0";
    exitcond_fu_926_p2 <= "1" when (i10_reg_417 = ap_const_lv4_A) else "0";
    fc1_output_address0 <= tmp_29_fu_921_p1(6 - 1 downto 0);

    fc1_output_ce0_assign_proc : process(ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            fc1_output_ce0 <= ap_const_logic_1;
        else 
            fc1_output_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    fc1_output_d0 <= ap_const_lv32_0;

    fc1_output_we0_assign_proc : process(ap_CS_fsm_state18, exitcond1_fu_909_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) and (exitcond1_fu_909_p2 = ap_const_lv1_0))) then 
            fc1_output_we0 <= ap_const_logic_1;
        else 
            fc1_output_we0 <= ap_const_logic_0;
        end if; 
    end process;

    fc2_output_address0 <= tmp_31_fu_938_p1(4 - 1 downto 0);

    fc2_output_ce0_assign_proc : process(ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            fc2_output_ce0 <= ap_const_logic_1;
        else 
            fc2_output_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    fc2_output_d0 <= ap_const_lv32_0;

    fc2_output_we0_assign_proc : process(ap_CS_fsm_state19, exitcond_fu_926_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) and (exitcond_fu_926_p2 = ap_const_lv1_0))) then 
            fc2_output_we0 <= ap_const_logic_1;
        else 
            fc2_output_we0 <= ap_const_logic_0;
        end if; 
    end process;

    flatten_output_address0 <= tmp_26_fu_904_p1(7 - 1 downto 0);

    flatten_output_ce0_assign_proc : process(ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            flatten_output_ce0 <= ap_const_logic_1;
        else 
            flatten_output_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    flatten_output_d0 <= ap_const_lv32_0;

    flatten_output_we0_assign_proc : process(ap_CS_fsm_state17, exitcond2_fu_892_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond2_fu_892_p2 = ap_const_lv1_0))) then 
            flatten_output_we0 <= ap_const_logic_1;
        else 
            flatten_output_we0 <= ap_const_logic_0;
        end if; 
    end process;

    i_11_fu_932_p2 <= std_logic_vector(unsigned(i10_reg_417) + unsigned(ap_const_lv4_1));
    i_3_fu_434_p2 <= std_logic_vector(unsigned(i_reg_241) + unsigned(ap_const_lv5_1));
    i_4_fu_548_p2 <= std_logic_vector(unsigned(i1_reg_274) + unsigned(ap_const_lv5_1));
    i_5_fu_667_p2 <= std_logic_vector(unsigned(i4_reg_307) + unsigned(ap_const_lv4_1));
    i_6_fu_898_p2 <= std_logic_vector(unsigned(i6_reg_395) + unsigned(ap_const_lv7_1));
    i_7_fu_764_p2 <= std_logic_vector(unsigned(i7_reg_340) + unsigned(ap_const_lv4_1));
    i_8_fu_915_p2 <= std_logic_vector(unsigned(i9_reg_406) + unsigned(ap_const_lv6_1));
    i_9_fu_843_p2 <= std_logic_vector(unsigned(i8_reg_373) + unsigned(ap_const_lv3_1));
    j_3_fu_476_p2 <= std_logic_vector(unsigned(j_reg_252) + unsigned(ap_const_lv5_1));
    j_4_fu_595_p2 <= std_logic_vector(unsigned(j2_reg_285) + unsigned(ap_const_lv5_1));
    j_5_fu_714_p2 <= std_logic_vector(unsigned(j5_reg_318) + unsigned(ap_const_lv4_1));
    j_6_fu_793_p2 <= std_logic_vector(unsigned(j8_reg_351) + unsigned(ap_const_lv4_1));
    j_7_fu_872_p2 <= std_logic_vector(unsigned(j7_reg_384) + unsigned(ap_const_lv3_1));
    p_shl1_cast_fu_460_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_452_p3),11));
    p_shl2_cast_fu_516_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_32_fu_508_p3),8));
    p_shl3_cast_fu_528_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_fu_520_p3),8));
    p_shl4_cast_fu_567_p3 <= (tmp_11_fu_563_p1 & ap_const_lv5_0);
    p_shl5_cast_fu_575_p3 <= (tmp_39_fu_558_p2 & ap_const_lv3_0);
    p_shl6_cast_fu_635_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_36_fu_627_p3),7));
    p_shl7_cast_fu_647_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_37_fu_639_p3),7));
    p_shl8_cast_fu_686_p3 <= (tmp_12_fu_682_p1 & ap_const_lv4_0);
    p_shl9_cast_fu_694_p3 <= (tmp_42_fu_677_p2 & ap_const_lv2_0);
    p_shl_cast_fu_448_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_440_p3),11));
    pool1_output_address0 <= tmp_62_cast_fu_729_p1(9 - 1 downto 0);

    pool1_output_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            pool1_output_ce0 <= ap_const_logic_1;
        else 
            pool1_output_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pool1_output_d0 <= ap_const_lv32_0;

    pool1_output_we0_assign_proc : process(ap_CS_fsm_state10, exitcond9_fu_708_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (exitcond9_fu_708_p2 = ap_const_lv1_0))) then 
            pool1_output_we0 <= ap_const_logic_1;
        else 
            pool1_output_we0 <= ap_const_logic_0;
        end if; 
    end process;

    pool2_output_address0 <= tmp_67_cast_fu_887_p1(7 - 1 downto 0);

    pool2_output_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            pool2_output_ce0 <= ap_const_logic_1;
        else 
            pool2_output_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pool2_output_d0 <= ap_const_lv32_0;

    pool2_output_we0_assign_proc : process(ap_CS_fsm_state16, exitcond3_fu_866_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (exitcond3_fu_866_p2 = ap_const_lv1_0))) then 
            pool2_output_we0 <= ap_const_logic_1;
        else 
            pool2_output_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_11_fu_563_p1 <= tmp_39_fu_558_p2(7 - 1 downto 0);
    tmp_12_fu_682_p1 <= tmp_42_fu_677_p2(6 - 1 downto 0);
    tmp_21_cast_fu_554_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i1_reg_274),9));
    tmp_22_cast_fu_673_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i4_reg_307),8));
    tmp_23_cast_fu_601_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j2_reg_285),12));
    tmp_24_cast_fu_770_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i7_reg_340),7));
    tmp_25_cast_fu_720_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j5_reg_318),10));
    tmp_26_fu_904_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i6_reg_395),64));
    tmp_27_cast_fu_849_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i8_reg_373),6));
    tmp_28_cast_fu_799_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j8_reg_351),10));
    tmp_29_fu_921_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i9_reg_406),64));
    tmp_30_cast_fu_878_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j7_reg_384),8));
    tmp_30_fu_464_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_448_p1) - unsigned(p_shl1_cast_fu_460_p1));
    tmp_31_fu_938_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i10_reg_417),64));
    tmp_32_fu_508_p3 <= (channels_reg_263 & ap_const_lv5_0);
    tmp_33_fu_520_p3 <= (channels_reg_263 & ap_const_lv3_0);
    tmp_34_fu_532_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_516_p1) - unsigned(p_shl3_cast_fu_528_p1));
    tmp_35_fu_486_p2 <= std_logic_vector(unsigned(tmp_30_reg_951) + unsigned(tmp_cast_fu_482_p1));
    tmp_36_fu_627_p3 <= (channels3_reg_296 & ap_const_lv4_0);
    tmp_37_fu_639_p3 <= (channels3_reg_296 & ap_const_lv2_0);
    tmp_38_fu_651_p2 <= std_logic_vector(unsigned(p_shl6_cast_fu_635_p1) - unsigned(p_shl7_cast_fu_647_p1));
    tmp_39_fu_558_p2 <= std_logic_vector(unsigned(tmp_21_cast_fu_554_p1) + unsigned(tmp_41_cast_reg_982));
    tmp_40_fu_583_p2 <= std_logic_vector(unsigned(p_shl4_cast_fu_567_p3) - unsigned(p_shl5_cast_fu_575_p3));
        tmp_41_cast_fu_538_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_34_fu_532_p2),9));

    tmp_41_fu_746_p3 <= (channels6_reg_329 & ap_const_lv3_0);
        tmp_42_cast_fu_491_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_35_fu_486_p2),64));

    tmp_42_fu_677_p2 <= std_logic_vector(unsigned(tmp_22_cast_fu_673_p1) + unsigned(tmp_45_cast_reg_1016));
    tmp_43_fu_702_p2 <= std_logic_vector(unsigned(p_shl8_cast_fu_686_p3) - unsigned(p_shl9_cast_fu_694_p3));
    tmp_44_fu_605_p2 <= std_logic_vector(unsigned(tmp_40_reg_995) + unsigned(tmp_23_cast_fu_601_p1));
        tmp_45_cast_fu_657_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_38_fu_651_p2),8));

    tmp_45_fu_825_p3 <= (channels9_reg_362 & ap_const_lv2_0);
    tmp_46_fu_774_p2 <= std_logic_vector(unsigned(tmp_24_cast_fu_770_p1) + unsigned(tmp_51_cast_reg_1050));
    tmp_47_fu_724_p2 <= std_logic_vector(unsigned(tmp_43_reg_1029) + unsigned(tmp_25_cast_fu_720_p1));
    tmp_48_fu_853_p2 <= std_logic_vector(unsigned(tmp_27_cast_fu_849_p1) + unsigned(tmp_58_cast_reg_1084));
    tmp_49_fu_803_p2 <= std_logic_vector(unsigned(tmp_61_cast_reg_1063) + unsigned(tmp_28_cast_fu_799_p1));
    tmp_50_fu_882_p2 <= std_logic_vector(unsigned(tmp_65_cast_reg_1097) + unsigned(tmp_30_cast_fu_878_p1));
    tmp_51_cast_fu_754_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_41_fu_746_p3),7));
    tmp_56_cast_fu_610_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_44_fu_605_p2),64));
    tmp_58_cast_fu_833_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_45_fu_825_p3),6));
    tmp_61_cast_fu_779_p3 <= (tmp_46_fu_774_p2 & ap_const_lv3_0);
    tmp_62_cast_fu_729_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_47_fu_724_p2),64));
    tmp_65_cast_fu_858_p3 <= (tmp_48_fu_853_p2 & ap_const_lv2_0);
    tmp_66_cast_fu_808_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_49_fu_803_p2),64));
    tmp_67_cast_fu_887_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_50_fu_882_p2),64));
    tmp_cast_fu_482_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_reg_252),11));
    tmp_fu_440_p3 <= (i_reg_241 & ap_const_lv5_0);
    tmp_s_fu_452_p3 <= (i_reg_241 & ap_const_lv2_0);
end behav;
