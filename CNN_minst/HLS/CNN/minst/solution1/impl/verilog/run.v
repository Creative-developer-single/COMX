// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="run,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-2,HLS_INPUT_CLOCK=15.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=12.646500,HLS_SYN_LAT=39383,HLS_SYN_TPT=none,HLS_SYN_MEM=26,HLS_SYN_DSP=30,HLS_SYN_FF=11647,HLS_SYN_LUT=9195,HLS_VERSION=2018_3}" *)

module run (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_in,
        predict,
        predict_ap_vld
);

parameter    ap_ST_fsm_state1 = 27'd1;
parameter    ap_ST_fsm_state2 = 27'd2;
parameter    ap_ST_fsm_state3 = 27'd4;
parameter    ap_ST_fsm_state4 = 27'd8;
parameter    ap_ST_fsm_state5 = 27'd16;
parameter    ap_ST_fsm_state6 = 27'd32;
parameter    ap_ST_fsm_state7 = 27'd64;
parameter    ap_ST_fsm_state8 = 27'd128;
parameter    ap_ST_fsm_state9 = 27'd256;
parameter    ap_ST_fsm_state10 = 27'd512;
parameter    ap_ST_fsm_state11 = 27'd1024;
parameter    ap_ST_fsm_state12 = 27'd2048;
parameter    ap_ST_fsm_state13 = 27'd4096;
parameter    ap_ST_fsm_state14 = 27'd8192;
parameter    ap_ST_fsm_state15 = 27'd16384;
parameter    ap_ST_fsm_state16 = 27'd32768;
parameter    ap_ST_fsm_state17 = 27'd65536;
parameter    ap_ST_fsm_state18 = 27'd131072;
parameter    ap_ST_fsm_state19 = 27'd262144;
parameter    ap_ST_fsm_state20 = 27'd524288;
parameter    ap_ST_fsm_state21 = 27'd1048576;
parameter    ap_ST_fsm_state22 = 27'd2097152;
parameter    ap_ST_fsm_state23 = 27'd4194304;
parameter    ap_ST_fsm_state24 = 27'd8388608;
parameter    ap_ST_fsm_state25 = 27'd16777216;
parameter    ap_ST_fsm_state26 = 27'd33554432;
parameter    ap_ST_fsm_state27 = 27'd67108864;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] data_in;
output  [31:0] predict;
output   predict_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg predict_ap_vld;

(* fsm_encoding = "none" *) reg   [26:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] row;
reg   [31:0] column;
reg   [9:0] data_address0;
reg    data_ce0;
reg    data_we0;
wire   [31:0] data_q0;
reg   [9:0] conv1_input_address0;
reg    conv1_input_ce0;
reg    conv1_input_we0;
wire   [31:0] conv1_input_q0;
reg    conv1_input_ce1;
wire   [31:0] conv1_input_q1;
reg   [10:0] conv1_output_address0;
reg    conv1_output_ce0;
reg    conv1_output_we0;
reg   [31:0] conv1_output_d0;
wire   [31:0] conv1_output_q0;
reg   [8:0] pool1_output_address0;
reg    pool1_output_ce0;
reg    pool1_output_we0;
reg   [31:0] pool1_output_d0;
wire   [31:0] pool1_output_q0;
reg    pool1_output_ce1;
wire   [31:0] pool1_output_q1;
reg   [8:0] conv2_output_address0;
reg    conv2_output_ce0;
reg    conv2_output_we0;
reg   [31:0] conv2_output_d0;
wire   [31:0] conv2_output_q0;
reg   [6:0] pool2_output_address0;
reg    pool2_output_ce0;
reg    pool2_output_we0;
reg   [31:0] pool2_output_d0;
wire   [31:0] pool2_output_q0;
reg    pool2_output_ce1;
wire   [31:0] pool2_output_q1;
reg   [6:0] flatten_output_address0;
reg    flatten_output_ce0;
reg    flatten_output_we0;
reg   [31:0] flatten_output_d0;
wire   [31:0] flatten_output_q0;
reg    flatten_output_ce1;
reg    flatten_output_we1;
reg   [5:0] fc1_output_address0;
reg    fc1_output_ce0;
reg    fc1_output_we0;
reg   [31:0] fc1_output_d0;
wire   [31:0] fc1_output_q0;
reg   [3:0] fc2_output_address0;
reg    fc2_output_ce0;
reg    fc2_output_we0;
reg   [31:0] fc2_output_d0;
wire   [31:0] fc2_output_q0;
wire   [11:0] fc1_wei_address0;
reg    fc1_wei_ce0;
wire   [31:0] fc1_wei_q0;
wire   [5:0] fc1_bias_address0;
reg    fc1_bias_ce0;
wire   [31:0] fc1_bias_q0;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state22;
wire   [0:0] tmp_fu_634_p2;
reg   [0:0] tmp_reg_781;
wire   [31:0] tmp_1_fu_644_p2;
wire   [5:0] i_fu_725_p2;
reg   [5:0] i_reg_796;
wire    ap_CS_fsm_state14;
wire   [63:0] tmp_i_fu_731_p1;
reg   [63:0] tmp_i_reg_801;
wire   [0:0] exitcond1_i_fu_719_p2;
wire   [11:0] tmp_i_cast_fu_736_p1;
reg   [11:0] tmp_i_cast_reg_806;
reg   [5:0] fc1_output_addr_reg_811;
wire   [6:0] k_fu_746_p2;
reg   [6:0] k_reg_819;
wire    ap_CS_fsm_state15;
wire   [11:0] next_mul_fu_757_p2;
reg   [11:0] next_mul_reg_824;
wire   [0:0] exitcond_i_fu_740_p2;
reg   [31:0] flatten_output_load_reg_844;
wire    ap_CS_fsm_state16;
reg   [31:0] fc1_wei_load_reg_849;
wire   [31:0] tmp_45_i_fu_616_p2;
reg   [31:0] tmp_45_i_reg_854;
wire    ap_CS_fsm_state17;
wire   [31:0] grp_fu_609_p2;
reg   [31:0] tmp_i_3_reg_864;
wire    ap_CS_fsm_state25;
wire    grp_Conv2_layer_fu_382_ap_start;
wire    grp_Conv2_layer_fu_382_ap_done;
wire    grp_Conv2_layer_fu_382_ap_idle;
wire    grp_Conv2_layer_fu_382_ap_ready;
wire   [8:0] grp_Conv2_layer_fu_382_pool1_output_address0;
wire    grp_Conv2_layer_fu_382_pool1_output_ce0;
wire   [8:0] grp_Conv2_layer_fu_382_pool1_output_address1;
wire    grp_Conv2_layer_fu_382_pool1_output_ce1;
wire   [8:0] grp_Conv2_layer_fu_382_conv2_output_address0;
wire    grp_Conv2_layer_fu_382_conv2_output_ce0;
wire    grp_Conv2_layer_fu_382_conv2_output_we0;
wire   [31:0] grp_Conv2_layer_fu_382_conv2_output_d0;
wire    grp_Conv1_layer_fu_542_ap_start;
wire    grp_Conv1_layer_fu_542_ap_done;
wire    grp_Conv1_layer_fu_542_ap_idle;
wire    grp_Conv1_layer_fu_542_ap_ready;
wire   [9:0] grp_Conv1_layer_fu_542_conv1_input_address0;
wire    grp_Conv1_layer_fu_542_conv1_input_ce0;
wire   [9:0] grp_Conv1_layer_fu_542_conv1_input_address1;
wire    grp_Conv1_layer_fu_542_conv1_input_ce1;
wire   [10:0] grp_Conv1_layer_fu_542_conv1_output_address0;
wire    grp_Conv1_layer_fu_542_conv1_output_ce0;
wire    grp_Conv1_layer_fu_542_conv1_output_we0;
wire   [31:0] grp_Conv1_layer_fu_542_conv1_output_d0;
wire    grp_FC2_layer_fu_550_ap_start;
wire    grp_FC2_layer_fu_550_ap_done;
wire    grp_FC2_layer_fu_550_ap_idle;
wire    grp_FC2_layer_fu_550_ap_ready;
wire   [5:0] grp_FC2_layer_fu_550_fc1_output_address0;
wire    grp_FC2_layer_fu_550_fc1_output_ce0;
wire   [3:0] grp_FC2_layer_fu_550_fc2_output_address0;
wire    grp_FC2_layer_fu_550_fc2_output_ce0;
wire    grp_FC2_layer_fu_550_fc2_output_we0;
wire   [31:0] grp_FC2_layer_fu_550_fc2_output_d0;
wire   [31:0] grp_FC2_layer_fu_550_ap_return;
wire    grp_MaxPooling1_layer_fu_563_ap_start;
wire    grp_MaxPooling1_layer_fu_563_ap_done;
wire    grp_MaxPooling1_layer_fu_563_ap_idle;
wire    grp_MaxPooling1_layer_fu_563_ap_ready;
wire   [10:0] grp_MaxPooling1_layer_fu_563_conv1_output_address0;
wire    grp_MaxPooling1_layer_fu_563_conv1_output_ce0;
wire   [8:0] grp_MaxPooling1_layer_fu_563_pool1_output_address0;
wire    grp_MaxPooling1_layer_fu_563_pool1_output_ce0;
wire    grp_MaxPooling1_layer_fu_563_pool1_output_we0;
wire   [31:0] grp_MaxPooling1_layer_fu_563_pool1_output_d0;
wire    grp_MaxPooling2_layer_fu_571_ap_start;
wire    grp_MaxPooling2_layer_fu_571_ap_done;
wire    grp_MaxPooling2_layer_fu_571_ap_idle;
wire    grp_MaxPooling2_layer_fu_571_ap_ready;
wire   [8:0] grp_MaxPooling2_layer_fu_571_conv2_output_address0;
wire    grp_MaxPooling2_layer_fu_571_conv2_output_ce0;
wire   [6:0] grp_MaxPooling2_layer_fu_571_pool2_output_address0;
wire    grp_MaxPooling2_layer_fu_571_pool2_output_ce0;
wire    grp_MaxPooling2_layer_fu_571_pool2_output_we0;
wire   [31:0] grp_MaxPooling2_layer_fu_571_pool2_output_d0;
wire    grp_Init_fu_579_ap_start;
wire    grp_Init_fu_579_ap_done;
wire    grp_Init_fu_579_ap_idle;
wire    grp_Init_fu_579_ap_ready;
wire   [9:0] grp_Init_fu_579_data_address0;
wire    grp_Init_fu_579_data_ce0;
wire   [9:0] grp_Init_fu_579_conv1_input_address0;
wire    grp_Init_fu_579_conv1_input_ce0;
wire    grp_Init_fu_579_conv1_input_we0;
wire   [31:0] grp_Init_fu_579_conv1_input_d0;
wire   [10:0] grp_Init_fu_579_conv1_output_address0;
wire    grp_Init_fu_579_conv1_output_ce0;
wire    grp_Init_fu_579_conv1_output_we0;
wire   [31:0] grp_Init_fu_579_conv1_output_d0;
wire   [8:0] grp_Init_fu_579_pool1_output_address0;
wire    grp_Init_fu_579_pool1_output_ce0;
wire    grp_Init_fu_579_pool1_output_we0;
wire   [31:0] grp_Init_fu_579_pool1_output_d0;
wire   [8:0] grp_Init_fu_579_conv2_output_address0;
wire    grp_Init_fu_579_conv2_output_ce0;
wire    grp_Init_fu_579_conv2_output_we0;
wire   [31:0] grp_Init_fu_579_conv2_output_d0;
wire   [6:0] grp_Init_fu_579_pool2_output_address0;
wire    grp_Init_fu_579_pool2_output_ce0;
wire    grp_Init_fu_579_pool2_output_we0;
wire   [31:0] grp_Init_fu_579_pool2_output_d0;
wire   [6:0] grp_Init_fu_579_flatten_output_address0;
wire    grp_Init_fu_579_flatten_output_ce0;
wire    grp_Init_fu_579_flatten_output_we0;
wire   [31:0] grp_Init_fu_579_flatten_output_d0;
wire   [5:0] grp_Init_fu_579_fc1_output_address0;
wire    grp_Init_fu_579_fc1_output_ce0;
wire    grp_Init_fu_579_fc1_output_we0;
wire   [31:0] grp_Init_fu_579_fc1_output_d0;
wire   [3:0] grp_Init_fu_579_fc2_output_address0;
wire    grp_Init_fu_579_fc2_output_ce0;
wire    grp_Init_fu_579_fc2_output_we0;
wire   [31:0] grp_Init_fu_579_fc2_output_d0;
wire    grp_Flatten_layer_fu_601_ap_start;
wire    grp_Flatten_layer_fu_601_ap_done;
wire    grp_Flatten_layer_fu_601_ap_idle;
wire    grp_Flatten_layer_fu_601_ap_ready;
wire   [6:0] grp_Flatten_layer_fu_601_pool2_output_address0;
wire    grp_Flatten_layer_fu_601_pool2_output_ce0;
wire   [6:0] grp_Flatten_layer_fu_601_pool2_output_address1;
wire    grp_Flatten_layer_fu_601_pool2_output_ce1;
wire   [6:0] grp_Flatten_layer_fu_601_flatten_output_address0;
wire    grp_Flatten_layer_fu_601_flatten_output_ce0;
wire    grp_Flatten_layer_fu_601_flatten_output_we0;
wire   [31:0] grp_Flatten_layer_fu_601_flatten_output_d0;
wire   [6:0] grp_Flatten_layer_fu_601_flatten_output_address1;
wire    grp_Flatten_layer_fu_601_flatten_output_ce1;
wire    grp_Flatten_layer_fu_601_flatten_output_we1;
wire   [31:0] grp_Flatten_layer_fu_601_flatten_output_d1;
reg   [31:0] column_new_reg_338;
wire   [0:0] tmp_4_fu_695_p2;
reg   [5:0] i_i_reg_349;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state26;
reg   [6:0] k_i_reg_360;
wire    ap_CS_fsm_state21;
reg   [11:0] phi_mul_reg_371;
reg    grp_Conv2_layer_fu_382_ap_start_reg;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
reg    grp_Conv1_layer_fu_542_ap_start_reg;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
reg    grp_FC2_layer_fu_550_ap_start_reg;
wire    ap_CS_fsm_state27;
reg    grp_MaxPooling1_layer_fu_563_ap_start_reg;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
reg    grp_MaxPooling2_layer_fu_571_ap_start_reg;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
reg    grp_Init_fu_579_ap_start_reg;
wire    ap_CS_fsm_state3;
reg    grp_Flatten_layer_fu_601_ap_start_reg;
wire    ap_CS_fsm_state12;
wire  signed [63:0] tmp_8_cast_fu_690_p1;
wire   [63:0] tmp_10_cast_fu_768_p1;
wire   [63:0] tmp_44_i_fu_752_p1;
wire   [31:0] tmp_5_fu_701_p2;
wire    ap_CS_fsm_state2;
reg    ap_block_state27_on_subcall_done;
wire   [31:0] tmp_43_i_fu_773_p3;
reg   [31:0] grp_fu_609_p1;
wire   [5:0] tmp_3_fu_654_p1;
wire   [8:0] tmp_6_fu_666_p1;
wire   [10:0] p_shl_cast_fu_658_p3;
wire   [10:0] p_shl1_cast_fu_670_p3;
wire   [10:0] tmp_2_fu_650_p1;
wire   [10:0] tmp_7_fu_678_p2;
wire   [10:0] tmp_8_fu_684_p2;
wire   [11:0] tmp_s_fu_763_p2;
wire   [0:0] tmp_42_i_fu_620_p2;
reg   [26:0] ap_NS_fsm;
reg    ap_condition_189;

// power-on initialization
initial begin
#0 ap_CS_fsm = 27'd1;
#0 row = 32'd0;
#0 column = 32'd0;
#0 grp_Conv2_layer_fu_382_ap_start_reg = 1'b0;
#0 grp_Conv1_layer_fu_542_ap_start_reg = 1'b0;
#0 grp_FC2_layer_fu_550_ap_start_reg = 1'b0;
#0 grp_MaxPooling1_layer_fu_563_ap_start_reg = 1'b0;
#0 grp_MaxPooling2_layer_fu_571_ap_start_reg = 1'b0;
#0 grp_Init_fu_579_ap_start_reg = 1'b0;
#0 grp_Flatten_layer_fu_601_ap_start_reg = 1'b0;
end

run_data #(
    .DataWidth( 32 ),
    .AddressRange( 784 ),
    .AddressWidth( 10 ))
data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_address0),
    .ce0(data_ce0),
    .we0(data_we0),
    .d0(data_in),
    .q0(data_q0)
);

run_conv1_input #(
    .DataWidth( 32 ),
    .AddressRange( 784 ),
    .AddressWidth( 10 ))
conv1_input_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_input_address0),
    .ce0(conv1_input_ce0),
    .we0(conv1_input_we0),
    .d0(grp_Init_fu_579_conv1_input_d0),
    .q0(conv1_input_q0),
    .address1(grp_Conv1_layer_fu_542_conv1_input_address1),
    .ce1(conv1_input_ce1),
    .q1(conv1_input_q1)
);

run_conv1_output #(
    .DataWidth( 32 ),
    .AddressRange( 1728 ),
    .AddressWidth( 11 ))
conv1_output_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_output_address0),
    .ce0(conv1_output_ce0),
    .we0(conv1_output_we0),
    .d0(conv1_output_d0),
    .q0(conv1_output_q0)
);

run_pool1_output #(
    .DataWidth( 32 ),
    .AddressRange( 432 ),
    .AddressWidth( 9 ))
pool1_output_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pool1_output_address0),
    .ce0(pool1_output_ce0),
    .we0(pool1_output_we0),
    .d0(pool1_output_d0),
    .q0(pool1_output_q0),
    .address1(grp_Conv2_layer_fu_382_pool1_output_address1),
    .ce1(pool1_output_ce1),
    .q1(pool1_output_q1)
);

run_conv2_output #(
    .DataWidth( 32 ),
    .AddressRange( 320 ),
    .AddressWidth( 9 ))
conv2_output_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv2_output_address0),
    .ce0(conv2_output_ce0),
    .we0(conv2_output_we0),
    .d0(conv2_output_d0),
    .q0(conv2_output_q0)
);

run_pool2_output #(
    .DataWidth( 32 ),
    .AddressRange( 80 ),
    .AddressWidth( 7 ))
pool2_output_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pool2_output_address0),
    .ce0(pool2_output_ce0),
    .we0(pool2_output_we0),
    .d0(pool2_output_d0),
    .q0(pool2_output_q0),
    .address1(grp_Flatten_layer_fu_601_pool2_output_address1),
    .ce1(pool2_output_ce1),
    .q1(pool2_output_q1)
);

run_flatten_output #(
    .DataWidth( 32 ),
    .AddressRange( 80 ),
    .AddressWidth( 7 ))
flatten_output_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(flatten_output_address0),
    .ce0(flatten_output_ce0),
    .we0(flatten_output_we0),
    .d0(flatten_output_d0),
    .q0(flatten_output_q0),
    .address1(grp_Flatten_layer_fu_601_flatten_output_address1),
    .ce1(flatten_output_ce1),
    .we1(flatten_output_we1),
    .d1(grp_Flatten_layer_fu_601_flatten_output_d1)
);

run_fc1_output #(
    .DataWidth( 32 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
fc1_output_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc1_output_address0),
    .ce0(fc1_output_ce0),
    .we0(fc1_output_we0),
    .d0(fc1_output_d0),
    .q0(fc1_output_q0)
);

run_fc2_output #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
fc2_output_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc2_output_address0),
    .ce0(fc2_output_ce0),
    .we0(fc2_output_we0),
    .d0(fc2_output_d0),
    .q0(fc2_output_q0)
);

run_fc1_wei #(
    .DataWidth( 32 ),
    .AddressRange( 4000 ),
    .AddressWidth( 12 ))
fc1_wei_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc1_wei_address0),
    .ce0(fc1_wei_ce0),
    .q0(fc1_wei_q0)
);

run_fc1_bias #(
    .DataWidth( 32 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
fc1_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc1_bias_address0),
    .ce0(fc1_bias_ce0),
    .q0(fc1_bias_q0)
);

Conv2_layer grp_Conv2_layer_fu_382(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Conv2_layer_fu_382_ap_start),
    .ap_done(grp_Conv2_layer_fu_382_ap_done),
    .ap_idle(grp_Conv2_layer_fu_382_ap_idle),
    .ap_ready(grp_Conv2_layer_fu_382_ap_ready),
    .pool1_output_address0(grp_Conv2_layer_fu_382_pool1_output_address0),
    .pool1_output_ce0(grp_Conv2_layer_fu_382_pool1_output_ce0),
    .pool1_output_q0(pool1_output_q0),
    .pool1_output_address1(grp_Conv2_layer_fu_382_pool1_output_address1),
    .pool1_output_ce1(grp_Conv2_layer_fu_382_pool1_output_ce1),
    .pool1_output_q1(pool1_output_q1),
    .conv2_output_address0(grp_Conv2_layer_fu_382_conv2_output_address0),
    .conv2_output_ce0(grp_Conv2_layer_fu_382_conv2_output_ce0),
    .conv2_output_we0(grp_Conv2_layer_fu_382_conv2_output_we0),
    .conv2_output_d0(grp_Conv2_layer_fu_382_conv2_output_d0),
    .conv2_output_q0(conv2_output_q0)
);

Conv1_layer grp_Conv1_layer_fu_542(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Conv1_layer_fu_542_ap_start),
    .ap_done(grp_Conv1_layer_fu_542_ap_done),
    .ap_idle(grp_Conv1_layer_fu_542_ap_idle),
    .ap_ready(grp_Conv1_layer_fu_542_ap_ready),
    .conv1_input_address0(grp_Conv1_layer_fu_542_conv1_input_address0),
    .conv1_input_ce0(grp_Conv1_layer_fu_542_conv1_input_ce0),
    .conv1_input_q0(conv1_input_q0),
    .conv1_input_address1(grp_Conv1_layer_fu_542_conv1_input_address1),
    .conv1_input_ce1(grp_Conv1_layer_fu_542_conv1_input_ce1),
    .conv1_input_q1(conv1_input_q1),
    .conv1_output_address0(grp_Conv1_layer_fu_542_conv1_output_address0),
    .conv1_output_ce0(grp_Conv1_layer_fu_542_conv1_output_ce0),
    .conv1_output_we0(grp_Conv1_layer_fu_542_conv1_output_we0),
    .conv1_output_d0(grp_Conv1_layer_fu_542_conv1_output_d0),
    .conv1_output_q0(conv1_output_q0)
);

FC2_layer grp_FC2_layer_fu_550(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_FC2_layer_fu_550_ap_start),
    .ap_done(grp_FC2_layer_fu_550_ap_done),
    .ap_idle(grp_FC2_layer_fu_550_ap_idle),
    .ap_ready(grp_FC2_layer_fu_550_ap_ready),
    .fc1_output_address0(grp_FC2_layer_fu_550_fc1_output_address0),
    .fc1_output_ce0(grp_FC2_layer_fu_550_fc1_output_ce0),
    .fc1_output_q0(fc1_output_q0),
    .fc2_output_address0(grp_FC2_layer_fu_550_fc2_output_address0),
    .fc2_output_ce0(grp_FC2_layer_fu_550_fc2_output_ce0),
    .fc2_output_we0(grp_FC2_layer_fu_550_fc2_output_we0),
    .fc2_output_d0(grp_FC2_layer_fu_550_fc2_output_d0),
    .fc2_output_q0(fc2_output_q0),
    .ap_return(grp_FC2_layer_fu_550_ap_return)
);

MaxPooling1_layer grp_MaxPooling1_layer_fu_563(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_MaxPooling1_layer_fu_563_ap_start),
    .ap_done(grp_MaxPooling1_layer_fu_563_ap_done),
    .ap_idle(grp_MaxPooling1_layer_fu_563_ap_idle),
    .ap_ready(grp_MaxPooling1_layer_fu_563_ap_ready),
    .conv1_output_address0(grp_MaxPooling1_layer_fu_563_conv1_output_address0),
    .conv1_output_ce0(grp_MaxPooling1_layer_fu_563_conv1_output_ce0),
    .conv1_output_q0(conv1_output_q0),
    .pool1_output_address0(grp_MaxPooling1_layer_fu_563_pool1_output_address0),
    .pool1_output_ce0(grp_MaxPooling1_layer_fu_563_pool1_output_ce0),
    .pool1_output_we0(grp_MaxPooling1_layer_fu_563_pool1_output_we0),
    .pool1_output_d0(grp_MaxPooling1_layer_fu_563_pool1_output_d0)
);

MaxPooling2_layer grp_MaxPooling2_layer_fu_571(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_MaxPooling2_layer_fu_571_ap_start),
    .ap_done(grp_MaxPooling2_layer_fu_571_ap_done),
    .ap_idle(grp_MaxPooling2_layer_fu_571_ap_idle),
    .ap_ready(grp_MaxPooling2_layer_fu_571_ap_ready),
    .conv2_output_address0(grp_MaxPooling2_layer_fu_571_conv2_output_address0),
    .conv2_output_ce0(grp_MaxPooling2_layer_fu_571_conv2_output_ce0),
    .conv2_output_q0(conv2_output_q0),
    .pool2_output_address0(grp_MaxPooling2_layer_fu_571_pool2_output_address0),
    .pool2_output_ce0(grp_MaxPooling2_layer_fu_571_pool2_output_ce0),
    .pool2_output_we0(grp_MaxPooling2_layer_fu_571_pool2_output_we0),
    .pool2_output_d0(grp_MaxPooling2_layer_fu_571_pool2_output_d0)
);

Init grp_Init_fu_579(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Init_fu_579_ap_start),
    .ap_done(grp_Init_fu_579_ap_done),
    .ap_idle(grp_Init_fu_579_ap_idle),
    .ap_ready(grp_Init_fu_579_ap_ready),
    .data_address0(grp_Init_fu_579_data_address0),
    .data_ce0(grp_Init_fu_579_data_ce0),
    .data_q0(data_q0),
    .conv1_input_address0(grp_Init_fu_579_conv1_input_address0),
    .conv1_input_ce0(grp_Init_fu_579_conv1_input_ce0),
    .conv1_input_we0(grp_Init_fu_579_conv1_input_we0),
    .conv1_input_d0(grp_Init_fu_579_conv1_input_d0),
    .conv1_output_address0(grp_Init_fu_579_conv1_output_address0),
    .conv1_output_ce0(grp_Init_fu_579_conv1_output_ce0),
    .conv1_output_we0(grp_Init_fu_579_conv1_output_we0),
    .conv1_output_d0(grp_Init_fu_579_conv1_output_d0),
    .pool1_output_address0(grp_Init_fu_579_pool1_output_address0),
    .pool1_output_ce0(grp_Init_fu_579_pool1_output_ce0),
    .pool1_output_we0(grp_Init_fu_579_pool1_output_we0),
    .pool1_output_d0(grp_Init_fu_579_pool1_output_d0),
    .conv2_output_address0(grp_Init_fu_579_conv2_output_address0),
    .conv2_output_ce0(grp_Init_fu_579_conv2_output_ce0),
    .conv2_output_we0(grp_Init_fu_579_conv2_output_we0),
    .conv2_output_d0(grp_Init_fu_579_conv2_output_d0),
    .pool2_output_address0(grp_Init_fu_579_pool2_output_address0),
    .pool2_output_ce0(grp_Init_fu_579_pool2_output_ce0),
    .pool2_output_we0(grp_Init_fu_579_pool2_output_we0),
    .pool2_output_d0(grp_Init_fu_579_pool2_output_d0),
    .flatten_output_address0(grp_Init_fu_579_flatten_output_address0),
    .flatten_output_ce0(grp_Init_fu_579_flatten_output_ce0),
    .flatten_output_we0(grp_Init_fu_579_flatten_output_we0),
    .flatten_output_d0(grp_Init_fu_579_flatten_output_d0),
    .fc1_output_address0(grp_Init_fu_579_fc1_output_address0),
    .fc1_output_ce0(grp_Init_fu_579_fc1_output_ce0),
    .fc1_output_we0(grp_Init_fu_579_fc1_output_we0),
    .fc1_output_d0(grp_Init_fu_579_fc1_output_d0),
    .fc2_output_address0(grp_Init_fu_579_fc2_output_address0),
    .fc2_output_ce0(grp_Init_fu_579_fc2_output_ce0),
    .fc2_output_we0(grp_Init_fu_579_fc2_output_we0),
    .fc2_output_d0(grp_Init_fu_579_fc2_output_d0)
);

Flatten_layer grp_Flatten_layer_fu_601(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Flatten_layer_fu_601_ap_start),
    .ap_done(grp_Flatten_layer_fu_601_ap_done),
    .ap_idle(grp_Flatten_layer_fu_601_ap_idle),
    .ap_ready(grp_Flatten_layer_fu_601_ap_ready),
    .pool2_output_address0(grp_Flatten_layer_fu_601_pool2_output_address0),
    .pool2_output_ce0(grp_Flatten_layer_fu_601_pool2_output_ce0),
    .pool2_output_q0(pool2_output_q0),
    .pool2_output_address1(grp_Flatten_layer_fu_601_pool2_output_address1),
    .pool2_output_ce1(grp_Flatten_layer_fu_601_pool2_output_ce1),
    .pool2_output_q1(pool2_output_q1),
    .flatten_output_address0(grp_Flatten_layer_fu_601_flatten_output_address0),
    .flatten_output_ce0(grp_Flatten_layer_fu_601_flatten_output_ce0),
    .flatten_output_we0(grp_Flatten_layer_fu_601_flatten_output_we0),
    .flatten_output_d0(grp_Flatten_layer_fu_601_flatten_output_d0),
    .flatten_output_address1(grp_Flatten_layer_fu_601_flatten_output_address1),
    .flatten_output_ce1(grp_Flatten_layer_fu_601_flatten_output_ce1),
    .flatten_output_we1(grp_Flatten_layer_fu_601_flatten_output_we1),
    .flatten_output_d1(grp_Flatten_layer_fu_601_flatten_output_d1)
);

run_fadd_32ns_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
run_fadd_32ns_32nbkb_U143(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(fc1_output_q0),
    .din1(grp_fu_609_p1),
    .ce(1'b1),
    .dout(grp_fu_609_p2)
);

run_fmul_32ns_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
run_fmul_32ns_32ncud_U144(
    .din0(flatten_output_load_reg_844),
    .din1(fc1_wei_load_reg_849),
    .dout(tmp_45_i_fu_616_p2)
);

run_fcmp_32ns_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
run_fcmp_32ns_32ndEe_U145(
    .din0(tmp_i_3_reg_864),
    .din1(32'd0),
    .opcode(5'd2),
    .dout(tmp_42_i_fu_620_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Conv1_layer_fu_542_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_Conv1_layer_fu_542_ap_start_reg <= 1'b1;
        end else if ((grp_Conv1_layer_fu_542_ap_ready == 1'b1)) begin
            grp_Conv1_layer_fu_542_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Conv2_layer_fu_382_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_Conv2_layer_fu_382_ap_start_reg <= 1'b1;
        end else if ((grp_Conv2_layer_fu_382_ap_ready == 1'b1)) begin
            grp_Conv2_layer_fu_382_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_FC2_layer_fu_550_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state14) & (exitcond1_i_fu_719_p2 == 1'd1))) begin
            grp_FC2_layer_fu_550_ap_start_reg <= 1'b1;
        end else if ((grp_FC2_layer_fu_550_ap_ready == 1'b1)) begin
            grp_FC2_layer_fu_550_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Flatten_layer_fu_601_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
            grp_Flatten_layer_fu_601_ap_start_reg <= 1'b1;
        end else if ((grp_Flatten_layer_fu_601_ap_ready == 1'b1)) begin
            grp_Flatten_layer_fu_601_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Init_fu_579_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_634_p2 == 1'd1))) begin
            grp_Init_fu_579_ap_start_reg <= 1'b1;
        end else if ((grp_Init_fu_579_ap_ready == 1'b1)) begin
            grp_Init_fu_579_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_MaxPooling1_layer_fu_563_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_MaxPooling1_layer_fu_563_ap_start_reg <= 1'b1;
        end else if ((grp_MaxPooling1_layer_fu_563_ap_ready == 1'b1)) begin
            grp_MaxPooling1_layer_fu_563_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_MaxPooling2_layer_fu_571_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            grp_MaxPooling2_layer_fu_571_ap_start_reg <= 1'b1;
        end else if ((grp_MaxPooling2_layer_fu_571_ap_ready == 1'b1)) begin
            grp_MaxPooling2_layer_fu_571_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_189)) begin
        if ((tmp_4_fu_695_p2 == 1'd0)) begin
            column_new_reg_338 <= tmp_1_fu_644_p2;
        end else if ((tmp_4_fu_695_p2 == 1'd1)) begin
            column_new_reg_338 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        i_i_reg_349 <= i_reg_796;
    end else if (((grp_Flatten_layer_fu_601_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        i_i_reg_349 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        k_i_reg_360 <= k_reg_819;
    end else if (((1'b1 == ap_CS_fsm_state14) & (exitcond1_i_fu_719_p2 == 1'd0))) begin
        k_i_reg_360 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        phi_mul_reg_371 <= next_mul_reg_824;
    end else if (((1'b1 == ap_CS_fsm_state14) & (exitcond1_i_fu_719_p2 == 1'd0))) begin
        phi_mul_reg_371 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        column <= column_new_reg_338;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (exitcond1_i_fu_719_p2 == 1'd0))) begin
        fc1_output_addr_reg_811 <= tmp_i_fu_731_p1;
        tmp_i_cast_reg_806[5 : 0] <= tmp_i_cast_fu_736_p1[5 : 0];
        tmp_i_reg_801[5 : 0] <= tmp_i_fu_731_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        fc1_wei_load_reg_849 <= fc1_wei_q0;
        flatten_output_load_reg_844 <= flatten_output_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        i_reg_796 <= i_fu_725_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        k_reg_819 <= k_fu_746_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (exitcond_i_fu_740_p2 == 1'd0))) begin
        next_mul_reg_824 <= next_mul_fu_757_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (tmp_4_fu_695_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_634_p2 == 1'd0))) begin
        row <= tmp_5_fu_701_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_45_i_reg_854 <= tmp_45_i_fu_616_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        tmp_i_3_reg_864 <= grp_fu_609_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_reg_781 <= tmp_fu_634_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) & (1'b0 == ap_block_state27_on_subcall_done))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) & (1'b0 == ap_block_state27_on_subcall_done))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        conv1_input_address0 = grp_Init_fu_579_conv1_input_address0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv1_input_address0 = grp_Conv1_layer_fu_542_conv1_input_address0;
    end else begin
        conv1_input_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        conv1_input_ce0 = grp_Init_fu_579_conv1_input_ce0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv1_input_ce0 = grp_Conv1_layer_fu_542_conv1_input_ce0;
    end else begin
        conv1_input_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        conv1_input_ce1 = grp_Conv1_layer_fu_542_conv1_input_ce1;
    end else begin
        conv1_input_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        conv1_input_we0 = grp_Init_fu_579_conv1_input_we0;
    end else begin
        conv1_input_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        conv1_output_address0 = grp_Init_fu_579_conv1_output_address0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        conv1_output_address0 = grp_MaxPooling1_layer_fu_563_conv1_output_address0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv1_output_address0 = grp_Conv1_layer_fu_542_conv1_output_address0;
    end else begin
        conv1_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        conv1_output_ce0 = grp_Init_fu_579_conv1_output_ce0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        conv1_output_ce0 = grp_MaxPooling1_layer_fu_563_conv1_output_ce0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv1_output_ce0 = grp_Conv1_layer_fu_542_conv1_output_ce0;
    end else begin
        conv1_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        conv1_output_d0 = grp_Init_fu_579_conv1_output_d0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv1_output_d0 = grp_Conv1_layer_fu_542_conv1_output_d0;
    end else begin
        conv1_output_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        conv1_output_we0 = grp_Init_fu_579_conv1_output_we0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv1_output_we0 = grp_Conv1_layer_fu_542_conv1_output_we0;
    end else begin
        conv1_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        conv2_output_address0 = grp_Init_fu_579_conv2_output_address0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        conv2_output_address0 = grp_MaxPooling2_layer_fu_571_conv2_output_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        conv2_output_address0 = grp_Conv2_layer_fu_382_conv2_output_address0;
    end else begin
        conv2_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        conv2_output_ce0 = grp_Init_fu_579_conv2_output_ce0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        conv2_output_ce0 = grp_MaxPooling2_layer_fu_571_conv2_output_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        conv2_output_ce0 = grp_Conv2_layer_fu_382_conv2_output_ce0;
    end else begin
        conv2_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        conv2_output_d0 = grp_Init_fu_579_conv2_output_d0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        conv2_output_d0 = grp_Conv2_layer_fu_382_conv2_output_d0;
    end else begin
        conv2_output_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        conv2_output_we0 = grp_Init_fu_579_conv2_output_we0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        conv2_output_we0 = grp_Conv2_layer_fu_382_conv2_output_we0;
    end else begin
        conv2_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (tmp_fu_634_p2 == 1'd0))) begin
        data_address0 = tmp_8_cast_fu_690_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        data_address0 = grp_Init_fu_579_data_address0;
    end else begin
        data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_634_p2 == 1'd0))) begin
        data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        data_ce0 = grp_Init_fu_579_data_ce0;
    end else begin
        data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_634_p2 == 1'd0))) begin
        data_we0 = 1'b1;
    end else begin
        data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        fc1_bias_ce0 = 1'b1;
    end else begin
        fc1_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15))) begin
        fc1_output_address0 = fc1_output_addr_reg_811;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        fc1_output_address0 = grp_Init_fu_579_fc1_output_address0;
    end else if (((1'b1 == ap_CS_fsm_state27) & (tmp_reg_781 == 1'd1))) begin
        fc1_output_address0 = grp_FC2_layer_fu_550_fc1_output_address0;
    end else begin
        fc1_output_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15))) begin
        fc1_output_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        fc1_output_ce0 = grp_Init_fu_579_fc1_output_ce0;
    end else if (((1'b1 == ap_CS_fsm_state27) & (tmp_reg_781 == 1'd1))) begin
        fc1_output_ce0 = grp_FC2_layer_fu_550_fc1_output_ce0;
    end else begin
        fc1_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        fc1_output_d0 = tmp_43_i_fu_773_p3;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        fc1_output_d0 = grp_fu_609_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        fc1_output_d0 = grp_Init_fu_579_fc1_output_d0;
    end else begin
        fc1_output_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state26))) begin
        fc1_output_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        fc1_output_we0 = grp_Init_fu_579_fc1_output_we0;
    end else begin
        fc1_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        fc1_wei_ce0 = 1'b1;
    end else begin
        fc1_wei_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        fc2_output_address0 = grp_Init_fu_579_fc2_output_address0;
    end else if (((1'b1 == ap_CS_fsm_state27) & (tmp_reg_781 == 1'd1))) begin
        fc2_output_address0 = grp_FC2_layer_fu_550_fc2_output_address0;
    end else begin
        fc2_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        fc2_output_ce0 = grp_Init_fu_579_fc2_output_ce0;
    end else if (((1'b1 == ap_CS_fsm_state27) & (tmp_reg_781 == 1'd1))) begin
        fc2_output_ce0 = grp_FC2_layer_fu_550_fc2_output_ce0;
    end else begin
        fc2_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        fc2_output_d0 = grp_Init_fu_579_fc2_output_d0;
    end else if (((1'b1 == ap_CS_fsm_state27) & (tmp_reg_781 == 1'd1))) begin
        fc2_output_d0 = grp_FC2_layer_fu_550_fc2_output_d0;
    end else begin
        fc2_output_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        fc2_output_we0 = grp_Init_fu_579_fc2_output_we0;
    end else if (((1'b1 == ap_CS_fsm_state27) & (tmp_reg_781 == 1'd1))) begin
        fc2_output_we0 = grp_FC2_layer_fu_550_fc2_output_we0;
    end else begin
        fc2_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        flatten_output_address0 = tmp_44_i_fu_752_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        flatten_output_address0 = grp_Flatten_layer_fu_601_flatten_output_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        flatten_output_address0 = grp_Init_fu_579_flatten_output_address0;
    end else begin
        flatten_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        flatten_output_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        flatten_output_ce0 = grp_Flatten_layer_fu_601_flatten_output_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        flatten_output_ce0 = grp_Init_fu_579_flatten_output_ce0;
    end else begin
        flatten_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        flatten_output_ce1 = grp_Flatten_layer_fu_601_flatten_output_ce1;
    end else begin
        flatten_output_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        flatten_output_d0 = grp_Flatten_layer_fu_601_flatten_output_d0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        flatten_output_d0 = grp_Init_fu_579_flatten_output_d0;
    end else begin
        flatten_output_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        flatten_output_we0 = grp_Flatten_layer_fu_601_flatten_output_we0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        flatten_output_we0 = grp_Init_fu_579_flatten_output_we0;
    end else begin
        flatten_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        flatten_output_we1 = grp_Flatten_layer_fu_601_flatten_output_we1;
    end else begin
        flatten_output_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_609_p1 = fc1_bias_q0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_609_p1 = tmp_45_i_reg_854;
    end else begin
        grp_fu_609_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        pool1_output_address0 = grp_Init_fu_579_pool1_output_address0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        pool1_output_address0 = grp_MaxPooling1_layer_fu_563_pool1_output_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        pool1_output_address0 = grp_Conv2_layer_fu_382_pool1_output_address0;
    end else begin
        pool1_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        pool1_output_ce0 = grp_Init_fu_579_pool1_output_ce0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        pool1_output_ce0 = grp_MaxPooling1_layer_fu_563_pool1_output_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        pool1_output_ce0 = grp_Conv2_layer_fu_382_pool1_output_ce0;
    end else begin
        pool1_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        pool1_output_ce1 = grp_Conv2_layer_fu_382_pool1_output_ce1;
    end else begin
        pool1_output_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        pool1_output_d0 = grp_Init_fu_579_pool1_output_d0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        pool1_output_d0 = grp_MaxPooling1_layer_fu_563_pool1_output_d0;
    end else begin
        pool1_output_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        pool1_output_we0 = grp_Init_fu_579_pool1_output_we0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        pool1_output_we0 = grp_MaxPooling1_layer_fu_563_pool1_output_we0;
    end else begin
        pool1_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        pool2_output_address0 = grp_Flatten_layer_fu_601_pool2_output_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        pool2_output_address0 = grp_Init_fu_579_pool2_output_address0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        pool2_output_address0 = grp_MaxPooling2_layer_fu_571_pool2_output_address0;
    end else begin
        pool2_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        pool2_output_ce0 = grp_Flatten_layer_fu_601_pool2_output_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        pool2_output_ce0 = grp_Init_fu_579_pool2_output_ce0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        pool2_output_ce0 = grp_MaxPooling2_layer_fu_571_pool2_output_ce0;
    end else begin
        pool2_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        pool2_output_ce1 = grp_Flatten_layer_fu_601_pool2_output_ce1;
    end else begin
        pool2_output_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        pool2_output_d0 = grp_Init_fu_579_pool2_output_d0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        pool2_output_d0 = grp_MaxPooling2_layer_fu_571_pool2_output_d0;
    end else begin
        pool2_output_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        pool2_output_we0 = grp_Init_fu_579_pool2_output_we0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        pool2_output_we0 = grp_MaxPooling2_layer_fu_571_pool2_output_we0;
    end else begin
        pool2_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) & (tmp_reg_781 == 1'd1) & (1'b0 == ap_block_state27_on_subcall_done))) begin
        predict_ap_vld = 1'b1;
    end else begin
        predict_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_634_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_634_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state3 : begin
            if (((grp_Init_fu_579_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_Conv1_layer_fu_542_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((grp_MaxPooling1_layer_fu_563_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((grp_Conv2_layer_fu_382_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((grp_MaxPooling2_layer_fu_571_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((grp_Flatten_layer_fu_601_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (exitcond1_i_fu_719_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((exitcond_i_fu_740_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (1'b0 == ap_block_state27_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state27_on_subcall_done = ((grp_FC2_layer_fu_550_ap_done == 1'b0) & (tmp_reg_781 == 1'd1));
end

always @ (*) begin
    ap_condition_189 = ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_634_p2 == 1'd0));
end

assign exitcond1_i_fu_719_p2 = ((i_i_reg_349 == 6'd50) ? 1'b1 : 1'b0);

assign exitcond_i_fu_740_p2 = ((k_i_reg_360 == 7'd80) ? 1'b1 : 1'b0);

assign fc1_bias_address0 = tmp_i_reg_801;

assign fc1_wei_address0 = tmp_10_cast_fu_768_p1;

assign grp_Conv1_layer_fu_542_ap_start = grp_Conv1_layer_fu_542_ap_start_reg;

assign grp_Conv2_layer_fu_382_ap_start = grp_Conv2_layer_fu_382_ap_start_reg;

assign grp_FC2_layer_fu_550_ap_start = grp_FC2_layer_fu_550_ap_start_reg;

assign grp_Flatten_layer_fu_601_ap_start = grp_Flatten_layer_fu_601_ap_start_reg;

assign grp_Init_fu_579_ap_start = grp_Init_fu_579_ap_start_reg;

assign grp_MaxPooling1_layer_fu_563_ap_start = grp_MaxPooling1_layer_fu_563_ap_start_reg;

assign grp_MaxPooling2_layer_fu_571_ap_start = grp_MaxPooling2_layer_fu_571_ap_start_reg;

assign i_fu_725_p2 = (i_i_reg_349 + 6'd1);

assign k_fu_746_p2 = (k_i_reg_360 + 7'd1);

assign next_mul_fu_757_p2 = (phi_mul_reg_371 + 12'd50);

assign p_shl1_cast_fu_670_p3 = {{tmp_6_fu_666_p1}, {2'd0}};

assign p_shl_cast_fu_658_p3 = {{tmp_3_fu_654_p1}, {5'd0}};

assign predict = grp_FC2_layer_fu_550_ap_return;

assign tmp_10_cast_fu_768_p1 = tmp_s_fu_763_p2;

assign tmp_1_fu_644_p2 = (32'd1 + column);

assign tmp_2_fu_650_p1 = column[10:0];

assign tmp_3_fu_654_p1 = row[5:0];

assign tmp_43_i_fu_773_p3 = ((tmp_42_i_fu_620_p2[0:0] === 1'b1) ? tmp_i_3_reg_864 : 32'd0);

assign tmp_44_i_fu_752_p1 = k_i_reg_360;

assign tmp_4_fu_695_p2 = ((tmp_1_fu_644_p2 == 32'd28) ? 1'b1 : 1'b0);

assign tmp_5_fu_701_p2 = (row + 32'd1);

assign tmp_6_fu_666_p1 = row[8:0];

assign tmp_7_fu_678_p2 = (p_shl_cast_fu_658_p3 - p_shl1_cast_fu_670_p3);

assign tmp_8_cast_fu_690_p1 = $signed(tmp_8_fu_684_p2);

assign tmp_8_fu_684_p2 = (tmp_2_fu_650_p1 + tmp_7_fu_678_p2);

assign tmp_fu_634_p2 = ((row == 32'd28) ? 1'b1 : 1'b0);

assign tmp_i_cast_fu_736_p1 = i_i_reg_349;

assign tmp_i_fu_731_p1 = i_i_reg_349;

assign tmp_s_fu_763_p2 = (tmp_i_cast_reg_806 + phi_mul_reg_371);

always @ (posedge ap_clk) begin
    tmp_i_reg_801[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_i_cast_reg_806[11:6] <= 6'b000000;
end

endmodule //run
