

================================================================
== Vivado HLS Report for 'DWT'
================================================================
* Date:           Sun Feb 18 10:30:06 2024

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        Demo
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.588|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+--------+-----+--------+---------+
    |    Latency   |   Interval   | Pipeline|
    | min |   max  | min |   max  |   Type  |
    +-----+--------+-----+--------+---------+
    |    1|  676908|    1|  676908|   none  |
    +-----+--------+-----+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------------+-------+--------+---------------+-----------+-----------+----------+----------+
        |                       |     Latency    |   Iteration   |  Initiation Interval  |   Trip   |          |
        |       Loop Name       |  min  |   max  |    Latency    |  achieved |   target  |   Count  | Pipelined|
        +-----------------------+-------+--------+---------------+-----------+-----------+----------+----------+
        |- memset_data_store    |   2047|    2047|              1|          -|          -|      2048|    no    |
        |- memset_data_output   |  10244|   10244|           2049|          -|          -|         5|    no    |
        | + memset_data_output  |   2047|    2047|              1|          -|          -|      2048|    no    |
        |- memset_data_input    |   2047|    2047|              1|          -|          -|      2048|    no    |
        |- Loop 4               |   2048|    2048|              2|          -|          -|      1024|    no    |
        |- Loop 5               |   5155|  660515| 1031 ~ 132103 |          -|          -|         5|    no    |
        | + loop6               |      0|  124928|    2 ~ 122    |          -|          -| 0 ~ 1024 |    no    |
        |  ++ loop1             |      0|     120|             10|          -|          -|  0 ~ 12  |    no    |
        | + loop2               |      0|    2048|              2|          -|          -| 0 ~ 1024 |    no    |
        | + loop5               |      0|    1024|              1|          -|          -| 0 ~ 1024 |    no    |
        | + loop3               |      0|    2048|              2|          -|          -| 0 ~ 1024 |    no    |
        | + loop4               |      0|    1024|              1|          -|          -| 0 ~ 1024 |    no    |
        | + Loop 5.6            |   1024|    1024|              1|          -|          -|      1024|    no    |
        +-----------------------+-------+--------+---------------+-----------+-----------+----------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 28
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	8  / (cal_flag_load)
	28  / (!cal_flag_load & !tmp_3_i)
	2  / (!cal_flag_load & tmp_3_i)
2 --> 
	2  / (!tmp_6)
	3  / (tmp_6)
3 --> 
	4  / true
4 --> 
	4  / (!tmp_9)
	3  / (tmp_9 & !tmp_s)
	5  / (tmp_9 & tmp_s)
5 --> 
	5  / (!tmp_2)
	6  / (tmp_2)
6 --> 
	7  / (!exitcond5)
	8  / (exitcond5)
7 --> 
	6  / true
8 --> 
	9  / (!cal_flag_load & !exitcond4)
	28  / (exitcond4 & tmp_11) | (cal_flag_load & tmp_11)
	27  / (exitcond4 & !tmp_11) | (cal_flag_load & !tmp_11)
9 --> 
	10  / (!tmp_12)
	20  / (tmp_12)
10 --> 
	11  / (!tmp_23 & !tmp_29)
	9  / (tmp_29) | (tmp_23)
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	10  / true
20 --> 
	21  / (!tmp_22)
	22  / (tmp_22)
21 --> 
	20  / true
22 --> 
	22  / (icmp)
	23  / (!icmp)
23 --> 
	24  / (!tmp_40)
	25  / (tmp_40)
24 --> 
	23  / true
25 --> 
	25  / (icmp5)
	26  / (!icmp5)
26 --> 
	26  / (!exitcond3)
	8  / (exitcond3)
27 --> 
	28  / true
28 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.19>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float* %data_out) nounwind, !map !27"   --->   Operation 29 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float* %data) nounwind, !map !31"   --->   Operation 30 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %read_valid) nounwind, !map !35"   --->   Operation 31 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %read_ready) nounwind, !map !39"   --->   Operation 32 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %read_over) nounwind, !map !43"   --->   Operation 33 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %write_valid) nounwind, !map !47"   --->   Operation 34 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([4 x i8]* @DWT_str) nounwind"   --->   Operation 35 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%data_input = alloca [2048 x float], align 16" [Demo/source/DWT.cpp:41]   --->   Operation 36 'alloca' 'data_input' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10240> <RAM>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%data_store = alloca [2048 x float], align 16" [Demo/source/DWT.cpp:42]   --->   Operation 37 'alloca' 'data_store' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10240> <RAM>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%data_output = alloca [10240 x float], align 4" [Demo/source/DWT.cpp:43]   --->   Operation 38 'alloca' 'data_output' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10240> <RAM>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %read_ready, [8 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [Demo/source/DWT.cpp:41]   --->   Operation 39 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%cal_flag_load = load i1* @cal_flag, align 1"   --->   Operation 40 'load' 'cal_flag_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "br i1 %cal_flag_load, label %.loopexit14, label %1" [Demo/source/DWT.cpp:47]   --->   Operation 41 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%data_read = call float @_ssdm_op_Read.ap_auto.floatP(float* %data) nounwind" [Demo/source/DWT.cpp:49]   --->   Operation 42 'read' 'data_read' <Predicate = (!cal_flag_load)> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%read_valid_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %read_valid) nounwind" [Demo/source/DWT.cpp:49]   --->   Operation 43 'read' 'read_valid_read' <Predicate = (!cal_flag_load)> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (1.96ns)   --->   "%tmp_i = icmp eq i32 %read_valid_read, 1" [Demo/source/DWT.cpp:25->Demo/source/DWT.cpp:49]   --->   Operation 44 'icmp' 'tmp_i' <Predicate = (!cal_flag_load)> <Delay = 1.96> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%cnt_load = load i32* @cnt, align 4" [Demo/source/DWT.cpp:27->Demo/source/DWT.cpp:49]   --->   Operation 45 'load' 'cnt_load' <Predicate = (!cal_flag_load)> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.46ns)   --->   "br i1 %tmp_i, label %2, label %ReadData.exit" [Demo/source/DWT.cpp:25->Demo/source/DWT.cpp:49]   --->   Operation 46 'br' <Predicate = (!cal_flag_load)> <Delay = 0.46>
ST_1 : Operation 47 [1/1] (1.89ns)   --->   "%tmp_1_i = add nsw i32 %cnt_load, 1" [Demo/source/DWT.cpp:27->Demo/source/DWT.cpp:49]   --->   Operation 47 'add' 'tmp_1_i' <Predicate = (!cal_flag_load & tmp_i)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "store i32 %tmp_1_i, i32* @cnt, align 4" [Demo/source/DWT.cpp:27->Demo/source/DWT.cpp:49]   --->   Operation 48 'store' <Predicate = (!cal_flag_load & tmp_i)> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_2_i = sext i32 %cnt_load to i64" [Demo/source/DWT.cpp:27->Demo/source/DWT.cpp:49]   --->   Operation 49 'sext' 'tmp_2_i' <Predicate = (!cal_flag_load & tmp_i)> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%data_in_addr_1 = getelementptr inbounds [4096 x float]* @data_in, i64 0, i64 %tmp_2_i" [Demo/source/DWT.cpp:27->Demo/source/DWT.cpp:49]   --->   Operation 50 'getelementptr' 'data_in_addr_1' <Predicate = (!cal_flag_load & tmp_i)> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (2.77ns)   --->   "store float %data_read, float* %data_in_addr_1, align 4" [Demo/source/DWT.cpp:27->Demo/source/DWT.cpp:49]   --->   Operation 51 'store' <Predicate = (!cal_flag_load & tmp_i)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10240> <RAM>
ST_1 : Operation 52 [1/1] (0.46ns)   --->   "br label %ReadData.exit" [Demo/source/DWT.cpp:29->Demo/source/DWT.cpp:49]   --->   Operation 52 'br' <Predicate = (!cal_flag_load & tmp_i)> <Delay = 0.46>
ST_1 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node tmp_3_i)   --->   "%cnt_loc_i = phi i32 [ %tmp_1_i, %2 ], [ %cnt_load, %1 ]" [Demo/source/DWT.cpp:27->Demo/source/DWT.cpp:49]   --->   Operation 53 'phi' 'cnt_loc_i' <Predicate = (!cal_flag_load)> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node read_ready_write_ass)   --->   "%read_ready_i = phi i1 [ true, %2 ], [ false, %1 ]"   --->   Operation 54 'phi' 'read_ready_i' <Predicate = (!cal_flag_load)> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (1.96ns) (out node of the LUT)   --->   "%tmp_3_i = icmp eq i32 %cnt_loc_i, 1024" [Demo/source/DWT.cpp:30->Demo/source/DWT.cpp:49]   --->   Operation 55 'icmp' 'tmp_3_i' <Predicate = (!cal_flag_load)> <Delay = 1.96> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 56 [1/1] (0.80ns) (out node of the LUT)   --->   "%read_ready_write_ass = or i1 %tmp_3_i, %read_ready_i" [Demo/source/DWT.cpp:30->Demo/source/DWT.cpp:49]   --->   Operation 56 'or' 'read_ready_write_ass' <Predicate = (!cal_flag_load)> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%read_ready_write_ass_1 = zext i1 %read_ready_write_ass to i32" [Demo/source/DWT.cpp:30->Demo/source/DWT.cpp:49]   --->   Operation 57 'zext' 'read_ready_write_ass_1' <Predicate = (!cal_flag_load)> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%read_over_write_assi = zext i1 %tmp_3_i to i32" [Demo/source/DWT.cpp:30->Demo/source/DWT.cpp:49]   --->   Operation 58 'zext' 'read_over_write_assi' <Predicate = (!cal_flag_load)> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_ovld.i32P(i32* %read_ready, i32 %read_ready_write_ass_1) nounwind" [Demo/source/DWT.cpp:49]   --->   Operation 59 'write' <Predicate = (!cal_flag_load)> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %read_over, i32 %read_over_write_assi) nounwind" [Demo/source/DWT.cpp:49]   --->   Operation 60 'write' <Predicate = (!cal_flag_load)> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "br i1 %tmp_3_i, label %meminst.preheader, label %.loopexit" [Demo/source/DWT.cpp:49]   --->   Operation 61 'br' <Predicate = (!cal_flag_load)> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.46ns)   --->   "br label %meminst" [Demo/source/DWT.cpp:52]   --->   Operation 62 'br' <Predicate = (!cal_flag_load & tmp_3_i)> <Delay = 0.46>

State 2 <SV = 1> <Delay = 2.77>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%invdar = phi i11 [ %indvarinc, %meminst ], [ 0, %meminst.preheader ]" [Demo/source/DWT.cpp:52]   --->   Operation 63 'phi' 'invdar' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (1.48ns)   --->   "%indvarinc = add i11 %invdar, 1" [Demo/source/DWT.cpp:52]   --->   Operation 64 'add' 'indvarinc' <Predicate = true> <Delay = 1.48> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%tmp_5 = zext i11 %invdar to i64" [Demo/source/DWT.cpp:52]   --->   Operation 65 'zext' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%data_store_addr = getelementptr [2048 x float]* %data_store, i64 0, i64 %tmp_5" [Demo/source/DWT.cpp:52]   --->   Operation 66 'getelementptr' 'data_store_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (2.77ns)   --->   "store float 0.000000e+00, float* %data_store_addr, align 4" [Demo/source/DWT.cpp:52]   --->   Operation 67 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10240> <RAM>
ST_2 : Operation 68 [1/1] (1.88ns)   --->   "%tmp_6 = icmp eq i11 %invdar, -1" [Demo/source/DWT.cpp:52]   --->   Operation 68 'icmp' 'tmp_6' <Predicate = true> <Delay = 1.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([18 x i8]* @memset_data_store_st)"   --->   Operation 69 'specloopname' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 2048, i64 2048, i64 2048)"   --->   Operation 70 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "br i1 %tmp_6, label %meminst19.preheader, label %meminst" [Demo/source/DWT.cpp:52]   --->   Operation 71 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (0.46ns)   --->   "br label %meminst19" [Demo/source/DWT.cpp:53]   --->   Operation 72 'br' <Predicate = (tmp_6)> <Delay = 0.46>

State 3 <SV = 2> <Delay = 0.76>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%invdar1 = phi i3 [ %indvarinc1, %meminst1922 ], [ 0, %meminst19.preheader ]" [Demo/source/DWT.cpp:53]   --->   Operation 73 'phi' 'invdar1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 74 [1/1] (0.76ns)   --->   "%indvarinc1 = add i3 %invdar1, 1" [Demo/source/DWT.cpp:53]   --->   Operation 74 'add' 'indvarinc1' <Predicate = true> <Delay = 0.76> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5)"   --->   Operation 75 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 76 [1/1] (0.46ns)   --->   "br label %meminst23"   --->   Operation 76 'br' <Predicate = true> <Delay = 0.46>

State 4 <SV = 3> <Delay = 2.77>
ST_4 : Operation 77 [1/1] (0.00ns)   --->   "%invdar2 = phi i11 [ 0, %meminst19 ], [ %indvarinc2, %meminst23 ]" [Demo/source/DWT.cpp:53]   --->   Operation 77 'phi' 'invdar2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 78 [1/1] (1.48ns)   --->   "%indvarinc2 = add i11 %invdar2, 1" [Demo/source/DWT.cpp:53]   --->   Operation 78 'add' 'indvarinc2' <Predicate = true> <Delay = 1.48> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 79 [1/1] (0.00ns)   --->   "%tmp = call i14 @_ssdm_op_BitConcatenate.i14.i3.i11(i3 %invdar1, i11 %invdar2)" [Demo/source/DWT.cpp:53]   --->   Operation 79 'bitconcatenate' 'tmp' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 80 [1/1] (0.00ns)   --->   "%tmp_7 = zext i14 %tmp to i64" [Demo/source/DWT.cpp:53]   --->   Operation 80 'zext' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 81 [1/1] (0.00ns)   --->   "%data_output_addr = getelementptr [10240 x float]* %data_output, i64 0, i64 %tmp_7" [Demo/source/DWT.cpp:53]   --->   Operation 81 'getelementptr' 'data_output_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 82 [1/1] (2.77ns)   --->   "store float 0.000000e+00, float* %data_output_addr, align 4" [Demo/source/DWT.cpp:53]   --->   Operation 82 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10240> <RAM>
ST_4 : Operation 83 [1/1] (1.88ns)   --->   "%tmp_9 = icmp eq i11 %invdar2, -1" [Demo/source/DWT.cpp:53]   --->   Operation 83 'icmp' 'tmp_9' <Predicate = true> <Delay = 1.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 84 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([19 x i8]* @memset_data_output_s)"   --->   Operation 84 'specloopname' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 85 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 2048, i64 2048, i64 2048)"   --->   Operation 85 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 86 [1/1] (0.00ns)   --->   "br i1 %tmp_9, label %meminst1922, label %meminst23" [Demo/source/DWT.cpp:53]   --->   Operation 86 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 87 [1/1] (0.98ns)   --->   "%tmp_s = icmp eq i3 %invdar1, -4" [Demo/source/DWT.cpp:53]   --->   Operation 87 'icmp' 'tmp_s' <Predicate = (tmp_9)> <Delay = 0.98> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 88 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([19 x i8]* @memset_data_output_s)"   --->   Operation 88 'specloopname' <Predicate = (tmp_9)> <Delay = 0.00>
ST_4 : Operation 89 [1/1] (0.00ns)   --->   "br i1 %tmp_s, label %meminst26.preheader, label %meminst19" [Demo/source/DWT.cpp:53]   --->   Operation 89 'br' <Predicate = (tmp_9)> <Delay = 0.00>
ST_4 : Operation 90 [1/1] (0.46ns)   --->   "br label %meminst26" [Demo/source/DWT.cpp:54]   --->   Operation 90 'br' <Predicate = (tmp_9 & tmp_s)> <Delay = 0.46>

State 5 <SV = 4> <Delay = 2.77>
ST_5 : Operation 91 [1/1] (0.00ns)   --->   "%invdar3 = phi i11 [ %indvarinc3, %meminst26 ], [ 0, %meminst26.preheader ]" [Demo/source/DWT.cpp:54]   --->   Operation 91 'phi' 'invdar3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 92 [1/1] (1.48ns)   --->   "%indvarinc3 = add i11 %invdar3, 1" [Demo/source/DWT.cpp:54]   --->   Operation 92 'add' 'indvarinc3' <Predicate = true> <Delay = 1.48> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 93 [1/1] (0.00ns)   --->   "%tmp_1 = zext i11 %invdar3 to i64" [Demo/source/DWT.cpp:54]   --->   Operation 93 'zext' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 94 [1/1] (0.00ns)   --->   "%data_input_addr = getelementptr [2048 x float]* %data_input, i64 0, i64 %tmp_1" [Demo/source/DWT.cpp:54]   --->   Operation 94 'getelementptr' 'data_input_addr' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 95 [1/1] (2.77ns)   --->   "store float 0.000000e+00, float* %data_input_addr, align 4" [Demo/source/DWT.cpp:54]   --->   Operation 95 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10240> <RAM>
ST_5 : Operation 96 [1/1] (1.88ns)   --->   "%tmp_2 = icmp eq i11 %invdar3, -1" [Demo/source/DWT.cpp:54]   --->   Operation 96 'icmp' 'tmp_2' <Predicate = true> <Delay = 1.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 97 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([18 x i8]* @memset_data_input_st)"   --->   Operation 97 'specloopname' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 98 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 2048, i64 2048, i64 2048)"   --->   Operation 98 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 99 [1/1] (0.00ns)   --->   "br i1 %tmp_2, label %.preheader15.preheader, label %meminst26" [Demo/source/DWT.cpp:54]   --->   Operation 99 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 100 [1/1] (0.46ns)   --->   "br label %.preheader15" [Demo/source/DWT.cpp:72]   --->   Operation 100 'br' <Predicate = (tmp_2)> <Delay = 0.46>

State 6 <SV = 5> <Delay = 2.77>
ST_6 : Operation 101 [1/1] (0.00ns)   --->   "%i1 = phi i11 [ %i_1, %3 ], [ 0, %.preheader15.preheader ]"   --->   Operation 101 'phi' 'i1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 102 [1/1] (1.88ns)   --->   "%exitcond5 = icmp eq i11 %i1, -1024" [Demo/source/DWT.cpp:72]   --->   Operation 102 'icmp' 'exitcond5' <Predicate = true> <Delay = 1.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 103 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 1024, i64 1024, i64 1024)"   --->   Operation 103 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 104 [1/1] (1.48ns)   --->   "%i_1 = add i11 %i1, 1" [Demo/source/DWT.cpp:72]   --->   Operation 104 'add' 'i_1' <Predicate = true> <Delay = 1.48> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 105 [1/1] (0.00ns)   --->   "br i1 %exitcond5, label %.preheader13.preheader, label %3" [Demo/source/DWT.cpp:72]   --->   Operation 105 'br' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 106 [1/1] (0.00ns)   --->   "%tmp_3 = zext i11 %i1 to i64" [Demo/source/DWT.cpp:73]   --->   Operation 106 'zext' 'tmp_3' <Predicate = (!exitcond5)> <Delay = 0.00>
ST_6 : Operation 107 [1/1] (0.00ns)   --->   "%data_in_addr = getelementptr inbounds [4096 x float]* @data_in, i64 0, i64 %tmp_3" [Demo/source/DWT.cpp:73]   --->   Operation 107 'getelementptr' 'data_in_addr' <Predicate = (!exitcond5)> <Delay = 0.00>
ST_6 : Operation 108 [2/2] (2.77ns)   --->   "%data_in_load = load float* %data_in_addr, align 4" [Demo/source/DWT.cpp:73]   --->   Operation 108 'load' 'data_in_load' <Predicate = (!exitcond5)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10240> <RAM>
ST_6 : Operation 109 [1/1] (0.46ns)   --->   "br label %.preheader13" [Demo/source/DWT.cpp:75]   --->   Operation 109 'br' <Predicate = (exitcond5)> <Delay = 0.46>

State 7 <SV = 6> <Delay = 5.54>
ST_7 : Operation 110 [1/2] (2.77ns)   --->   "%data_in_load = load float* %data_in_addr, align 4" [Demo/source/DWT.cpp:73]   --->   Operation 110 'load' 'data_in_load' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10240> <RAM>
ST_7 : Operation 111 [1/1] (0.00ns)   --->   "%data_input_addr_1 = getelementptr inbounds [2048 x float]* %data_input, i64 0, i64 %tmp_3" [Demo/source/DWT.cpp:73]   --->   Operation 111 'getelementptr' 'data_input_addr_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 112 [1/1] (2.77ns)   --->   "store float %data_in_load, float* %data_input_addr_1, align 4" [Demo/source/DWT.cpp:73]   --->   Operation 112 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10240> <RAM>
ST_7 : Operation 113 [1/1] (0.00ns)   --->   "br label %.preheader15" [Demo/source/DWT.cpp:72]   --->   Operation 113 'br' <Predicate = true> <Delay = 0.00>

State 8 <SV = 6> <Delay = 2.43>
ST_8 : Operation 114 [1/1] (0.00ns)   --->   "%level = phi i3 [ %level_1, %.preheader13.loopexit ], [ 0, %.preheader13.preheader ]"   --->   Operation 114 'phi' 'level' <Predicate = (!cal_flag_load)> <Delay = 0.00>
ST_8 : Operation 115 [1/1] (0.00ns)   --->   "%cal_length = phi i32 [ %i_7, %.preheader13.loopexit ], [ 1024, %.preheader13.preheader ]"   --->   Operation 115 'phi' 'cal_length' <Predicate = (!cal_flag_load)> <Delay = 0.00>
ST_8 : Operation 116 [1/1] (0.98ns)   --->   "%exitcond4 = icmp eq i3 %level, -3" [Demo/source/DWT.cpp:75]   --->   Operation 116 'icmp' 'exitcond4' <Predicate = (!cal_flag_load)> <Delay = 0.98> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 117 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5)"   --->   Operation 117 'speclooptripcount' <Predicate = (!cal_flag_load)> <Delay = 0.00>
ST_8 : Operation 118 [1/1] (0.76ns)   --->   "%level_1 = add i3 %level, 1" [Demo/source/DWT.cpp:75]   --->   Operation 118 'add' 'level_1' <Predicate = (!cal_flag_load)> <Delay = 0.76> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 119 [1/1] (0.00ns)   --->   "br i1 %exitcond4, label %.loopexit14.loopexit, label %.preheader12.preheader" [Demo/source/DWT.cpp:75]   --->   Operation 119 'br' <Predicate = (!cal_flag_load)> <Delay = 0.00>
ST_8 : Operation 120 [1/1] (1.89ns)   --->   "%tmp_4 = add nsw i32 %cal_length, -1" [Demo/source/DWT.cpp:77]   --->   Operation 120 'add' 'tmp_4' <Predicate = (!cal_flag_load & !exitcond4)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 121 [1/1] (0.00ns)   --->   "%tmp_8 = call i6 @_ssdm_op_BitConcatenate.i6.i3.i3(i3 %level, i3 0)" [Demo/source/DWT.cpp:75]   --->   Operation 121 'bitconcatenate' 'tmp_8' <Predicate = (!cal_flag_load & !exitcond4)> <Delay = 0.00>
ST_8 : Operation 122 [1/1] (0.00ns)   --->   "%p_shl_cast = zext i6 %tmp_8 to i7" [Demo/source/DWT.cpp:75]   --->   Operation 122 'zext' 'p_shl_cast' <Predicate = (!cal_flag_load & !exitcond4)> <Delay = 0.00>
ST_8 : Operation 123 [1/1] (0.00ns)   --->   "%tmp_10 = call i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3 %level, i1 false)" [Demo/source/DWT.cpp:75]   --->   Operation 123 'bitconcatenate' 'tmp_10' <Predicate = (!cal_flag_load & !exitcond4)> <Delay = 0.00>
ST_8 : Operation 124 [1/1] (0.00ns)   --->   "%p_shl1_cast = zext i4 %tmp_10 to i7" [Demo/source/DWT.cpp:85]   --->   Operation 124 'zext' 'p_shl1_cast' <Predicate = (!cal_flag_load & !exitcond4)> <Delay = 0.00>
ST_8 : Operation 125 [1/1] (1.28ns)   --->   "%tmp_16 = add i7 %p_shl1_cast, %p_shl_cast" [Demo/source/DWT.cpp:85]   --->   Operation 125 'add' 'tmp_16' <Predicate = (!cal_flag_load & !exitcond4)> <Delay = 1.28> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 126 [1/1] (0.00ns)   --->   "%tmp_19 = call i14 @_ssdm_op_BitConcatenate.i14.i3.i11(i3 %level, i11 0)" [Demo/source/DWT.cpp:75]   --->   Operation 126 'bitconcatenate' 'tmp_19' <Predicate = (!cal_flag_load & !exitcond4)> <Delay = 0.00>
ST_8 : Operation 127 [1/1] (0.00ns)   --->   "%tmp_50_cast = zext i14 %tmp_19 to i15" [Demo/source/DWT.cpp:77]   --->   Operation 127 'zext' 'tmp_50_cast' <Predicate = (!cal_flag_load & !exitcond4)> <Delay = 0.00>
ST_8 : Operation 128 [1/1] (0.46ns)   --->   "br label %.preheader12" [Demo/source/DWT.cpp:77]   --->   Operation 128 'br' <Predicate = (!cal_flag_load & !exitcond4)> <Delay = 0.46>
ST_8 : Operation 129 [1/1] (0.00ns)   --->   "br label %.loopexit14"   --->   Operation 129 'br' <Predicate = (!cal_flag_load & exitcond4)> <Delay = 0.00>
ST_8 : Operation 130 [1/1] (0.00ns)   --->   "store i1 true, i1* @cal_flag, align 1" [Demo/source/DWT.cpp:108]   --->   Operation 130 'store' <Predicate = (exitcond4) | (cal_flag_load)> <Delay = 0.00>
ST_8 : Operation 131 [1/1] (0.00ns)   --->   "%i_load = load i32* @i, align 4" [Demo/source/DWT.cpp:114]   --->   Operation 131 'load' 'i_load' <Predicate = (exitcond4) | (cal_flag_load)> <Delay = 0.00>
ST_8 : Operation 132 [1/1] (1.96ns)   --->   "%tmp_11 = icmp eq i32 %i_load, 5" [Demo/source/DWT.cpp:114]   --->   Operation 132 'icmp' 'tmp_11' <Predicate = (exitcond4) | (cal_flag_load)> <Delay = 1.96> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 133 [1/1] (0.00ns)   --->   "br i1 %tmp_11, label %.loopexit, label %14" [Demo/source/DWT.cpp:114]   --->   Operation 133 'br' <Predicate = (exitcond4) | (cal_flag_load)> <Delay = 0.00>
ST_8 : Operation 134 [1/1] (0.00ns)   --->   "%j_load = load i32* @j, align 4" [Demo/source/DWT.cpp:116]   --->   Operation 134 'load' 'j_load' <Predicate = (exitcond4 & !tmp_11) | (cal_flag_load & !tmp_11)> <Delay = 0.00>
ST_8 : Operation 135 [1/1] (1.96ns)   --->   "%tmp_13 = icmp eq i32 %j_load, 1024" [Demo/source/DWT.cpp:116]   --->   Operation 135 'icmp' 'tmp_13' <Predicate = (exitcond4 & !tmp_11) | (cal_flag_load & !tmp_11)> <Delay = 1.96> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 136 [1/1] (0.46ns)   --->   "br i1 %tmp_13, label %15, label %._crit_edge18" [Demo/source/DWT.cpp:116]   --->   Operation 136 'br' <Predicate = (exitcond4 & !tmp_11) | (cal_flag_load & !tmp_11)> <Delay = 0.46>
ST_8 : Operation 137 [1/1] (1.89ns)   --->   "%tmp_18 = add nsw i32 %i_load, 1" [Demo/source/DWT.cpp:119]   --->   Operation 137 'add' 'tmp_18' <Predicate = (exitcond4 & !tmp_11 & tmp_13) | (cal_flag_load & !tmp_11 & tmp_13)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 138 [1/1] (0.00ns)   --->   "store i32 %tmp_18, i32* @i, align 4" [Demo/source/DWT.cpp:119]   --->   Operation 138 'store' <Predicate = (exitcond4 & !tmp_11 & tmp_13) | (cal_flag_load & !tmp_11 & tmp_13)> <Delay = 0.00>
ST_8 : Operation 139 [1/1] (0.46ns)   --->   "br label %._crit_edge18" [Demo/source/DWT.cpp:120]   --->   Operation 139 'br' <Predicate = (exitcond4 & !tmp_11 & tmp_13) | (cal_flag_load & !tmp_11 & tmp_13)> <Delay = 0.46>

State 9 <SV = 7> <Delay = 6.36>
ST_9 : Operation 140 [1/1] (0.00ns)   --->   "%n = phi i32 [ %n_1, %.loopexit1 ], [ 0, %.preheader12.preheader ]"   --->   Operation 140 'phi' 'n' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 141 [1/1] (1.96ns)   --->   "%tmp_12 = icmp sgt i32 %n, %tmp_4" [Demo/source/DWT.cpp:77]   --->   Operation 141 'icmp' 'tmp_12' <Predicate = true> <Delay = 1.96> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 142 [1/1] (1.89ns)   --->   "%n_1 = add nsw i32 %n, 1" [Demo/source/DWT.cpp:77]   --->   Operation 142 'add' 'n_1' <Predicate = true> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 143 [1/1] (0.00ns)   --->   "br i1 %tmp_12, label %7, label %4" [Demo/source/DWT.cpp:77]   --->   Operation 143 'br' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 144 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str5) nounwind" [Demo/source/DWT.cpp:78]   --->   Operation 144 'specloopname' <Predicate = (!tmp_12)> <Delay = 0.00>
ST_9 : Operation 145 [1/1] (0.00ns)   --->   "%tmp_15 = call i32 (...)* @_ssdm_op_SpecRegionBegin([6 x i8]* @p_str5) nounwind" [Demo/source/DWT.cpp:78]   --->   Operation 145 'specregionbegin' 'tmp_15' <Predicate = (!tmp_12)> <Delay = 0.00>
ST_9 : Operation 146 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i32 0, i32 1024, i32 512, [1 x i8]* @p_str1) nounwind" [Demo/source/DWT.cpp:79]   --->   Operation 146 'speclooptripcount' <Predicate = (!tmp_12)> <Delay = 0.00>
ST_9 : Operation 147 [1/1] (0.00ns)   --->   "%tmp_42 = shl i32 %n, 1" [Demo/source/DWT.cpp:80]   --->   Operation 147 'shl' 'tmp_42' <Predicate = (!tmp_12)> <Delay = 0.00>
ST_9 : Operation 148 [1/1] (0.00ns)   --->   "%tmp_17 = sext i32 %n to i64" [Demo/source/DWT.cpp:85]   --->   Operation 148 'sext' 'tmp_17' <Predicate = (!tmp_12)> <Delay = 0.00>
ST_9 : Operation 149 [1/1] (0.00ns)   --->   "%tmp_43 = trunc i32 %n to i15" [Demo/source/DWT.cpp:86]   --->   Operation 149 'trunc' 'tmp_43' <Predicate = (!tmp_12)> <Delay = 0.00>
ST_9 : Operation 150 [1/1] (1.53ns)   --->   "%tmp_44 = add i15 %tmp_43, %tmp_50_cast" [Demo/source/DWT.cpp:86]   --->   Operation 150 'add' 'tmp_44' <Predicate = (!tmp_12)> <Delay = 1.53> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 151 [1/1] (0.00ns)   --->   "%tmp_54_cast = sext i15 %tmp_44 to i64" [Demo/source/DWT.cpp:86]   --->   Operation 151 'sext' 'tmp_54_cast' <Predicate = (!tmp_12)> <Delay = 0.00>
ST_9 : Operation 152 [1/1] (0.00ns)   --->   "%data_output_addr_1 = getelementptr [10240 x float]* %data_output, i64 0, i64 %tmp_54_cast" [Demo/source/DWT.cpp:86]   --->   Operation 152 'getelementptr' 'data_output_addr_1' <Predicate = (!tmp_12)> <Delay = 0.00>
ST_9 : Operation 153 [1/1] (0.00ns)   --->   "%data_store_addr_1 = getelementptr inbounds [2048 x float]* %data_store, i64 0, i64 %tmp_17" [Demo/source/DWT.cpp:85]   --->   Operation 153 'getelementptr' 'data_store_addr_1' <Predicate = (!tmp_12)> <Delay = 0.00>
ST_9 : Operation 154 [1/1] (0.46ns)   --->   "br label %5" [Demo/source/DWT.cpp:80]   --->   Operation 154 'br' <Predicate = (!tmp_12)> <Delay = 0.46>
ST_9 : Operation 155 [1/1] (0.00ns)   --->   "%tmp_20 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %cal_length, i32 31)" [Demo/source/DWT.cpp:90]   --->   Operation 155 'bitselect' 'tmp_20' <Predicate = (tmp_12)> <Delay = 0.00>
ST_9 : Operation 156 [1/1] (1.89ns)   --->   "%p_neg = sub i32 0, %cal_length" [Demo/source/DWT.cpp:90]   --->   Operation 156 'sub' 'p_neg' <Predicate = (tmp_12)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 157 [1/1] (0.00ns)   --->   "%p_lshr = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %p_neg, i32 1, i32 31)" [Demo/source/DWT.cpp:90]   --->   Operation 157 'partselect' 'p_lshr' <Predicate = (tmp_12)> <Delay = 0.00>
ST_9 : Operation 158 [1/1] (0.00ns)   --->   "%tmp_30 = zext i31 %p_lshr to i32" [Demo/source/DWT.cpp:90]   --->   Operation 158 'zext' 'tmp_30' <Predicate = (tmp_12)> <Delay = 0.00>
ST_9 : Operation 159 [1/1] (1.87ns)   --->   "%p_neg_t = sub i32 0, %tmp_30" [Demo/source/DWT.cpp:90]   --->   Operation 159 'sub' 'p_neg_t' <Predicate = (tmp_12)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 160 [1/1] (0.00ns)   --->   "%p_lshr_f = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %cal_length, i32 1, i32 31)" [Demo/source/DWT.cpp:90]   --->   Operation 160 'partselect' 'p_lshr_f' <Predicate = (tmp_12)> <Delay = 0.00>
ST_9 : Operation 161 [1/1] (0.00ns)   --->   "%tmp_33 = zext i31 %p_lshr_f to i32" [Demo/source/DWT.cpp:90]   --->   Operation 161 'zext' 'tmp_33' <Predicate = (tmp_12)> <Delay = 0.00>
ST_9 : Operation 162 [1/1] (0.70ns)   --->   "%i_7 = select i1 %tmp_20, i32 %p_neg_t, i32 %tmp_33" [Demo/source/DWT.cpp:90]   --->   Operation 162 'select' 'i_7' <Predicate = (tmp_12)> <Delay = 0.70> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 163 [1/1] (1.89ns)   --->   "%tmp_14 = add nsw i32 %i_7, -1" [Demo/source/DWT.cpp:92]   --->   Operation 163 'add' 'tmp_14' <Predicate = (tmp_12)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 164 [1/1] (0.46ns)   --->   "br label %8" [Demo/source/DWT.cpp:92]   --->   Operation 164 'br' <Predicate = (tmp_12)> <Delay = 0.46>

State 10 <SV = 8> <Delay = 4.66>
ST_10 : Operation 165 [1/1] (0.00ns)   --->   "%k = phi i32 [ 0, %4 ], [ %k_1, %._crit_edge ]"   --->   Operation 165 'phi' 'k' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 166 [1/1] (1.96ns)   --->   "%tmp_23 = icmp sgt i32 %k, %tmp_42" [Demo/source/DWT.cpp:80]   --->   Operation 166 'icmp' 'tmp_23' <Predicate = true> <Delay = 1.96> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 167 [1/1] (1.89ns)   --->   "%k_1 = add nsw i32 %k, 1" [Demo/source/DWT.cpp:80]   --->   Operation 167 'add' 'k_1' <Predicate = true> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 168 [1/1] (0.00ns)   --->   "br i1 %tmp_23, label %.loopexit1, label %6" [Demo/source/DWT.cpp:80]   --->   Operation 168 'br' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 169 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str6) nounwind" [Demo/source/DWT.cpp:81]   --->   Operation 169 'specloopname' <Predicate = (!tmp_23)> <Delay = 0.00>
ST_10 : Operation 170 [1/1] (0.00ns)   --->   "%tmp_28 = call i32 (...)* @_ssdm_op_SpecRegionBegin([6 x i8]* @p_str6) nounwind" [Demo/source/DWT.cpp:81]   --->   Operation 170 'specregionbegin' 'tmp_28' <Predicate = (!tmp_23)> <Delay = 0.00>
ST_10 : Operation 171 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i32 0, i32 12, i32 6, [1 x i8]* @p_str1) nounwind" [Demo/source/DWT.cpp:82]   --->   Operation 171 'speclooptripcount' <Predicate = (!tmp_23)> <Delay = 0.00>
ST_10 : Operation 172 [1/1] (1.96ns)   --->   "%tmp_29 = icmp sgt i32 %k, 9" [Demo/source/DWT.cpp:83]   --->   Operation 172 'icmp' 'tmp_29' <Predicate = (!tmp_23)> <Delay = 1.96> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 173 [1/1] (0.00ns)   --->   "br i1 %tmp_29, label %.loopexit1, label %._crit_edge" [Demo/source/DWT.cpp:83]   --->   Operation 173 'br' <Predicate = (!tmp_23)> <Delay = 0.00>
ST_10 : Operation 174 [1/1] (1.89ns)   --->   "%tmp_31 = sub nsw i32 %tmp_42, %k" [Demo/source/DWT.cpp:85]   --->   Operation 174 'sub' 'tmp_31' <Predicate = (!tmp_23 & !tmp_29)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 175 [1/1] (0.00ns)   --->   "%tmp_32 = sext i32 %tmp_31 to i64" [Demo/source/DWT.cpp:85]   --->   Operation 175 'sext' 'tmp_32' <Predicate = (!tmp_23 & !tmp_29)> <Delay = 0.00>
ST_10 : Operation 176 [1/1] (0.00ns)   --->   "%data_input_addr_3 = getelementptr inbounds [2048 x float]* %data_input, i64 0, i64 %tmp_32" [Demo/source/DWT.cpp:85]   --->   Operation 176 'getelementptr' 'data_input_addr_3' <Predicate = (!tmp_23 & !tmp_29)> <Delay = 0.00>
ST_10 : Operation 177 [2/2] (2.77ns)   --->   "%data_input_load = load float* %data_input_addr_3, align 4" [Demo/source/DWT.cpp:85]   --->   Operation 177 'load' 'data_input_load' <Predicate = (!tmp_23 & !tmp_29)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10240> <RAM>
ST_10 : Operation 178 [1/1] (0.00ns)   --->   "%tmp_51 = trunc i32 %k to i7" [Demo/source/DWT.cpp:85]   --->   Operation 178 'trunc' 'tmp_51' <Predicate = (!tmp_23 & !tmp_29)> <Delay = 0.00>
ST_10 : Operation 179 [1/1] (1.31ns)   --->   "%tmp_52 = add i7 %tmp_16, %tmp_51" [Demo/source/DWT.cpp:85]   --->   Operation 179 'add' 'tmp_52' <Predicate = (!tmp_23 & !tmp_29)> <Delay = 1.31> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 180 [1/1] (0.00ns)   --->   "%tmp_58_cast = sext i7 %tmp_52 to i64" [Demo/source/DWT.cpp:85]   --->   Operation 180 'sext' 'tmp_58_cast' <Predicate = (!tmp_23 & !tmp_29)> <Delay = 0.00>
ST_10 : Operation 181 [1/1] (0.00ns)   --->   "%filter_g_addr = getelementptr [50 x float]* @filter_g, i64 0, i64 %tmp_58_cast" [Demo/source/DWT.cpp:85]   --->   Operation 181 'getelementptr' 'filter_g_addr' <Predicate = (!tmp_23 & !tmp_29)> <Delay = 0.00>
ST_10 : Operation 182 [1/1] (0.00ns)   --->   "%filter_h_addr = getelementptr [50 x float]* @filter_h, i64 0, i64 %tmp_58_cast" [Demo/source/DWT.cpp:86]   --->   Operation 182 'getelementptr' 'filter_h_addr' <Predicate = (!tmp_23 & !tmp_29)> <Delay = 0.00>
ST_10 : Operation 183 [2/2] (2.77ns)   --->   "%filter_g_load = load float* %filter_g_addr, align 4" [Demo/source/DWT.cpp:85]   --->   Operation 183 'load' 'filter_g_load' <Predicate = (!tmp_23 & !tmp_29)> <Delay = 2.77> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 50> <ROM>
ST_10 : Operation 184 [2/2] (2.77ns)   --->   "%filter_h_load = load float* %filter_h_addr, align 4" [Demo/source/DWT.cpp:86]   --->   Operation 184 'load' 'filter_h_load' <Predicate = (!tmp_23 & !tmp_29)> <Delay = 2.77> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 50> <ROM>
ST_10 : Operation 185 [1/1] (0.00ns)   --->   "%empty_27 = call i32 (...)* @_ssdm_op_SpecRegionEnd([6 x i8]* @p_str5, i32 %tmp_15) nounwind" [Demo/source/DWT.cpp:88]   --->   Operation 185 'specregionend' 'empty_27' <Predicate = (tmp_29) | (tmp_23)> <Delay = 0.00>
ST_10 : Operation 186 [1/1] (0.00ns)   --->   "br label %.preheader12" [Demo/source/DWT.cpp:77]   --->   Operation 186 'br' <Predicate = (tmp_29) | (tmp_23)> <Delay = 0.00>

State 11 <SV = 9> <Delay = 2.77>
ST_11 : Operation 187 [1/2] (2.77ns)   --->   "%data_input_load = load float* %data_input_addr_3, align 4" [Demo/source/DWT.cpp:85]   --->   Operation 187 'load' 'data_input_load' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10240> <RAM>
ST_11 : Operation 188 [1/2] (2.77ns)   --->   "%filter_g_load = load float* %filter_g_addr, align 4" [Demo/source/DWT.cpp:85]   --->   Operation 188 'load' 'filter_g_load' <Predicate = true> <Delay = 2.77> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 50> <ROM>
ST_11 : Operation 189 [1/2] (2.77ns)   --->   "%filter_h_load = load float* %filter_h_addr, align 4" [Demo/source/DWT.cpp:86]   --->   Operation 189 'load' 'filter_h_load' <Predicate = true> <Delay = 2.77> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 50> <ROM>

State 12 <SV = 10> <Delay = 8.43>
ST_12 : Operation 190 [3/3] (8.43ns)   --->   "%tmp_34 = fmul float %data_input_load, %filter_g_load" [Demo/source/DWT.cpp:85]   --->   Operation 190 'fmul' 'tmp_34' <Predicate = true> <Delay = 8.43> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 2> <II = 1> <Delay = 8.43> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 191 [3/3] (8.43ns)   --->   "%tmp_37 = fmul float %data_input_load, %filter_h_load" [Demo/source/DWT.cpp:86]   --->   Operation 191 'fmul' 'tmp_37' <Predicate = true> <Delay = 8.43> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 2> <II = 1> <Delay = 8.43> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 11> <Delay = 8.43>
ST_13 : Operation 192 [2/3] (8.43ns)   --->   "%tmp_34 = fmul float %data_input_load, %filter_g_load" [Demo/source/DWT.cpp:85]   --->   Operation 192 'fmul' 'tmp_34' <Predicate = true> <Delay = 8.43> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 2> <II = 1> <Delay = 8.43> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 193 [2/2] (2.77ns)   --->   "%data_store_load_1 = load float* %data_store_addr_1, align 4" [Demo/source/DWT.cpp:85]   --->   Operation 193 'load' 'data_store_load_1' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10240> <RAM>
ST_13 : Operation 194 [2/3] (8.43ns)   --->   "%tmp_37 = fmul float %data_input_load, %filter_h_load" [Demo/source/DWT.cpp:86]   --->   Operation 194 'fmul' 'tmp_37' <Predicate = true> <Delay = 8.43> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 2> <II = 1> <Delay = 8.43> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 195 [2/2] (2.77ns)   --->   "%data_output_load_1 = load float* %data_output_addr_1, align 4" [Demo/source/DWT.cpp:86]   --->   Operation 195 'load' 'data_output_load_1' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10240> <RAM>

State 14 <SV = 12> <Delay = 8.43>
ST_14 : Operation 196 [1/3] (8.43ns)   --->   "%tmp_34 = fmul float %data_input_load, %filter_g_load" [Demo/source/DWT.cpp:85]   --->   Operation 196 'fmul' 'tmp_34' <Predicate = true> <Delay = 8.43> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 2> <II = 1> <Delay = 8.43> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 197 [1/2] (2.77ns)   --->   "%data_store_load_1 = load float* %data_store_addr_1, align 4" [Demo/source/DWT.cpp:85]   --->   Operation 197 'load' 'data_store_load_1' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10240> <RAM>
ST_14 : Operation 198 [1/3] (8.43ns)   --->   "%tmp_37 = fmul float %data_input_load, %filter_h_load" [Demo/source/DWT.cpp:86]   --->   Operation 198 'fmul' 'tmp_37' <Predicate = true> <Delay = 8.43> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 2> <II = 1> <Delay = 8.43> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 199 [1/2] (2.77ns)   --->   "%data_output_load_1 = load float* %data_output_addr_1, align 4" [Demo/source/DWT.cpp:86]   --->   Operation 199 'load' 'data_output_load_1' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10240> <RAM>

State 15 <SV = 13> <Delay = 8.58>
ST_15 : Operation 200 [4/4] (8.58ns)   --->   "%tmp_35 = fadd float %data_store_load_1, %tmp_34" [Demo/source/DWT.cpp:85]   --->   Operation 200 'fadd' 'tmp_35' <Predicate = true> <Delay = 8.58> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 3> <II = 1> <Delay = 8.58> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 201 [4/4] (8.58ns)   --->   "%tmp_38 = fadd float %data_output_load_1, %tmp_37" [Demo/source/DWT.cpp:86]   --->   Operation 201 'fadd' 'tmp_38' <Predicate = true> <Delay = 8.58> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 3> <II = 1> <Delay = 8.58> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 14> <Delay = 8.58>
ST_16 : Operation 202 [3/4] (8.58ns)   --->   "%tmp_35 = fadd float %data_store_load_1, %tmp_34" [Demo/source/DWT.cpp:85]   --->   Operation 202 'fadd' 'tmp_35' <Predicate = true> <Delay = 8.58> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 3> <II = 1> <Delay = 8.58> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 203 [3/4] (8.58ns)   --->   "%tmp_38 = fadd float %data_output_load_1, %tmp_37" [Demo/source/DWT.cpp:86]   --->   Operation 203 'fadd' 'tmp_38' <Predicate = true> <Delay = 8.58> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 3> <II = 1> <Delay = 8.58> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 15> <Delay = 8.58>
ST_17 : Operation 204 [2/4] (8.58ns)   --->   "%tmp_35 = fadd float %data_store_load_1, %tmp_34" [Demo/source/DWT.cpp:85]   --->   Operation 204 'fadd' 'tmp_35' <Predicate = true> <Delay = 8.58> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 3> <II = 1> <Delay = 8.58> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 205 [2/4] (8.58ns)   --->   "%tmp_38 = fadd float %data_output_load_1, %tmp_37" [Demo/source/DWT.cpp:86]   --->   Operation 205 'fadd' 'tmp_38' <Predicate = true> <Delay = 8.58> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 3> <II = 1> <Delay = 8.58> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 16> <Delay = 8.58>
ST_18 : Operation 206 [1/4] (8.58ns)   --->   "%tmp_35 = fadd float %data_store_load_1, %tmp_34" [Demo/source/DWT.cpp:85]   --->   Operation 206 'fadd' 'tmp_35' <Predicate = true> <Delay = 8.58> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 3> <II = 1> <Delay = 8.58> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 207 [1/4] (8.58ns)   --->   "%tmp_38 = fadd float %data_output_load_1, %tmp_37" [Demo/source/DWT.cpp:86]   --->   Operation 207 'fadd' 'tmp_38' <Predicate = true> <Delay = 8.58> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 3> <II = 1> <Delay = 8.58> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 17> <Delay = 2.77>
ST_19 : Operation 208 [1/1] (2.77ns)   --->   "store float %tmp_35, float* %data_store_addr_1, align 4" [Demo/source/DWT.cpp:85]   --->   Operation 208 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10240> <RAM>
ST_19 : Operation 209 [1/1] (2.77ns)   --->   "store float %tmp_38, float* %data_output_addr_1, align 4" [Demo/source/DWT.cpp:86]   --->   Operation 209 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10240> <RAM>
ST_19 : Operation 210 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([6 x i8]* @p_str6, i32 %tmp_28) nounwind" [Demo/source/DWT.cpp:87]   --->   Operation 210 'specregionend' 'empty' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 211 [1/1] (0.00ns)   --->   "br label %5" [Demo/source/DWT.cpp:80]   --->   Operation 211 'br' <Predicate = true> <Delay = 0.00>

State 20 <SV = 8> <Delay = 2.77>
ST_20 : Operation 212 [1/1] (0.00ns)   --->   "%i2 = phi i31 [ 0, %7 ], [ %i_2, %9 ]"   --->   Operation 212 'phi' 'i2' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 213 [1/1] (0.00ns)   --->   "%i2_cast = zext i31 %i2 to i32" [Demo/source/DWT.cpp:92]   --->   Operation 213 'zext' 'i2_cast' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 214 [1/1] (1.96ns)   --->   "%tmp_22 = icmp sgt i32 %i2_cast, %tmp_14" [Demo/source/DWT.cpp:92]   --->   Operation 214 'icmp' 'tmp_22' <Predicate = true> <Delay = 1.96> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 215 [1/1] (1.87ns)   --->   "%i_2 = add i31 %i2, 1" [Demo/source/DWT.cpp:92]   --->   Operation 215 'add' 'i_2' <Predicate = true> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 216 [1/1] (0.00ns)   --->   "br i1 %tmp_22, label %.preheader11.preheader, label %9" [Demo/source/DWT.cpp:92]   --->   Operation 216 'br' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 217 [1/1] (0.00ns)   --->   "%tmp_25 = call i32 @_ssdm_op_BitConcatenate.i32.i31.i1(i31 %i2, i1 false)" [Demo/source/DWT.cpp:94]   --->   Operation 217 'bitconcatenate' 'tmp_25' <Predicate = (!tmp_22)> <Delay = 0.00>
ST_20 : Operation 218 [1/1] (0.00ns)   --->   "%tmp_26 = zext i32 %tmp_25 to i64" [Demo/source/DWT.cpp:94]   --->   Operation 218 'zext' 'tmp_26' <Predicate = (!tmp_22)> <Delay = 0.00>
ST_20 : Operation 219 [1/1] (0.00ns)   --->   "%data_store_addr_2 = getelementptr inbounds [2048 x float]* %data_store, i64 0, i64 %tmp_26" [Demo/source/DWT.cpp:94]   --->   Operation 219 'getelementptr' 'data_store_addr_2' <Predicate = (!tmp_22)> <Delay = 0.00>
ST_20 : Operation 220 [2/2] (2.77ns)   --->   "%data_store_load = load float* %data_store_addr_2, align 8" [Demo/source/DWT.cpp:94]   --->   Operation 220 'load' 'data_store_load' <Predicate = (!tmp_22)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10240> <RAM>
ST_20 : Operation 221 [1/1] (0.46ns)   --->   "br label %.preheader11" [Demo/source/DWT.cpp:95]   --->   Operation 221 'br' <Predicate = (tmp_22)> <Delay = 0.46>

State 21 <SV = 9> <Delay = 5.54>
ST_21 : Operation 222 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str7) nounwind" [Demo/source/DWT.cpp:94]   --->   Operation 222 'specloopname' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 223 [1/1] (0.00ns)   --->   "%tmp_24 = call i32 (...)* @_ssdm_op_SpecRegionBegin([6 x i8]* @p_str7) nounwind" [Demo/source/DWT.cpp:94]   --->   Operation 223 'specregionbegin' 'tmp_24' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 224 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i32 0, i32 1024, i32 512, [1 x i8]* @p_str1) nounwind" [Demo/source/DWT.cpp:93]   --->   Operation 224 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 225 [1/2] (2.77ns)   --->   "%data_store_load = load float* %data_store_addr_2, align 8" [Demo/source/DWT.cpp:94]   --->   Operation 225 'load' 'data_store_load' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10240> <RAM>
ST_21 : Operation 226 [1/1] (0.00ns)   --->   "%tmp_27 = zext i31 %i2 to i64" [Demo/source/DWT.cpp:94]   --->   Operation 226 'zext' 'tmp_27' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 227 [1/1] (0.00ns)   --->   "%data_input_addr_2 = getelementptr inbounds [2048 x float]* %data_input, i64 0, i64 %tmp_27" [Demo/source/DWT.cpp:94]   --->   Operation 227 'getelementptr' 'data_input_addr_2' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 228 [1/1] (2.77ns)   --->   "store float %data_store_load, float* %data_input_addr_2, align 4" [Demo/source/DWT.cpp:94]   --->   Operation 228 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10240> <RAM>
ST_21 : Operation 229 [1/1] (0.00ns)   --->   "%empty_28 = call i32 (...)* @_ssdm_op_SpecRegionEnd([6 x i8]* @p_str7, i32 %tmp_24) nounwind" [Demo/source/DWT.cpp:94]   --->   Operation 229 'specregionend' 'empty_28' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 230 [1/1] (0.00ns)   --->   "br label %8" [Demo/source/DWT.cpp:92]   --->   Operation 230 'br' <Predicate = true> <Delay = 0.00>

State 22 <SV = 9> <Delay = 2.77>
ST_22 : Operation 231 [1/1] (0.00ns)   --->   "%i3 = phi i32 [ %i_3, %10 ], [ %i_7, %.preheader11.preheader ]"   --->   Operation 231 'phi' 'i3' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 232 [1/1] (0.00ns)   --->   "%tmp_50 = call i22 @_ssdm_op_PartSelect.i22.i32.i32.i32(i32 %i3, i32 10, i32 31)" [Demo/source/DWT.cpp:95]   --->   Operation 232 'partselect' 'tmp_50' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 233 [1/1] (2.02ns)   --->   "%icmp = icmp slt i22 %tmp_50, 1" [Demo/source/DWT.cpp:95]   --->   Operation 233 'icmp' 'icmp' <Predicate = true> <Delay = 2.02> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 234 [1/1] (0.00ns)   --->   "br i1 %icmp, label %10, label %.preheader10.preheader" [Demo/source/DWT.cpp:95]   --->   Operation 234 'br' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 235 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str8) nounwind" [Demo/source/DWT.cpp:97]   --->   Operation 235 'specloopname' <Predicate = (icmp)> <Delay = 0.00>
ST_22 : Operation 236 [1/1] (0.00ns)   --->   "%tmp_39 = call i32 (...)* @_ssdm_op_SpecRegionBegin([6 x i8]* @p_str8) nounwind" [Demo/source/DWT.cpp:97]   --->   Operation 236 'specregionbegin' 'tmp_39' <Predicate = (icmp)> <Delay = 0.00>
ST_22 : Operation 237 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i32 0, i32 1024, i32 512, [1 x i8]* @p_str1) nounwind" [Demo/source/DWT.cpp:96]   --->   Operation 237 'speclooptripcount' <Predicate = (icmp)> <Delay = 0.00>
ST_22 : Operation 238 [1/1] (0.00ns)   --->   "%tmp_36 = sext i32 %i3 to i64" [Demo/source/DWT.cpp:97]   --->   Operation 238 'sext' 'tmp_36' <Predicate = (icmp)> <Delay = 0.00>
ST_22 : Operation 239 [1/1] (0.00ns)   --->   "%data_input_addr_4 = getelementptr inbounds [2048 x float]* %data_input, i64 0, i64 %tmp_36" [Demo/source/DWT.cpp:97]   --->   Operation 239 'getelementptr' 'data_input_addr_4' <Predicate = (icmp)> <Delay = 0.00>
ST_22 : Operation 240 [1/1] (2.77ns)   --->   "store float 0.000000e+00, float* %data_input_addr_4, align 4" [Demo/source/DWT.cpp:97]   --->   Operation 240 'store' <Predicate = (icmp)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10240> <RAM>
ST_22 : Operation 241 [1/1] (0.00ns)   --->   "%empty_29 = call i32 (...)* @_ssdm_op_SpecRegionEnd([6 x i8]* @p_str8, i32 %tmp_39) nounwind" [Demo/source/DWT.cpp:97]   --->   Operation 241 'specregionend' 'empty_29' <Predicate = (icmp)> <Delay = 0.00>
ST_22 : Operation 242 [1/1] (1.89ns)   --->   "%i_3 = add nsw i32 %i3, 1" [Demo/source/DWT.cpp:95]   --->   Operation 242 'add' 'i_3' <Predicate = (icmp)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 243 [1/1] (0.00ns)   --->   "br label %.preheader11" [Demo/source/DWT.cpp:95]   --->   Operation 243 'br' <Predicate = (icmp)> <Delay = 0.00>
ST_22 : Operation 244 [1/1] (0.46ns)   --->   "br label %.preheader10" [Demo/source/DWT.cpp:98]   --->   Operation 244 'br' <Predicate = (!icmp)> <Delay = 0.46>

State 23 <SV = 10> <Delay = 4.30>
ST_23 : Operation 245 [1/1] (0.00ns)   --->   "%i4 = phi i31 [ %i_4, %11 ], [ 0, %.preheader10.preheader ]"   --->   Operation 245 'phi' 'i4' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 246 [1/1] (0.00ns)   --->   "%i4_cast = zext i31 %i4 to i32" [Demo/source/DWT.cpp:98]   --->   Operation 246 'zext' 'i4_cast' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 247 [1/1] (1.96ns)   --->   "%tmp_40 = icmp sgt i32 %i4_cast, %tmp_14" [Demo/source/DWT.cpp:98]   --->   Operation 247 'icmp' 'tmp_40' <Predicate = true> <Delay = 1.96> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 248 [1/1] (1.87ns)   --->   "%i_4 = add i31 %i4, 1" [Demo/source/DWT.cpp:98]   --->   Operation 248 'add' 'i_4' <Predicate = true> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 249 [1/1] (0.00ns)   --->   "br i1 %tmp_40, label %.preheader9.preheader, label %11" [Demo/source/DWT.cpp:98]   --->   Operation 249 'br' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 250 [1/1] (0.00ns)   --->   "%tmp_53 = trunc i31 %i4 to i14" [Demo/source/DWT.cpp:98]   --->   Operation 250 'trunc' 'tmp_53' <Predicate = (!tmp_40)> <Delay = 0.00>
ST_23 : Operation 251 [1/1] (0.00ns)   --->   "%tmp_43_cast = call i15 @_ssdm_op_BitConcatenate.i15.i14.i1(i14 %tmp_53, i1 false)" [Demo/source/DWT.cpp:100]   --->   Operation 251 'bitconcatenate' 'tmp_43_cast' <Predicate = (!tmp_40)> <Delay = 0.00>
ST_23 : Operation 252 [1/1] (1.53ns)   --->   "%tmp_54 = add i15 %tmp_50_cast, %tmp_43_cast" [Demo/source/DWT.cpp:100]   --->   Operation 252 'add' 'tmp_54' <Predicate = (!tmp_40)> <Delay = 1.53> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 253 [1/1] (0.00ns)   --->   "%tmp_59_cast = zext i15 %tmp_54 to i64" [Demo/source/DWT.cpp:100]   --->   Operation 253 'zext' 'tmp_59_cast' <Predicate = (!tmp_40)> <Delay = 0.00>
ST_23 : Operation 254 [1/1] (0.00ns)   --->   "%data_output_addr_3 = getelementptr [10240 x float]* %data_output, i64 0, i64 %tmp_59_cast" [Demo/source/DWT.cpp:100]   --->   Operation 254 'getelementptr' 'data_output_addr_3' <Predicate = (!tmp_40)> <Delay = 0.00>
ST_23 : Operation 255 [2/2] (2.77ns)   --->   "%data_output_load_2 = load float* %data_output_addr_3, align 8" [Demo/source/DWT.cpp:100]   --->   Operation 255 'load' 'data_output_load_2' <Predicate = (!tmp_40)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10240> <RAM>
ST_23 : Operation 256 [1/1] (0.00ns)   --->   "%tmp_55 = trunc i31 %i4 to i15" [Demo/source/DWT.cpp:100]   --->   Operation 256 'trunc' 'tmp_55' <Predicate = (!tmp_40)> <Delay = 0.00>
ST_23 : Operation 257 [1/1] (0.46ns)   --->   "br label %.preheader9" [Demo/source/DWT.cpp:101]   --->   Operation 257 'br' <Predicate = (tmp_40)> <Delay = 0.46>

State 24 <SV = 11> <Delay = 5.54>
ST_24 : Operation 258 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str9) nounwind" [Demo/source/DWT.cpp:100]   --->   Operation 258 'specloopname' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 259 [1/1] (0.00ns)   --->   "%tmp_41 = call i32 (...)* @_ssdm_op_SpecRegionBegin([6 x i8]* @p_str9) nounwind" [Demo/source/DWT.cpp:100]   --->   Operation 259 'specregionbegin' 'tmp_41' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 260 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i32 0, i32 1024, i32 512, [1 x i8]* @p_str1) nounwind" [Demo/source/DWT.cpp:99]   --->   Operation 260 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 261 [1/2] (2.77ns)   --->   "%data_output_load_2 = load float* %data_output_addr_3, align 8" [Demo/source/DWT.cpp:100]   --->   Operation 261 'load' 'data_output_load_2' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10240> <RAM>
ST_24 : Operation 262 [1/1] (1.53ns)   --->   "%tmp_56 = add i15 %tmp_50_cast, %tmp_55" [Demo/source/DWT.cpp:100]   --->   Operation 262 'add' 'tmp_56' <Predicate = true> <Delay = 1.53> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 263 [1/1] (0.00ns)   --->   "%tmp_60_cast = zext i15 %tmp_56 to i64" [Demo/source/DWT.cpp:100]   --->   Operation 263 'zext' 'tmp_60_cast' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 264 [1/1] (0.00ns)   --->   "%data_output_addr_4 = getelementptr [10240 x float]* %data_output, i64 0, i64 %tmp_60_cast" [Demo/source/DWT.cpp:100]   --->   Operation 264 'getelementptr' 'data_output_addr_4' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 265 [1/1] (2.77ns)   --->   "store float %data_output_load_2, float* %data_output_addr_4, align 4" [Demo/source/DWT.cpp:100]   --->   Operation 265 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10240> <RAM>
ST_24 : Operation 266 [1/1] (0.00ns)   --->   "%empty_30 = call i32 (...)* @_ssdm_op_SpecRegionEnd([6 x i8]* @p_str9, i32 %tmp_41) nounwind" [Demo/source/DWT.cpp:100]   --->   Operation 266 'specregionend' 'empty_30' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 267 [1/1] (0.00ns)   --->   "br label %.preheader10" [Demo/source/DWT.cpp:98]   --->   Operation 267 'br' <Predicate = true> <Delay = 0.00>

State 25 <SV = 11> <Delay = 4.30>
ST_25 : Operation 268 [1/1] (0.00ns)   --->   "%i5 = phi i32 [ %i_5, %12 ], [ %i_7, %.preheader9.preheader ]"   --->   Operation 268 'phi' 'i5' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 269 [1/1] (0.00ns)   --->   "%tmp_57 = call i22 @_ssdm_op_PartSelect.i22.i32.i32.i32(i32 %i5, i32 10, i32 31)" [Demo/source/DWT.cpp:101]   --->   Operation 269 'partselect' 'tmp_57' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 270 [1/1] (2.02ns)   --->   "%icmp5 = icmp slt i22 %tmp_57, 1" [Demo/source/DWT.cpp:101]   --->   Operation 270 'icmp' 'icmp5' <Predicate = true> <Delay = 2.02> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 271 [1/1] (0.00ns)   --->   "br i1 %icmp5, label %12, label %.preheader8.preheader" [Demo/source/DWT.cpp:101]   --->   Operation 271 'br' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 272 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str10) nounwind" [Demo/source/DWT.cpp:103]   --->   Operation 272 'specloopname' <Predicate = (icmp5)> <Delay = 0.00>
ST_25 : Operation 273 [1/1] (0.00ns)   --->   "%tmp_46 = call i32 (...)* @_ssdm_op_SpecRegionBegin([6 x i8]* @p_str10) nounwind" [Demo/source/DWT.cpp:103]   --->   Operation 273 'specregionbegin' 'tmp_46' <Predicate = (icmp5)> <Delay = 0.00>
ST_25 : Operation 274 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i32 0, i32 1024, i32 512, [1 x i8]* @p_str1) nounwind" [Demo/source/DWT.cpp:102]   --->   Operation 274 'speclooptripcount' <Predicate = (icmp5)> <Delay = 0.00>
ST_25 : Operation 275 [1/1] (0.00ns)   --->   "%tmp_58 = trunc i32 %i5 to i15" [Demo/source/DWT.cpp:103]   --->   Operation 275 'trunc' 'tmp_58' <Predicate = (icmp5)> <Delay = 0.00>
ST_25 : Operation 276 [1/1] (1.53ns)   --->   "%tmp_59 = add i15 %tmp_50_cast, %tmp_58" [Demo/source/DWT.cpp:103]   --->   Operation 276 'add' 'tmp_59' <Predicate = (icmp5)> <Delay = 1.53> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 277 [1/1] (0.00ns)   --->   "%tmp_61_cast = sext i15 %tmp_59 to i64" [Demo/source/DWT.cpp:103]   --->   Operation 277 'sext' 'tmp_61_cast' <Predicate = (icmp5)> <Delay = 0.00>
ST_25 : Operation 278 [1/1] (0.00ns)   --->   "%data_output_addr_5 = getelementptr [10240 x float]* %data_output, i64 0, i64 %tmp_61_cast" [Demo/source/DWT.cpp:103]   --->   Operation 278 'getelementptr' 'data_output_addr_5' <Predicate = (icmp5)> <Delay = 0.00>
ST_25 : Operation 279 [1/1] (2.77ns)   --->   "store float 0.000000e+00, float* %data_output_addr_5, align 4" [Demo/source/DWT.cpp:103]   --->   Operation 279 'store' <Predicate = (icmp5)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10240> <RAM>
ST_25 : Operation 280 [1/1] (0.00ns)   --->   "%empty_31 = call i32 (...)* @_ssdm_op_SpecRegionEnd([6 x i8]* @p_str10, i32 %tmp_46) nounwind" [Demo/source/DWT.cpp:103]   --->   Operation 280 'specregionend' 'empty_31' <Predicate = (icmp5)> <Delay = 0.00>
ST_25 : Operation 281 [1/1] (1.89ns)   --->   "%i_5 = add nsw i32 1, %i5" [Demo/source/DWT.cpp:101]   --->   Operation 281 'add' 'i_5' <Predicate = (icmp5)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 282 [1/1] (0.00ns)   --->   "br label %.preheader9" [Demo/source/DWT.cpp:101]   --->   Operation 282 'br' <Predicate = (icmp5)> <Delay = 0.00>
ST_25 : Operation 283 [1/1] (0.46ns)   --->   "br label %.preheader8" [Demo/source/DWT.cpp:104]   --->   Operation 283 'br' <Predicate = (!icmp5)> <Delay = 0.46>

State 26 <SV = 12> <Delay = 2.77>
ST_26 : Operation 284 [1/1] (0.00ns)   --->   "%i6 = phi i11 [ %i_6, %13 ], [ 0, %.preheader8.preheader ]"   --->   Operation 284 'phi' 'i6' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 285 [1/1] (1.88ns)   --->   "%exitcond3 = icmp eq i11 %i6, -1024" [Demo/source/DWT.cpp:104]   --->   Operation 285 'icmp' 'exitcond3' <Predicate = true> <Delay = 1.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 286 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 1024, i64 1024, i64 1024)"   --->   Operation 286 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 287 [1/1] (1.48ns)   --->   "%i_6 = add i11 %i6, 1" [Demo/source/DWT.cpp:104]   --->   Operation 287 'add' 'i_6' <Predicate = true> <Delay = 1.48> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 288 [1/1] (0.00ns)   --->   "br i1 %exitcond3, label %.preheader13.loopexit, label %13" [Demo/source/DWT.cpp:104]   --->   Operation 288 'br' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 289 [1/1] (0.00ns)   --->   "%tmp_48 = zext i11 %i6 to i64" [Demo/source/DWT.cpp:105]   --->   Operation 289 'zext' 'tmp_48' <Predicate = (!exitcond3)> <Delay = 0.00>
ST_26 : Operation 290 [1/1] (0.00ns)   --->   "%data_store_addr_3 = getelementptr inbounds [2048 x float]* %data_store, i64 0, i64 %tmp_48" [Demo/source/DWT.cpp:105]   --->   Operation 290 'getelementptr' 'data_store_addr_3' <Predicate = (!exitcond3)> <Delay = 0.00>
ST_26 : Operation 291 [1/1] (2.77ns)   --->   "store float 0.000000e+00, float* %data_store_addr_3, align 4" [Demo/source/DWT.cpp:105]   --->   Operation 291 'store' <Predicate = (!exitcond3)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10240> <RAM>
ST_26 : Operation 292 [1/1] (0.00ns)   --->   "br label %.preheader8" [Demo/source/DWT.cpp:104]   --->   Operation 292 'br' <Predicate = (!exitcond3)> <Delay = 0.00>
ST_26 : Operation 293 [1/1] (0.00ns)   --->   "br label %.preheader13"   --->   Operation 293 'br' <Predicate = (exitcond3)> <Delay = 0.00>

State 27 <SV = 7> <Delay = 4.30>
ST_27 : Operation 294 [1/1] (0.00ns) (grouped into LUT with out node tmp_49)   --->   "%i_load_1 = phi i32 [ %tmp_18, %15 ], [ %i_load, %14 ]" [Demo/source/DWT.cpp:119]   --->   Operation 294 'phi' 'i_load_1' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 295 [1/1] (0.00ns)   --->   "%j_load_2 = phi i32 [ 0, %15 ], [ %j_load, %14 ]" [Demo/source/DWT.cpp:116]   --->   Operation 295 'phi' 'j_load_2' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 296 [1/1] (0.00ns) (grouped into LUT with out node tmp_49)   --->   "%tmp_45 = trunc i32 %j_load_2 to i15" [Demo/source/DWT.cpp:116]   --->   Operation 296 'trunc' 'tmp_45' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 297 [1/1] (0.00ns) (grouped into LUT with out node tmp_49)   --->   "%tmp_47 = trunc i32 %i_load_1 to i4" [Demo/source/DWT.cpp:119]   --->   Operation 297 'trunc' 'tmp_47' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 298 [1/1] (0.00ns) (grouped into LUT with out node tmp_49)   --->   "%tmp_56_cast = call i15 @_ssdm_op_BitConcatenate.i15.i4.i11(i4 %tmp_47, i11 0)" [Demo/source/DWT.cpp:122]   --->   Operation 298 'bitconcatenate' 'tmp_56_cast' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 299 [1/1] (1.53ns) (out node of the LUT)   --->   "%tmp_49 = add i15 %tmp_56_cast, %tmp_45" [Demo/source/DWT.cpp:122]   --->   Operation 299 'add' 'tmp_49' <Predicate = true> <Delay = 1.53> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 300 [1/1] (0.00ns)   --->   "%tmp_57_cast = sext i15 %tmp_49 to i64" [Demo/source/DWT.cpp:122]   --->   Operation 300 'sext' 'tmp_57_cast' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 301 [1/1] (0.00ns)   --->   "%data_output_addr_2 = getelementptr [10240 x float]* %data_output, i64 0, i64 %tmp_57_cast" [Demo/source/DWT.cpp:122]   --->   Operation 301 'getelementptr' 'data_output_addr_2' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 302 [2/2] (2.77ns)   --->   "%data_output_load = load float* %data_output_addr_2, align 4" [Demo/source/DWT.cpp:122]   --->   Operation 302 'load' 'data_output_load' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10240> <RAM>
ST_27 : Operation 303 [1/1] (1.89ns)   --->   "%tmp_21 = add nsw i32 1, %j_load_2" [Demo/source/DWT.cpp:124]   --->   Operation 303 'add' 'tmp_21' <Predicate = true> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 304 [1/1] (0.00ns)   --->   "store i32 %tmp_21, i32* @j, align 4" [Demo/source/DWT.cpp:124]   --->   Operation 304 'store' <Predicate = true> <Delay = 0.00>

State 28 <SV = 8> <Delay = 2.77>
ST_28 : Operation 305 [1/2] (2.77ns)   --->   "%data_output_load = load float* %data_output_addr_2, align 4" [Demo/source/DWT.cpp:122]   --->   Operation 305 'load' 'data_output_load' <Predicate = (tmp_3_i & !tmp_11) | (cal_flag_load & !tmp_11)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10240> <RAM>
ST_28 : Operation 306 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.floatP(float* %data_out, float %data_output_load) nounwind" [Demo/source/DWT.cpp:122]   --->   Operation 306 'write' <Predicate = (tmp_3_i & !tmp_11) | (cal_flag_load & !tmp_11)> <Delay = 0.00>
ST_28 : Operation 307 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %write_valid, i32 1) nounwind" [Demo/source/DWT.cpp:123]   --->   Operation 307 'write' <Predicate = (tmp_3_i & !tmp_11) | (cal_flag_load & !tmp_11)> <Delay = 0.00>
ST_28 : Operation 308 [1/1] (0.00ns)   --->   "br label %.loopexit" [Demo/source/DWT.cpp:126]   --->   Operation 308 'br' <Predicate = (tmp_3_i & !tmp_11) | (cal_flag_load & !tmp_11)> <Delay = 0.00>
ST_28 : Operation 309 [1/1] (0.00ns)   --->   "ret void" [Demo/source/DWT.cpp:152]   --->   Operation 309 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 5.2ns
The critical path consists of the following:
	wire read on port 'read_valid' (Demo/source/DWT.cpp:49) [29]  (0 ns)
	'icmp' operation ('tmp_i', Demo/source/DWT.cpp:25->Demo/source/DWT.cpp:49) [30]  (1.97 ns)
	multiplexor before 'phi' operation ('cnt_loc_i', Demo/source/DWT.cpp:27->Demo/source/DWT.cpp:49) with incoming values : ('cnt_load', Demo/source/DWT.cpp:27->Demo/source/DWT.cpp:49) ('tmp_1_i', Demo/source/DWT.cpp:27->Demo/source/DWT.cpp:49) [41]  (0.466 ns)
	'phi' operation ('cnt_loc_i', Demo/source/DWT.cpp:27->Demo/source/DWT.cpp:49) with incoming values : ('cnt_load', Demo/source/DWT.cpp:27->Demo/source/DWT.cpp:49) ('tmp_1_i', Demo/source/DWT.cpp:27->Demo/source/DWT.cpp:49) [41]  (0 ns)
	'icmp' operation ('tmp_3_i', Demo/source/DWT.cpp:30->Demo/source/DWT.cpp:49) [43]  (1.97 ns)
	'or' operation ('read_ready', Demo/source/DWT.cpp:30->Demo/source/DWT.cpp:49) [44]  (0.8 ns)

 <State 2>: 2.77ns
The critical path consists of the following:
	'phi' operation ('invdar', Demo/source/DWT.cpp:52) with incoming values : ('indvarinc', Demo/source/DWT.cpp:52) [53]  (0 ns)
	'getelementptr' operation ('data_store_addr', Demo/source/DWT.cpp:52) [56]  (0 ns)
	'store' operation (Demo/source/DWT.cpp:52) of constant 0 on array 'data_store', Demo/source/DWT.cpp:42 [57]  (2.77 ns)

 <State 3>: 0.768ns
The critical path consists of the following:
	'phi' operation ('invdar1', Demo/source/DWT.cpp:53) with incoming values : ('indvarinc1', Demo/source/DWT.cpp:53) [65]  (0 ns)
	'add' operation ('indvarinc1', Demo/source/DWT.cpp:53) [66]  (0.768 ns)

 <State 4>: 2.77ns
The critical path consists of the following:
	'phi' operation ('invdar2', Demo/source/DWT.cpp:53) with incoming values : ('indvarinc2', Demo/source/DWT.cpp:53) [70]  (0 ns)
	'getelementptr' operation ('data_output_addr', Demo/source/DWT.cpp:53) [74]  (0 ns)
	'store' operation (Demo/source/DWT.cpp:53) of constant 0 on array 'data_output', Demo/source/DWT.cpp:43 [75]  (2.77 ns)

 <State 5>: 2.77ns
The critical path consists of the following:
	'phi' operation ('invdar3', Demo/source/DWT.cpp:54) with incoming values : ('indvarinc3', Demo/source/DWT.cpp:54) [87]  (0 ns)
	'getelementptr' operation ('data_input_addr', Demo/source/DWT.cpp:54) [90]  (0 ns)
	'store' operation (Demo/source/DWT.cpp:54) of constant 0 on array 'data_input', Demo/source/DWT.cpp:41 [91]  (2.77 ns)

 <State 6>: 2.77ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', Demo/source/DWT.cpp:72) [99]  (0 ns)
	'getelementptr' operation ('data_in_addr', Demo/source/DWT.cpp:73) [106]  (0 ns)
	'load' operation ('data_in_load', Demo/source/DWT.cpp:73) on array 'data_in' [107]  (2.77 ns)

 <State 7>: 5.54ns
The critical path consists of the following:
	'load' operation ('data_in_load', Demo/source/DWT.cpp:73) on array 'data_in' [107]  (2.77 ns)
	'store' operation (Demo/source/DWT.cpp:73) of variable 'data_in_load', Demo/source/DWT.cpp:73 on array 'data_input', Demo/source/DWT.cpp:41 [109]  (2.77 ns)

 <State 8>: 2.43ns
The critical path consists of the following:
	'load' operation ('j_load', Demo/source/DWT.cpp:116) on static variable 'j' [297]  (0 ns)
	'icmp' operation ('tmp_13', Demo/source/DWT.cpp:116) [298]  (1.97 ns)
	multiplexor before 'phi' operation ('i_load_1', Demo/source/DWT.cpp:119) with incoming values : ('i_load', Demo/source/DWT.cpp:114) ('tmp_18', Demo/source/DWT.cpp:119) [305]  (0.466 ns)

 <State 9>: 6.37ns
The critical path consists of the following:
	'sub' operation ('p_neg', Demo/source/DWT.cpp:90) [185]  (1.9 ns)
	'sub' operation ('p_neg_t', Demo/source/DWT.cpp:90) [188]  (1.87 ns)
	'select' operation ('i', Demo/source/DWT.cpp:90) [191]  (0.705 ns)
	'add' operation ('tmp_14', Demo/source/DWT.cpp:92) [192]  (1.9 ns)

 <State 10>: 4.67ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', Demo/source/DWT.cpp:80) [148]  (0 ns)
	'sub' operation ('tmp_31', Demo/source/DWT.cpp:85) [159]  (1.9 ns)
	'getelementptr' operation ('data_input_addr_3', Demo/source/DWT.cpp:85) [161]  (0 ns)
	'load' operation ('data_input_load', Demo/source/DWT.cpp:85) on array 'data_input', Demo/source/DWT.cpp:41 [162]  (2.77 ns)

 <State 11>: 2.77ns
The critical path consists of the following:
	'load' operation ('data_input_load', Demo/source/DWT.cpp:85) on array 'data_input', Demo/source/DWT.cpp:41 [162]  (2.77 ns)

 <State 12>: 8.43ns
The critical path consists of the following:
	'fmul' operation ('tmp_34', Demo/source/DWT.cpp:85) [169]  (8.43 ns)

 <State 13>: 8.43ns
The critical path consists of the following:
	'fmul' operation ('tmp_34', Demo/source/DWT.cpp:85) [169]  (8.43 ns)

 <State 14>: 8.43ns
The critical path consists of the following:
	'fmul' operation ('tmp_34', Demo/source/DWT.cpp:85) [169]  (8.43 ns)

 <State 15>: 8.59ns
The critical path consists of the following:
	'fadd' operation ('tmp_35', Demo/source/DWT.cpp:85) [171]  (8.59 ns)

 <State 16>: 8.59ns
The critical path consists of the following:
	'fadd' operation ('tmp_35', Demo/source/DWT.cpp:85) [171]  (8.59 ns)

 <State 17>: 8.59ns
The critical path consists of the following:
	'fadd' operation ('tmp_35', Demo/source/DWT.cpp:85) [171]  (8.59 ns)

 <State 18>: 8.59ns
The critical path consists of the following:
	'fadd' operation ('tmp_35', Demo/source/DWT.cpp:85) [171]  (8.59 ns)

 <State 19>: 2.77ns
The critical path consists of the following:
	'store' operation (Demo/source/DWT.cpp:85) of variable 'tmp_35', Demo/source/DWT.cpp:85 on array 'data_store', Demo/source/DWT.cpp:42 [172]  (2.77 ns)

 <State 20>: 2.77ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', Demo/source/DWT.cpp:92) [195]  (0 ns)
	'getelementptr' operation ('data_store_addr_2', Demo/source/DWT.cpp:94) [206]  (0 ns)
	'load' operation ('data_store_load', Demo/source/DWT.cpp:94) on array 'data_store', Demo/source/DWT.cpp:42 [207]  (2.77 ns)

 <State 21>: 5.54ns
The critical path consists of the following:
	'load' operation ('data_store_load', Demo/source/DWT.cpp:94) on array 'data_store', Demo/source/DWT.cpp:42 [207]  (2.77 ns)
	'store' operation (Demo/source/DWT.cpp:94) of variable 'data_store_load', Demo/source/DWT.cpp:94 on array 'data_input', Demo/source/DWT.cpp:41 [210]  (2.77 ns)

 <State 22>: 2.77ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', Demo/source/DWT.cpp:90) ('i', Demo/source/DWT.cpp:95) [216]  (0 ns)
	'getelementptr' operation ('data_input_addr_4', Demo/source/DWT.cpp:97) [225]  (0 ns)
	'store' operation (Demo/source/DWT.cpp:97) of constant 0 on array 'data_input', Demo/source/DWT.cpp:41 [226]  (2.77 ns)

 <State 23>: 4.31ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', Demo/source/DWT.cpp:98) [233]  (0 ns)
	'add' operation ('tmp_54', Demo/source/DWT.cpp:100) [244]  (1.54 ns)
	'getelementptr' operation ('data_output_addr_3', Demo/source/DWT.cpp:100) [246]  (0 ns)
	'load' operation ('data_output_load_2', Demo/source/DWT.cpp:100) on array 'data_output', Demo/source/DWT.cpp:43 [247]  (2.77 ns)

 <State 24>: 5.54ns
The critical path consists of the following:
	'load' operation ('data_output_load_2', Demo/source/DWT.cpp:100) on array 'data_output', Demo/source/DWT.cpp:43 [247]  (2.77 ns)
	'store' operation (Demo/source/DWT.cpp:100) of variable 'data_output_load_2', Demo/source/DWT.cpp:100 on array 'data_output', Demo/source/DWT.cpp:43 [252]  (2.77 ns)

 <State 25>: 4.31ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', Demo/source/DWT.cpp:90) ('i', Demo/source/DWT.cpp:101) [258]  (0 ns)
	'add' operation ('tmp_59', Demo/source/DWT.cpp:103) [267]  (1.54 ns)
	'getelementptr' operation ('data_output_addr_5', Demo/source/DWT.cpp:103) [269]  (0 ns)
	'store' operation (Demo/source/DWT.cpp:103) of constant 0 on array 'data_output', Demo/source/DWT.cpp:43 [270]  (2.77 ns)

 <State 26>: 2.77ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', Demo/source/DWT.cpp:104) [277]  (0 ns)
	'getelementptr' operation ('data_store_addr_3', Demo/source/DWT.cpp:105) [284]  (0 ns)
	'store' operation (Demo/source/DWT.cpp:105) of constant 0 on array 'data_store', Demo/source/DWT.cpp:42 [285]  (2.77 ns)

 <State 27>: 4.31ns
The critical path consists of the following:
	'phi' operation ('i_load_1', Demo/source/DWT.cpp:119) with incoming values : ('i_load', Demo/source/DWT.cpp:114) ('tmp_18', Demo/source/DWT.cpp:119) [305]  (0 ns)
	'add' operation ('tmp_49', Demo/source/DWT.cpp:122) [310]  (1.54 ns)
	'getelementptr' operation ('data_output_addr_2', Demo/source/DWT.cpp:122) [312]  (0 ns)
	'load' operation ('data_output_load', Demo/source/DWT.cpp:122) on array 'data_output', Demo/source/DWT.cpp:43 [313]  (2.77 ns)

 <State 28>: 2.77ns
The critical path consists of the following:
	'load' operation ('data_output_load', Demo/source/DWT.cpp:122) on array 'data_output', Demo/source/DWT.cpp:43 [313]  (2.77 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
