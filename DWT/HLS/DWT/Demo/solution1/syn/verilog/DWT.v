// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="DWT,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.588000,HLS_SYN_LAT=65211,HLS_SYN_TPT=none,HLS_SYN_MEM=50,HLS_SYN_DSP=10,HLS_SYN_FF=1803,HLS_SYN_LUT=2325,HLS_VERSION=2018_3}" *)

module DWT (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_out,
        data_out_ap_vld,
        data,
        read_valid,
        read_ready,
        read_ready_ap_vld,
        read_over,
        read_over_ap_vld,
        write_valid,
        write_valid_ap_vld
);

parameter    ap_ST_fsm_state1 = 28'd1;
parameter    ap_ST_fsm_state2 = 28'd2;
parameter    ap_ST_fsm_state3 = 28'd4;
parameter    ap_ST_fsm_state4 = 28'd8;
parameter    ap_ST_fsm_state5 = 28'd16;
parameter    ap_ST_fsm_state6 = 28'd32;
parameter    ap_ST_fsm_state7 = 28'd64;
parameter    ap_ST_fsm_state8 = 28'd128;
parameter    ap_ST_fsm_state9 = 28'd256;
parameter    ap_ST_fsm_state10 = 28'd512;
parameter    ap_ST_fsm_state11 = 28'd1024;
parameter    ap_ST_fsm_state12 = 28'd2048;
parameter    ap_ST_fsm_state13 = 28'd4096;
parameter    ap_ST_fsm_state14 = 28'd8192;
parameter    ap_ST_fsm_state15 = 28'd16384;
parameter    ap_ST_fsm_state16 = 28'd32768;
parameter    ap_ST_fsm_state17 = 28'd65536;
parameter    ap_ST_fsm_state18 = 28'd131072;
parameter    ap_ST_fsm_state19 = 28'd262144;
parameter    ap_ST_fsm_state20 = 28'd524288;
parameter    ap_ST_fsm_state21 = 28'd1048576;
parameter    ap_ST_fsm_state22 = 28'd2097152;
parameter    ap_ST_fsm_state23 = 28'd4194304;
parameter    ap_ST_fsm_state24 = 28'd8388608;
parameter    ap_ST_fsm_state25 = 28'd16777216;
parameter    ap_ST_fsm_state26 = 28'd33554432;
parameter    ap_ST_fsm_state27 = 28'd67108864;
parameter    ap_ST_fsm_state28 = 28'd134217728;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] data_out;
output   data_out_ap_vld;
input  [31:0] data;
input  [31:0] read_valid;
output  [31:0] read_ready;
output   read_ready_ap_vld;
output  [31:0] read_over;
output   read_over_ap_vld;
output  [31:0] write_valid;
output   write_valid_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_out_ap_vld;
reg read_ready_ap_vld;
reg read_over_ap_vld;
reg write_valid_ap_vld;

(* fsm_encoding = "none" *) reg   [27:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [0:0] cal_flag;
reg   [31:0] cnt;
reg   [11:0] data_in_address0;
reg    data_in_ce0;
reg    data_in_we0;
wire   [31:0] data_in_q0;
wire   [5:0] filter_g_address0;
reg    filter_g_ce0;
wire   [31:0] filter_g_q0;
wire   [5:0] filter_h_address0;
reg    filter_h_ce0;
wire   [31:0] filter_h_q0;
reg   [31:0] i;
reg   [31:0] j;
wire   [0:0] cal_flag_load_load_fu_587_p1;
reg   [0:0] cal_flag_load_reg_1170;
wire   [0:0] tmp_3_i_fu_620_p2;
reg   [0:0] tmp_3_i_reg_1177;
wire   [10:0] indvarinc_fu_642_p2;
wire    ap_CS_fsm_state2;
wire   [2:0] indvarinc1_fu_659_p2;
reg   [2:0] indvarinc1_reg_1189;
wire    ap_CS_fsm_state3;
wire   [10:0] indvarinc2_fu_665_p2;
wire    ap_CS_fsm_state4;
wire   [10:0] indvarinc3_fu_696_p2;
wire    ap_CS_fsm_state5;
wire   [10:0] i_1_fu_719_p2;
reg   [10:0] i_1_reg_1216;
wire    ap_CS_fsm_state6;
wire   [63:0] tmp_3_fu_725_p1;
reg   [63:0] tmp_3_reg_1221;
wire   [0:0] exitcond5_fu_713_p2;
wire   [2:0] level_1_fu_736_p2;
reg   [2:0] level_1_reg_1234;
wire    ap_CS_fsm_state8;
wire   [31:0] tmp_4_fu_742_p2;
reg   [31:0] tmp_4_reg_1239;
wire   [0:0] exitcond4_fu_730_p2;
wire   [6:0] tmp_16_fu_772_p2;
reg   [6:0] tmp_16_reg_1244;
wire   [14:0] tmp_50_cast_fu_786_p1;
reg   [14:0] tmp_50_cast_reg_1249;
wire   [0:0] tmp_11_fu_800_p2;
reg   [0:0] tmp_11_reg_1262;
wire   [31:0] tmp_18_fu_816_p2;
wire   [0:0] tmp_13_fu_810_p2;
wire   [31:0] n_1_fu_833_p2;
reg   [31:0] n_1_reg_1282;
wire    ap_CS_fsm_state9;
wire   [31:0] tmp_42_fu_839_p2;
reg   [31:0] tmp_42_reg_1287;
wire   [0:0] tmp_12_fu_828_p2;
reg   [13:0] data_output_addr_1_reg_1293;
reg   [10:0] data_store_addr_1_reg_1298;
wire   [31:0] i_7_fu_912_p3;
reg   [31:0] i_7_reg_1303;
wire   [31:0] tmp_14_fu_920_p2;
reg   [31:0] tmp_14_reg_1310;
wire   [31:0] k_1_fu_931_p2;
reg   [31:0] k_1_reg_1319;
wire    ap_CS_fsm_state10;
wire   [0:0] tmp_23_fu_926_p2;
wire   [0:0] tmp_29_fu_937_p2;
wire   [31:0] data_input_q0;
reg   [31:0] data_input_load_reg_1342;
wire    ap_CS_fsm_state11;
reg   [31:0] filter_g_load_reg_1348;
reg   [31:0] filter_h_load_reg_1353;
wire   [31:0] grp_fu_579_p2;
reg   [31:0] tmp_34_reg_1358;
wire    ap_CS_fsm_state14;
wire   [31:0] data_store_q0;
reg   [31:0] data_store_load_1_reg_1363;
wire   [31:0] grp_fu_583_p2;
reg   [31:0] tmp_37_reg_1368;
wire   [31:0] data_output_q0;
reg   [31:0] data_output_load_1_reg_1373;
wire   [31:0] grp_fu_571_p2;
reg   [31:0] tmp_35_reg_1378;
wire    ap_CS_fsm_state18;
wire   [31:0] grp_fu_575_p2;
reg   [31:0] tmp_38_reg_1383;
wire   [30:0] i_2_fu_977_p2;
reg   [30:0] i_2_reg_1391;
wire    ap_CS_fsm_state20;
wire   [0:0] tmp_22_fu_972_p2;
wire   [31:0] i_3_fu_1022_p2;
wire    ap_CS_fsm_state22;
wire   [0:0] icmp_fu_1011_p2;
wire   [30:0] i_4_fu_1037_p2;
reg   [30:0] i_4_reg_1412;
wire    ap_CS_fsm_state23;
wire   [0:0] tmp_40_fu_1032_p2;
wire   [14:0] tmp_55_fu_1065_p1;
reg   [14:0] tmp_55_reg_1422;
wire   [31:0] i_5_fu_1108_p2;
wire    ap_CS_fsm_state25;
wire   [0:0] icmp5_fu_1088_p2;
wire   [10:0] i_6_fu_1120_p2;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
reg   [10:0] data_input_address0;
reg    data_input_ce0;
reg    data_input_we0;
reg   [31:0] data_input_d0;
reg   [10:0] data_store_address0;
reg    data_store_ce0;
reg    data_store_we0;
reg   [31:0] data_store_d0;
reg   [13:0] data_output_address0;
reg    data_output_ce0;
reg    data_output_we0;
reg   [31:0] data_output_d0;
wire   [31:0] tmp_1_i_fu_602_p2;
reg   [31:0] ap_phi_mux_cnt_loc_i_phi_fu_381_p4;
wire   [0:0] tmp_i_fu_591_p2;
reg   [0:0] ap_phi_mux_read_ready_i_phi_fu_390_p4;
reg   [10:0] invdar_reg_398;
wire   [0:0] tmp_6_fu_653_p2;
reg   [2:0] invdar1_reg_409;
wire   [0:0] tmp_9_fu_684_p2;
wire   [0:0] tmp_s_fu_690_p2;
reg   [10:0] invdar2_reg_421;
reg   [10:0] invdar3_reg_432;
wire   [0:0] tmp_2_fu_707_p2;
reg   [10:0] i1_reg_443;
wire    ap_CS_fsm_state7;
reg   [2:0] level_reg_454;
wire   [0:0] exitcond3_fu_1114_p2;
reg   [31:0] cal_length_reg_465;
reg  signed [31:0] n_reg_477;
reg   [31:0] k_reg_488;
wire    ap_CS_fsm_state19;
reg   [30:0] i2_reg_499;
wire    ap_CS_fsm_state21;
reg  signed [31:0] i3_reg_511;
reg   [30:0] i4_reg_520;
wire    ap_CS_fsm_state24;
reg   [31:0] i5_reg_531;
reg   [10:0] i6_reg_540;
reg   [31:0] i_load_1_reg_551;
reg   [31:0] j_load_2_reg_560;
wire  signed [63:0] tmp_2_i_fu_615_p1;
wire   [63:0] tmp_5_fu_648_p1;
wire   [63:0] tmp_7_fu_679_p1;
wire   [63:0] tmp_1_fu_702_p1;
wire  signed [63:0] tmp_54_cast_fu_859_p1;
wire  signed [63:0] tmp_17_fu_845_p1;
wire  signed [63:0] tmp_32_fu_948_p1;
wire  signed [63:0] tmp_58_cast_fu_962_p1;
wire   [63:0] tmp_26_fu_991_p1;
wire   [63:0] tmp_27_fu_996_p1;
wire  signed [63:0] tmp_36_fu_1017_p1;
wire   [63:0] tmp_59_cast_fu_1060_p1;
wire   [63:0] tmp_60_cast_fu_1073_p1;
wire  signed [63:0] tmp_61_cast_fu_1103_p1;
wire   [63:0] tmp_48_fu_1126_p1;
wire  signed [63:0] tmp_57_cast_fu_1153_p1;
wire   [31:0] tmp_21_fu_1158_p2;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state12;
wire  signed [31:0] tmp_1_i_fu_602_p0;
wire  signed [31:0] tmp_2_i_fu_615_p0;
wire   [0:0] read_ready_write_ass_fu_626_p2;
wire   [13:0] tmp_fu_671_p3;
wire   [5:0] tmp_8_fu_748_p3;
wire   [3:0] tmp_10_fu_760_p3;
wire   [6:0] p_shl1_cast_fu_768_p1;
wire   [6:0] p_shl_cast_fu_756_p1;
wire   [13:0] tmp_19_fu_778_p3;
wire   [14:0] tmp_43_fu_850_p1;
wire   [14:0] tmp_44_fu_854_p2;
wire   [31:0] p_neg_fu_872_p2;
wire   [30:0] p_lshr_fu_878_p4;
wire   [31:0] tmp_30_fu_888_p1;
wire   [30:0] p_lshr_f_fu_898_p4;
wire   [0:0] tmp_20_fu_864_p3;
wire   [31:0] p_neg_t_fu_892_p2;
wire   [31:0] tmp_33_fu_908_p1;
wire   [31:0] tmp_31_fu_943_p2;
wire   [6:0] tmp_51_fu_953_p1;
wire   [6:0] tmp_52_fu_957_p2;
wire   [31:0] i2_cast_fu_968_p1;
wire   [31:0] tmp_25_fu_983_p3;
wire   [21:0] tmp_50_fu_1001_p4;
wire   [31:0] i4_cast_fu_1028_p1;
wire   [13:0] tmp_53_fu_1043_p1;
wire   [14:0] tmp_43_cast_fu_1047_p3;
wire   [14:0] tmp_54_fu_1055_p2;
wire   [14:0] tmp_56_fu_1069_p2;
wire   [21:0] tmp_57_fu_1078_p4;
wire   [14:0] tmp_58_fu_1094_p1;
wire   [14:0] tmp_59_fu_1098_p2;
wire   [3:0] tmp_47_fu_1135_p1;
wire   [14:0] tmp_56_cast_fu_1139_p3;
wire   [14:0] tmp_45_fu_1131_p1;
wire   [14:0] tmp_49_fu_1147_p2;
reg   [27:0] ap_NS_fsm;
reg    ap_condition_178;
reg    ap_condition_453;

// power-on initialization
initial begin
#0 ap_CS_fsm = 28'd1;
#0 cal_flag = 1'd0;
#0 cnt = 32'd0;
#0 i = 32'd0;
#0 j = 32'd0;
end

DWT_data_in #(
    .DataWidth( 32 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
data_in_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_in_address0),
    .ce0(data_in_ce0),
    .we0(data_in_we0),
    .d0(data),
    .q0(data_in_q0)
);

DWT_filter_g #(
    .DataWidth( 32 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
filter_g_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(filter_g_address0),
    .ce0(filter_g_ce0),
    .q0(filter_g_q0)
);

DWT_filter_h #(
    .DataWidth( 32 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
filter_h_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(filter_h_address0),
    .ce0(filter_h_ce0),
    .q0(filter_h_q0)
);

DWT_data_input #(
    .DataWidth( 32 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
data_input_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_input_address0),
    .ce0(data_input_ce0),
    .we0(data_input_we0),
    .d0(data_input_d0),
    .q0(data_input_q0)
);

DWT_data_input #(
    .DataWidth( 32 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
data_store_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_store_address0),
    .ce0(data_store_ce0),
    .we0(data_store_we0),
    .d0(data_store_d0),
    .q0(data_store_q0)
);

DWT_data_output #(
    .DataWidth( 32 ),
    .AddressRange( 10240 ),
    .AddressWidth( 14 ))
data_output_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_output_address0),
    .ce0(data_output_ce0),
    .we0(data_output_we0),
    .d0(data_output_d0),
    .q0(data_output_q0)
);

DWT_fadd_32ns_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DWT_fadd_32ns_32nbkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_store_load_1_reg_1363),
    .din1(tmp_34_reg_1358),
    .ce(1'b1),
    .dout(grp_fu_571_p2)
);

DWT_fadd_32ns_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DWT_fadd_32ns_32nbkb_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_output_load_1_reg_1373),
    .din1(tmp_37_reg_1368),
    .ce(1'b1),
    .dout(grp_fu_575_p2)
);

DWT_fmul_32ns_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DWT_fmul_32ns_32ncud_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_input_load_reg_1342),
    .din1(filter_g_load_reg_1348),
    .ce(1'b1),
    .dout(grp_fu_579_p2)
);

DWT_fmul_32ns_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DWT_fmul_32ns_32ncud_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_input_load_reg_1342),
    .din1(filter_h_load_reg_1353),
    .ce(1'b1),
    .dout(grp_fu_583_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond5_fu_713_p2 == 1'd1))) begin
        cal_length_reg_465 <= 32'd1024;
    end else if (((1'b1 == ap_CS_fsm_state26) & (exitcond3_fu_1114_p2 == 1'd1))) begin
        cal_length_reg_465 <= i_7_reg_1303;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (tmp_2_fu_707_p2 == 1'd1))) begin
        i1_reg_443 <= 11'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        i1_reg_443 <= i_1_reg_1216;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        i2_reg_499 <= i_2_reg_1391;
    end else if (((1'b1 == ap_CS_fsm_state9) & (tmp_12_fu_828_p2 == 1'd1))) begin
        i2_reg_499 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (tmp_22_fu_972_p2 == 1'd1))) begin
        i3_reg_511 <= i_7_reg_1303;
    end else if (((1'b1 == ap_CS_fsm_state22) & (icmp_fu_1011_p2 == 1'd1))) begin
        i3_reg_511 <= i_3_fu_1022_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_fu_1011_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        i4_reg_520 <= 31'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        i4_reg_520 <= i_4_reg_1412;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) & (tmp_40_fu_1032_p2 == 1'd1))) begin
        i5_reg_531 <= i_7_reg_1303;
    end else if (((1'b1 == ap_CS_fsm_state25) & (icmp5_fu_1088_p2 == 1'd1))) begin
        i5_reg_531 <= i_5_fu_1108_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp5_fu_1088_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        i6_reg_540 <= 11'd0;
    end else if (((exitcond3_fu_1114_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        i6_reg_540 <= i_6_fu_1120_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((1'b1 == ap_condition_453)) begin
            i_load_1_reg_551 <= i;
        end else if ((1'b1 == ap_condition_178)) begin
            i_load_1_reg_551 <= tmp_18_fu_816_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_6_fu_653_p2 == 1'd1))) begin
        invdar1_reg_409 <= 3'd0;
    end else if (((tmp_s_fu_690_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (tmp_9_fu_684_p2 == 1'd1))) begin
        invdar1_reg_409 <= indvarinc1_reg_1189;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_fu_684_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        invdar2_reg_421 <= indvarinc2_fu_665_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        invdar2_reg_421 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_s_fu_690_p2 == 1'd1) & (tmp_9_fu_684_p2 == 1'd1))) begin
        invdar3_reg_432 <= 11'd0;
    end else if (((tmp_2_fu_707_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        invdar3_reg_432 <= indvarinc3_fu_696_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_i_fu_620_p2 == 1'd1) & (cal_flag_load_load_fu_587_p1 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        invdar_reg_398 <= 11'd0;
    end else if (((tmp_6_fu_653_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        invdar_reg_398 <= indvarinc_fu_642_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((1'b1 == ap_condition_453)) begin
            j_load_2_reg_560 <= j;
        end else if ((1'b1 == ap_condition_178)) begin
            j_load_2_reg_560 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        k_reg_488 <= k_1_reg_1319;
    end else if (((tmp_12_fu_828_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        k_reg_488 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond5_fu_713_p2 == 1'd1))) begin
        level_reg_454 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state26) & (exitcond3_fu_1114_p2 == 1'd1))) begin
        level_reg_454 <= level_1_reg_1234;
    end
end

always @ (posedge ap_clk) begin
    if (((cal_flag_load_reg_1170 == 1'd0) & (exitcond4_fu_730_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        n_reg_477 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state10) & ((tmp_29_fu_937_p2 == 1'd1) | (tmp_23_fu_926_p2 == 1'd1)))) begin
        n_reg_477 <= n_1_reg_1282;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & ((cal_flag_load_reg_1170 == 1'd1) | (exitcond4_fu_730_p2 == 1'd1)))) begin
        cal_flag <= 1'd1;
        tmp_11_reg_1262 <= tmp_11_fu_800_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        cal_flag_load_reg_1170 <= cal_flag;
    end
end

always @ (posedge ap_clk) begin
    if (((cal_flag_load_load_fu_587_p1 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_i_fu_591_p2 == 1'd1))) begin
        cnt <= tmp_1_i_fu_602_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        data_input_load_reg_1342 <= data_input_q0;
        filter_g_load_reg_1348 <= filter_g_q0;
        filter_h_load_reg_1353 <= filter_h_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_12_fu_828_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        data_output_addr_1_reg_1293 <= tmp_54_cast_fu_859_p1;
        data_store_addr_1_reg_1298 <= tmp_17_fu_845_p1;
        tmp_42_reg_1287[31 : 1] <= tmp_42_fu_839_p2[31 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        data_output_load_1_reg_1373 <= data_output_q0;
        data_store_load_1_reg_1363 <= data_store_q0;
        tmp_34_reg_1358 <= grp_fu_579_p2;
        tmp_37_reg_1368 <= grp_fu_583_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (((cal_flag_load_reg_1170 == 1'd1) & (tmp_11_fu_800_p2 == 1'd0) & (tmp_13_fu_810_p2 == 1'd1)) | ((tmp_11_fu_800_p2 == 1'd0) & (tmp_13_fu_810_p2 == 1'd1) & (exitcond4_fu_730_p2 == 1'd1))))) begin
        i <= tmp_18_fu_816_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i_1_reg_1216 <= i_1_fu_719_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        i_2_reg_1391 <= i_2_fu_977_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        i_4_reg_1412 <= i_4_fu_1037_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (tmp_12_fu_828_p2 == 1'd1))) begin
        i_7_reg_1303 <= i_7_fu_912_p3;
        tmp_14_reg_1310 <= tmp_14_fu_920_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        indvarinc1_reg_1189 <= indvarinc1_fu_659_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        j <= tmp_21_fu_1158_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        k_1_reg_1319 <= k_1_fu_931_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((cal_flag_load_reg_1170 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        level_1_reg_1234 <= level_1_fu_736_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        n_1_reg_1282 <= n_1_fu_833_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((cal_flag_load_reg_1170 == 1'd0) & (exitcond4_fu_730_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        tmp_16_reg_1244[6 : 1] <= tmp_16_fu_772_p2[6 : 1];
        tmp_4_reg_1239 <= tmp_4_fu_742_p2;
        tmp_50_cast_reg_1249[13 : 11] <= tmp_50_cast_fu_786_p1[13 : 11];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_35_reg_1378 <= grp_fu_571_p2;
        tmp_38_reg_1383 <= grp_fu_575_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((cal_flag_load_load_fu_587_p1 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_3_i_reg_1177 <= tmp_3_i_fu_620_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_713_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        tmp_3_reg_1221[10 : 0] <= tmp_3_fu_725_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_40_fu_1032_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        tmp_55_reg_1422 <= tmp_55_fu_1065_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((cal_flag_load_load_fu_587_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((tmp_i_fu_591_p2 == 1'd0)) begin
            ap_phi_mux_cnt_loc_i_phi_fu_381_p4 = cnt;
        end else if ((tmp_i_fu_591_p2 == 1'd1)) begin
            ap_phi_mux_cnt_loc_i_phi_fu_381_p4 = tmp_1_i_fu_602_p2;
        end else begin
            ap_phi_mux_cnt_loc_i_phi_fu_381_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_cnt_loc_i_phi_fu_381_p4 = 'bx;
    end
end

always @ (*) begin
    if (((cal_flag_load_load_fu_587_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((tmp_i_fu_591_p2 == 1'd0)) begin
            ap_phi_mux_read_ready_i_phi_fu_390_p4 = 1'd0;
        end else if ((tmp_i_fu_591_p2 == 1'd1)) begin
            ap_phi_mux_read_ready_i_phi_fu_390_p4 = 1'd1;
        end else begin
            ap_phi_mux_read_ready_i_phi_fu_390_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_read_ready_i_phi_fu_390_p4 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        data_in_address0 = tmp_3_fu_725_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        data_in_address0 = tmp_2_i_fu_615_p1;
    end else begin
        data_in_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        data_in_ce0 = 1'b1;
    end else begin
        data_in_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((cal_flag_load_load_fu_587_p1 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_i_fu_591_p2 == 1'd1))) begin
        data_in_we0 = 1'b1;
    end else begin
        data_in_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        data_input_address0 = tmp_36_fu_1017_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        data_input_address0 = tmp_27_fu_996_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        data_input_address0 = tmp_32_fu_948_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        data_input_address0 = tmp_3_reg_1221;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        data_input_address0 = tmp_1_fu_702_p1;
    end else begin
        data_input_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state5))) begin
        data_input_ce0 = 1'b1;
    end else begin
        data_input_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        data_input_d0 = data_store_q0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        data_input_d0 = data_in_q0;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state5))) begin
        data_input_d0 = 32'd0;
    end else begin
        data_input_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state22) & (icmp_fu_1011_p2 == 1'd1)))) begin
        data_input_we0 = 1'b1;
    end else begin
        data_input_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) & (((tmp_3_i_reg_1177 == 1'd1) & (tmp_11_reg_1262 == 1'd0)) | ((cal_flag_load_reg_1170 == 1'd1) & (tmp_11_reg_1262 == 1'd0))))) begin
        data_out_ap_vld = 1'b1;
    end else begin
        data_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        data_output_address0 = tmp_57_cast_fu_1153_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        data_output_address0 = tmp_61_cast_fu_1103_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        data_output_address0 = tmp_60_cast_fu_1073_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        data_output_address0 = tmp_59_cast_fu_1060_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state19))) begin
        data_output_address0 = data_output_addr_1_reg_1293;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        data_output_address0 = tmp_7_fu_679_p1;
    end else begin
        data_output_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state4))) begin
        data_output_ce0 = 1'b1;
    end else begin
        data_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        data_output_d0 = data_output_q0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        data_output_d0 = tmp_38_reg_1383;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state4))) begin
        data_output_d0 = 32'd0;
    end else begin
        data_output_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state25) & (icmp5_fu_1088_p2 == 1'd1)))) begin
        data_output_we0 = 1'b1;
    end else begin
        data_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        data_store_address0 = tmp_48_fu_1126_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        data_store_address0 = tmp_26_fu_991_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state19))) begin
        data_store_address0 = data_store_addr_1_reg_1298;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        data_store_address0 = tmp_5_fu_648_p1;
    end else begin
        data_store_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state2))) begin
        data_store_ce0 = 1'b1;
    end else begin
        data_store_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        data_store_d0 = tmp_35_reg_1378;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state2))) begin
        data_store_d0 = 32'd0;
    end else begin
        data_store_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state2) | ((exitcond3_fu_1114_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26)))) begin
        data_store_we0 = 1'b1;
    end else begin
        data_store_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        filter_g_ce0 = 1'b1;
    end else begin
        filter_g_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        filter_h_ce0 = 1'b1;
    end else begin
        filter_h_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((cal_flag_load_load_fu_587_p1 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        read_over_ap_vld = 1'b1;
    end else begin
        read_over_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((cal_flag_load_load_fu_587_p1 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        read_ready_ap_vld = 1'b1;
    end else begin
        read_ready_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) & (((tmp_3_i_reg_1177 == 1'd1) & (tmp_11_reg_1262 == 1'd0)) | ((cal_flag_load_reg_1170 == 1'd1) & (tmp_11_reg_1262 == 1'd0))))) begin
        write_valid_ap_vld = 1'b1;
    end else begin
        write_valid_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((tmp_3_i_fu_620_p2 == 1'd1) & (cal_flag_load_load_fu_587_p1 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((tmp_3_i_fu_620_p2 == 1'd0) & (cal_flag_load_load_fu_587_p1 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else if (((cal_flag_load_load_fu_587_p1 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (tmp_6_fu_653_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (tmp_s_fu_690_p2 == 1'd1) & (tmp_9_fu_684_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if (((tmp_s_fu_690_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (tmp_9_fu_684_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (tmp_2_fu_707_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (exitcond5_fu_713_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (((cal_flag_load_reg_1170 == 1'd1) & (tmp_11_fu_800_p2 == 1'd0)) | ((tmp_11_fu_800_p2 == 1'd0) & (exitcond4_fu_730_p2 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else if (((1'b1 == ap_CS_fsm_state8) & (((cal_flag_load_reg_1170 == 1'd1) & (tmp_11_fu_800_p2 == 1'd1)) | ((tmp_11_fu_800_p2 == 1'd1) & (exitcond4_fu_730_p2 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (tmp_12_fu_828_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & ((tmp_29_fu_937_p2 == 1'd1) | (tmp_23_fu_926_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (tmp_22_fu_972_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state22 : begin
            if (((icmp_fu_1011_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (tmp_40_fu_1032_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state25 : begin
            if (((icmp5_fu_1088_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (exitcond3_fu_1114_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_condition_178 = (((cal_flag_load_reg_1170 == 1'd1) & (tmp_11_fu_800_p2 == 1'd0) & (tmp_13_fu_810_p2 == 1'd1)) | ((tmp_11_fu_800_p2 == 1'd0) & (tmp_13_fu_810_p2 == 1'd1) & (exitcond4_fu_730_p2 == 1'd1)));
end

always @ (*) begin
    ap_condition_453 = (((cal_flag_load_reg_1170 == 1'd1) & (tmp_13_fu_810_p2 == 1'd0) & (tmp_11_fu_800_p2 == 1'd0)) | ((tmp_13_fu_810_p2 == 1'd0) & (tmp_11_fu_800_p2 == 1'd0) & (exitcond4_fu_730_p2 == 1'd1)));
end

assign cal_flag_load_load_fu_587_p1 = cal_flag;

assign data_out = data_output_q0;

assign exitcond3_fu_1114_p2 = ((i6_reg_540 == 11'd1024) ? 1'b1 : 1'b0);

assign exitcond4_fu_730_p2 = ((level_reg_454 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond5_fu_713_p2 = ((i1_reg_443 == 11'd1024) ? 1'b1 : 1'b0);

assign filter_g_address0 = tmp_58_cast_fu_962_p1;

assign filter_h_address0 = tmp_58_cast_fu_962_p1;

assign i2_cast_fu_968_p1 = i2_reg_499;

assign i4_cast_fu_1028_p1 = i4_reg_520;

assign i_1_fu_719_p2 = (i1_reg_443 + 11'd1);

assign i_2_fu_977_p2 = (i2_reg_499 + 31'd1);

assign i_3_fu_1022_p2 = ($signed(i3_reg_511) + $signed(32'd1));

assign i_4_fu_1037_p2 = (i4_reg_520 + 31'd1);

assign i_5_fu_1108_p2 = (32'd1 + i5_reg_531);

assign i_6_fu_1120_p2 = (i6_reg_540 + 11'd1);

assign i_7_fu_912_p3 = ((tmp_20_fu_864_p3[0:0] === 1'b1) ? p_neg_t_fu_892_p2 : tmp_33_fu_908_p1);

assign icmp5_fu_1088_p2 = (($signed(tmp_57_fu_1078_p4) < $signed(22'd1)) ? 1'b1 : 1'b0);

assign icmp_fu_1011_p2 = (($signed(tmp_50_fu_1001_p4) < $signed(22'd1)) ? 1'b1 : 1'b0);

assign indvarinc1_fu_659_p2 = (invdar1_reg_409 + 3'd1);

assign indvarinc2_fu_665_p2 = (invdar2_reg_421 + 11'd1);

assign indvarinc3_fu_696_p2 = (invdar3_reg_432 + 11'd1);

assign indvarinc_fu_642_p2 = (invdar_reg_398 + 11'd1);

assign k_1_fu_931_p2 = (k_reg_488 + 32'd1);

assign level_1_fu_736_p2 = (level_reg_454 + 3'd1);

assign n_1_fu_833_p2 = ($signed(n_reg_477) + $signed(32'd1));

assign p_lshr_f_fu_898_p4 = {{cal_length_reg_465[31:1]}};

assign p_lshr_fu_878_p4 = {{p_neg_fu_872_p2[31:1]}};

assign p_neg_fu_872_p2 = (32'd0 - cal_length_reg_465);

assign p_neg_t_fu_892_p2 = (32'd0 - tmp_30_fu_888_p1);

assign p_shl1_cast_fu_768_p1 = tmp_10_fu_760_p3;

assign p_shl_cast_fu_756_p1 = tmp_8_fu_748_p3;

assign read_over = tmp_3_i_fu_620_p2;

assign read_ready = read_ready_write_ass_fu_626_p2;

assign read_ready_write_ass_fu_626_p2 = (tmp_3_i_fu_620_p2 | ap_phi_mux_read_ready_i_phi_fu_390_p4);

assign tmp_10_fu_760_p3 = {{level_reg_454}, {1'd0}};

assign tmp_11_fu_800_p2 = ((i == 32'd5) ? 1'b1 : 1'b0);

assign tmp_12_fu_828_p2 = (($signed(n_reg_477) > $signed(tmp_4_reg_1239)) ? 1'b1 : 1'b0);

assign tmp_13_fu_810_p2 = ((j == 32'd1024) ? 1'b1 : 1'b0);

assign tmp_14_fu_920_p2 = ($signed(i_7_fu_912_p3) + $signed(32'd4294967295));

assign tmp_16_fu_772_p2 = (p_shl1_cast_fu_768_p1 + p_shl_cast_fu_756_p1);

assign tmp_17_fu_845_p1 = n_reg_477;

assign tmp_18_fu_816_p2 = (i + 32'd1);

assign tmp_19_fu_778_p3 = {{level_reg_454}, {11'd0}};

assign tmp_1_fu_702_p1 = invdar3_reg_432;

assign tmp_1_i_fu_602_p0 = cnt;

assign tmp_1_i_fu_602_p2 = ($signed(tmp_1_i_fu_602_p0) + $signed(32'd1));

assign tmp_20_fu_864_p3 = cal_length_reg_465[32'd31];

assign tmp_21_fu_1158_p2 = (32'd1 + j_load_2_reg_560);

assign tmp_22_fu_972_p2 = (($signed(i2_cast_fu_968_p1) > $signed(tmp_14_reg_1310)) ? 1'b1 : 1'b0);

assign tmp_23_fu_926_p2 = (($signed(k_reg_488) > $signed(tmp_42_reg_1287)) ? 1'b1 : 1'b0);

assign tmp_25_fu_983_p3 = {{i2_reg_499}, {1'd0}};

assign tmp_26_fu_991_p1 = tmp_25_fu_983_p3;

assign tmp_27_fu_996_p1 = i2_reg_499;

assign tmp_29_fu_937_p2 = (($signed(k_reg_488) > $signed(32'd9)) ? 1'b1 : 1'b0);

assign tmp_2_fu_707_p2 = ((invdar3_reg_432 == 11'd2047) ? 1'b1 : 1'b0);

assign tmp_2_i_fu_615_p0 = cnt;

assign tmp_2_i_fu_615_p1 = tmp_2_i_fu_615_p0;

assign tmp_30_fu_888_p1 = p_lshr_fu_878_p4;

assign tmp_31_fu_943_p2 = (tmp_42_reg_1287 - k_reg_488);

assign tmp_32_fu_948_p1 = $signed(tmp_31_fu_943_p2);

assign tmp_33_fu_908_p1 = p_lshr_f_fu_898_p4;

assign tmp_36_fu_1017_p1 = i3_reg_511;

assign tmp_3_fu_725_p1 = i1_reg_443;

assign tmp_3_i_fu_620_p2 = ((ap_phi_mux_cnt_loc_i_phi_fu_381_p4 == 32'd1024) ? 1'b1 : 1'b0);

assign tmp_40_fu_1032_p2 = (($signed(i4_cast_fu_1028_p1) > $signed(tmp_14_reg_1310)) ? 1'b1 : 1'b0);

assign tmp_42_fu_839_p2 = n_reg_477 << 32'd1;

assign tmp_43_cast_fu_1047_p3 = {{tmp_53_fu_1043_p1}, {1'd0}};

assign tmp_43_fu_850_p1 = n_reg_477[14:0];

assign tmp_44_fu_854_p2 = (tmp_43_fu_850_p1 + tmp_50_cast_reg_1249);

assign tmp_45_fu_1131_p1 = j_load_2_reg_560[14:0];

assign tmp_47_fu_1135_p1 = i_load_1_reg_551[3:0];

assign tmp_48_fu_1126_p1 = i6_reg_540;

assign tmp_49_fu_1147_p2 = (tmp_56_cast_fu_1139_p3 + tmp_45_fu_1131_p1);

assign tmp_4_fu_742_p2 = ($signed(cal_length_reg_465) + $signed(32'd4294967295));

assign tmp_50_cast_fu_786_p1 = tmp_19_fu_778_p3;

assign tmp_50_fu_1001_p4 = {{i3_reg_511[31:10]}};

assign tmp_51_fu_953_p1 = k_reg_488[6:0];

assign tmp_52_fu_957_p2 = (tmp_16_reg_1244 + tmp_51_fu_953_p1);

assign tmp_53_fu_1043_p1 = i4_reg_520[13:0];

assign tmp_54_cast_fu_859_p1 = $signed(tmp_44_fu_854_p2);

assign tmp_54_fu_1055_p2 = (tmp_50_cast_reg_1249 + tmp_43_cast_fu_1047_p3);

assign tmp_55_fu_1065_p1 = i4_reg_520[14:0];

assign tmp_56_cast_fu_1139_p3 = {{tmp_47_fu_1135_p1}, {11'd0}};

assign tmp_56_fu_1069_p2 = (tmp_50_cast_reg_1249 + tmp_55_reg_1422);

assign tmp_57_cast_fu_1153_p1 = $signed(tmp_49_fu_1147_p2);

assign tmp_57_fu_1078_p4 = {{i5_reg_531[31:10]}};

assign tmp_58_cast_fu_962_p1 = $signed(tmp_52_fu_957_p2);

assign tmp_58_fu_1094_p1 = i5_reg_531[14:0];

assign tmp_59_cast_fu_1060_p1 = tmp_54_fu_1055_p2;

assign tmp_59_fu_1098_p2 = (tmp_50_cast_reg_1249 + tmp_58_fu_1094_p1);

assign tmp_5_fu_648_p1 = invdar_reg_398;

assign tmp_60_cast_fu_1073_p1 = tmp_56_fu_1069_p2;

assign tmp_61_cast_fu_1103_p1 = $signed(tmp_59_fu_1098_p2);

assign tmp_6_fu_653_p2 = ((invdar_reg_398 == 11'd2047) ? 1'b1 : 1'b0);

assign tmp_7_fu_679_p1 = tmp_fu_671_p3;

assign tmp_8_fu_748_p3 = {{level_reg_454}, {3'd0}};

assign tmp_9_fu_684_p2 = ((invdar2_reg_421 == 11'd2047) ? 1'b1 : 1'b0);

assign tmp_fu_671_p3 = {{invdar1_reg_409}, {invdar2_reg_421}};

assign tmp_i_fu_591_p2 = ((read_valid == 32'd1) ? 1'b1 : 1'b0);

assign tmp_s_fu_690_p2 = ((invdar1_reg_409 == 3'd4) ? 1'b1 : 1'b0);

assign write_valid = 32'd1;

always @ (posedge ap_clk) begin
    tmp_3_reg_1221[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    tmp_16_reg_1244[0] <= 1'b0;
    tmp_50_cast_reg_1249[10:0] <= 11'b00000000000;
    tmp_50_cast_reg_1249[14] <= 1'b0;
    tmp_42_reg_1287[0] <= 1'b0;
end

endmodule //DWT
